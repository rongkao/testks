#pragma once

/**
 * Name: TL
 * Version: 0525
 */

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
	// --------------------------------------------------
	// # Enums
	// --------------------------------------------------
	/**
	 * Enum TLScheme.ETLCursorType
	 */
	enum class ETLCursorType : uint8_t
	{
		None                 = 0,
		Default              = 1,
		UseFo                = 2,
		Talk                 = 3,
		Hit                  = 4,
		Looting              = 5,
		UseFoDisable         = 6,
		TalkDisable          = 7,
		LootingDisable       = 8,
		Move                 = 9,
		Hidden               = 10,
		TwoDepth             = 11,
		TwoDepthDisable      = 12,
		WorldPinEditNormal   = 13,
		WorldPinEditDisable  = 14,
		AutoPathFollow       = 15,
		GamepadWorldmap      = 16,
		Rotate               = 17,
		InspectionMove       = 18,
		InspectionSelect     = 19,
		InspectionWipe       = 20,
		InspectionControl    = 21,
		Search               = 22,
		Teleport             = 23,
		HuntingAreaInfo      = 24,
		IndoorMap            = 25,
		CustomizeLookAt      = 26,
		CustomizeLookAtPause = 27,
		UIMovable            = 28,
		UIMoving             = 29,
		MAX                  = 30
	};

	/**
	 * Enum TLScheme.ECutscenePlayResult
	 */
	enum class ECutscenePlayResult : uint8_t
	{
		Failed      = 0,
		Interrupted = 1,
		Completed   = 2,
		MAX         = 3
	};

	/**
	 * Enum TLScheme.EItemGrade
	 */
	enum class EItemGrade : uint8_t
	{
		kError     = 0,
		kMisc      = 1,
		kC         = 2,
		kB         = 3,
		kA         = 4,
		kAA        = 5,
		kAAA       = 6,
		kS         = 7,
		kSS        = 8,
		kSSS       = 9,
		kEndOfEnum = 10,
		MAX        = 11
	};

	/**
	 * Enum TLScheme.EItemCategory
	 */
	enum class EItemCategory : uint8_t
	{
		kNone                       = 0,
		kDagger                     = 1,
		kSword                      = 2,
		kShield                     = 3,
		kSword2h                    = 4,
		kStaff                      = 5,
		kBow                        = 6,
		kCrossbow                   = 7,
		kGrimoire                   = 8,
		kWand                       = 9,
		kScroll                     = 10,
		kSpear                      = 11,
		kHead                       = 12,
		kChest                      = 13,
		kHands                      = 14,
		kLegs                       = 15,
		kFeet                       = 16,
		kCloak                      = 17,
		kNecklace                   = 18,
		kEarring                    = 19,
		kRing                       = 20,
		kBracelet                   = 21,
		kAmmo                       = 22,
		kSeal                       = 23,
		kCrest                      = 24,
		kShirt                      = 25,
		kFishingRod                 = 26,
		kBelt                       = 27,
		kPotion                     = 28,
		kUnselectableFixedPackage   = 29,
		kUnselectableRandomPackage  = 30,
		kSelectableFixedPackage     = 31,
		kSelectableRandomPackage    = 32,
		kFood                       = 33,
		kMagicScroll                = 34,
		kReturnScroll               = 35,
		kEnchantScroll              = 36,
		kSkillCustom                = 37,
		kSkillScroll                = 38,
		kWaypointScroll             = 39,
		kTeleportScroll             = 40,
		kPolymorphScroll            = 41,
		kPolymorphRandomScroll      = 42,
		kPolymorphStone             = 43,
		kMagicDollStone             = 44,
		kMagicDollBookScroll        = 45,
		kStatReset                  = 46,
		kContractScroll             = 47,
		kDecomposeEquip             = 48,
		kDecomposeSkillScroll       = 49,
		kGuildHomeTeleportScroll    = 50,
		kExp                        = 51,
		kKey                        = 52,
		kRune                       = 53,
		kPowder                     = 54,
		kMisc                       = 55,
		kMaterial                   = 56,
		kPass                       = 57,
		kCraftingRecipe             = 58,
		kEventMisc                  = 59,
		kGathering                  = 60,
		kGuildFlag                  = 61,
		kSkillMisc                  = 62,
		kPolymorphPiece             = 63,
		kMagicdollPiece             = 64,
		kRubbingScroll              = 65,
		kGold                       = 66,
		kDiamond                    = 67,
		kPolymorphEnchantStr        = 68,
		kPolymorphEnchantDex        = 69,
		kPolymorphEnchantCon        = 70,
		kPolymorphEnchantInt        = 71,
		kPolymorphEnchantWis        = 72,
		kPolymorphEnchantCha        = 73,
		kPolymorphEnchantControl    = 74,
		kPolymorphEnchantAttack     = 75,
		kPolymorphEnchantMove       = 76,
		kPolymorphEnchantDefense    = 77,
		kPolymorphEnchantWeak       = 78,
		kVirtualMiscContract        = 79,
		kVirtualMiscCodexInspection = 80,
		kVirtualMiscCodex           = 81,
		kDummy                      = 82,
		kWeaponMastery              = 83,
		kDungeonPointStone          = 84,
		kSeasonPass                 = 85,
		kTreasureBoxKey             = 86,
		kTimeLimitDungeonCharger    = 87,
		kGrowthPass                 = 88,
		kGacha                      = 89,
		kGachaTrigger               = 90,
		kSkillPoint                 = 91,
		kSkillEnchantAttack         = 92,
		kSkillEnchantMove           = 93,
		kSkillEnchantDebuff         = 94,
		kSkillEnchantBuff           = 95,
		kSkillEnchantRecovery       = 96,
		kSkillEnchantCommon         = 97,
		kVowRingTarget              = 98,
		kVowRingAll                 = 99,
		kSocialMotion               = 100,
		kPotionElixir               = 101,
		kPotionHeal                 = 102,
		kPotionLeaf                 = 103,
		kEnchantPoint               = 104,
		kMaterialMain               = 105,
		kMaterialPowder             = 106,
		kMaterialSkillpaper         = 107,
		kMaterialJewel              = 108,
		kMaterialSub                = 109,
		kMaterialFood               = 110,
		kMaterialEtc                = 111,
		kSkillPointCommon           = 112,
		kEndOfEnum                  = 113,
		MAX                         = 114
	};

	/**
	 * Enum TLScheme.EItemType
	 */
	enum class EItemType : uint8_t
	{
		kNone   = 0,
		kEquip  = 1,
		kUsable = 2,
		kMisc   = 3,
		kMoney  = 4,
		kAmmo   = 5,
		kKey    = 6,
		kDummy  = 7,
		MAX     = 8
	};

	/**
	 * Enum TLScheme.ETLPolymorphUICategory
	 */
	enum class ETLPolymorphUICategory : uint8_t
	{
		COMBAT     = 0,
		MOBILITY   = 1,
		CAMOUFLAGE = 2,
		NONE       = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.ETLPolymorphPictogramType
	 */
	enum class ETLPolymorphPictogramType : uint8_t
	{
		None            = 0,
		Dash            = 1,
		Glide           = 2,
		Swim            = 3,
		SiegeWeapon     = 4,
		Usurper         = 5,
		Overlord        = 6,
		SiegeTaxCarrier = 7,
		MAX             = 8
	};

	/**
	 * Enum TLScheme.ETLPolymorphCategory
	 */
	enum class ETLPolymorphCategory : uint8_t
	{
		POLYMORPH_FORCING     = 0,
		POLYMORPH_INTERACTION = 1,
		POLYMORPH_STONE       = 2,
		POLYMORPH_SCROLL      = 3,
		MAX                   = 4,
		NONE                  = 5
	};

	/**
	 * Enum TLScheme.ETLMobiltyType
	 */
	enum class ETLMobiltyType : uint8_t
	{
		kNone      = 0,
		kGliding   = 1,
		kDash      = 2,
		kSwimming  = 3,
		kEndOfEnum = 4,
		MAX        = 5
	};

	/**
	 * Enum TLScheme.ETLPolymorphMainWeaponType
	 */
	enum class ETLPolymorphMainWeaponType : uint8_t
	{
		kNone      = 0,
		kDagger    = 1,
		kSword     = 2,
		kSword2h   = 3,
		kStaff     = 4,
		kBow       = 5,
		kCrossBow  = 6,
		kWand      = 7,
		kSpear     = 8,
		kEndOfEnum = 9,
		MAX        = 10
	};

	/**
	 * Enum TLScheme.ETLSpecialPolymorphType
	 */
	enum class ETLSpecialPolymorphType : uint8_t
	{
		kNone        = 0,
		kMobility    = 1,
		kSiegeWeapon = 2,
		kSocial      = 3,
		kTemporary   = 4,
		kEndOfEnum   = 5,
		MAX          = 6
	};

	/**
	 * Enum TLScheme.ETLBodySize
	 */
	enum class ETLBodySize : uint8_t
	{
		Small      = 0,
		Medium     = 1,
		Large      = 2,
		kEndOfEnum = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.ECooldownGroup
	 */
	enum class ECooldownGroup : uint8_t
	{
		kError                             = 0,
		kNone                              = 1,
		kHeroPermanentStart                = 2,
		kHeroPermanent_01                  = 3,
		kHeroPermanent_02                  = 4,
		kHeroPermanent_03                  = 5,
		kHeroPermanent_04                  = 6,
		kHeroPermanent_05                  = 7,
		kHeroPermanent_06                  = 8,
		kHeroPermanent_07                  = 9,
		kHeroPermanent_08                  = 10,
		kHeroPermanent_09                  = 11,
		kHeroPermanent                     = 12,
		kHeroPermanent01                   = 13,
		kHeroPermanent02                   = 14,
		kHeroPermanent03                   = 15,
		kHeroPermanent04                   = 16,
		kHeroPermanent05                   = 17,
		kHeroPermanent06                   = 18,
		kHeroPermanent07                   = 19,
		kHeroPermanent08                   = 20,
		kHeroPermanent09                   = 21,
		kHeroPermanent10                   = 22,
		kHeroPermanent11                   = 23,
		kHeroPermanent12                   = 24,
		kHeroPermanent13                   = 25,
		kHeroPermanent14                   = 26,
		kHeroPermanent15                   = 27,
		kHeroPermanent16                   = 28,
		kHeroPermanent17                   = 29,
		kHeroPermanent18                   = 30,
		kHeroPermanent19                   = 31,
		kHeroPermanent20                   = 32,
		kHeroPermanentEnd                  = 33,
		kHeroTemporaryStart                = 34,
		kHeroTemporary_01                  = 35,
		kHeroTemporary_02                  = 36,
		kHeroTemporary_03                  = 37,
		kHeroTemporary_04                  = 38,
		kHeroTemporary_05                  = 39,
		kHeroTemporary_06                  = 40,
		kHeroTemporary_07                  = 41,
		kHeroTemporary_08                  = 42,
		kHeroTemporary_09                  = 43,
		kHeroTemporary                     = 44,
		kHeroTemporary01                   = 45,
		kHeroTemporary02                   = 46,
		kHeroTemporary03                   = 47,
		kHeroTemporary04                   = 48,
		kHeroTemporary05                   = 49,
		kHeroTemporary06                   = 50,
		kHeroTemporary07                   = 51,
		kHeroTemporary08                   = 52,
		kHeroTemporary09                   = 53,
		kHeroTemporary10                   = 54,
		kHeroTemporary11                   = 55,
		kHeroTemporary12                   = 56,
		kHeroTemporary13                   = 57,
		kHeroTemporary14                   = 58,
		kHeroTemporary15                   = 59,
		kHeroTemporary16                   = 60,
		kHeroTemporary17                   = 61,
		kHeroTemporary18                   = 62,
		kHeroTemporary19                   = 63,
		kHeroTemporary20                   = 64,
		kHeroTemporary21                   = 65,
		kHeroTemporary22                   = 66,
		kHeroTemporary23                   = 67,
		kHeroTemporary24                   = 68,
		kHeroTemporary25                   = 69,
		kHeroTemporary26                   = 70,
		kHeroTemporary27                   = 71,
		kHeroTemporary28                   = 72,
		kHeroTemporary29                   = 73,
		kHeroTemporary30                   = 74,
		kHeroTemporary31                   = 75,
		kHeroTemporary32                   = 76,
		kHeroTemporary33                   = 77,
		kHeroTemporary34                   = 78,
		kHeroTemporary35                   = 79,
		kHeroTemporary36                   = 80,
		kHeroTemporary37                   = 81,
		kHeroTemporary38                   = 82,
		kHeroTemporary39                   = 83,
		kHeroTemporary40                   = 84,
		kHeroTemporary41                   = 85,
		kHeroTemporary42                   = 86,
		kHeroTemporary43                   = 87,
		kHeroTemporary44                   = 88,
		kHeroTemporary45                   = 89,
		kHeroTemporary46                   = 90,
		kHeroTemporary47                   = 91,
		kHeroTemporary48                   = 92,
		kHeroTemporary49                   = 93,
		kHeroTemporary50                   = 94,
		kHeroTemporary51                   = 95,
		kHeroTemporary52                   = 96,
		kHeroTemporary53                   = 97,
		kHeroTemporary54                   = 98,
		kHeroTemporary55                   = 99,
		kHeroTemporary56                   = 100,
		kHeroTemporary57                   = 101,
		kHeroTemporary58                   = 102,
		kHeroTemporary59                   = 103,
		kHeroTemporary60                   = 104,
		kHeroTemporary61                   = 105,
		kHeroTemporary62                   = 106,
		kHeroTemporary63                   = 107,
		kHeroTemporary64                   = 108,
		kHeroTemporary65                   = 109,
		kHeroTemporary66                   = 110,
		kHeroTemporary67                   = 111,
		kHeroTemporary68                   = 112,
		kHeroTemporary69                   = 113,
		kHeroTemporary70                   = 114,
		kHeroTemporary71                   = 115,
		kHeroTemporary72                   = 116,
		kHeroTemporary73                   = 117,
		kHeroTemporary74                   = 118,
		kHeroTemporary75                   = 119,
		kHeroTemporary76                   = 120,
		kHeroTemporary77                   = 121,
		kHeroTemporary78                   = 122,
		kHeroTemporary79                   = 123,
		kHeroTemporaryEnd                  = 124,
		kItemTemporaryStart                = 125,
		kItemTemporary_01                  = 126,
		kItemTemporary_02                  = 127,
		kItemTemporary_03                  = 128,
		kItemTemporary_04                  = 129,
		kItemTemporary_05                  = 130,
		kItemTemporary_06                  = 131,
		kItemTemporary_07                  = 132,
		kItemTemporary_08                  = 133,
		kItemTemporary_09                  = 134,
		kItemTemporary                     = 135,
		kItemTemporary01                   = 136,
		kItemTemporary02                   = 137,
		kItemTemporary03                   = 138,
		kItemTemporary04                   = 139,
		kItemTemporary05                   = 140,
		kItemTemporary06                   = 141,
		kItemTemporary07                   = 142,
		kItemTemporary08                   = 143,
		kItemTemporary09                   = 144,
		kItemTemporary10                   = 145,
		kItemTemporaryEnd                  = 146,
		kItemPermanentStart                = 147,
		kItemPermanent_01                  = 148,
		kItemPermanent_02                  = 149,
		kItemPermanent_03                  = 150,
		kItemPermanent_04                  = 151,
		kItemPermanent_05                  = 152,
		kItemPermanent_06                  = 153,
		kItemPermanent_07                  = 154,
		kItemPermanent_08                  = 155,
		kItemPermanent_09                  = 156,
		kItemPermanent                     = 157,
		kItemPermanentEnd                  = 158,
		kSystemTemporaryStart              = 159,
		kSystem_Resurrection_01            = 160,
		kSystem_Resurrection_02            = 161,
		kSystem_Mount01                    = 162,
		kSystem_Mount02                    = 163,
		kSystem_Gliding                    = 164,
		kSystem_Dash                       = 165,
		kSystem_Swimming                   = 166,
		kSystemTemporaryEnd                = 167,
		kSystemPermanentStart              = 168,
		kSystem_Combat_Polymorph           = 169,
		kSystemPermanentEnd                = 170,
		kGlobalCooldownGroupForPacketStart = 171,
		MAX                                = 172
	};

	/**
	 * Enum TLScheme.ETLBodyType
	 */
	enum class ETLBodyType : uint8_t
	{
		kNone  = 0,
		kSmall = 1,
		kLarge = 2,
		MAX    = 3
	};

	/**
	 * Enum TLScheme.EPcStatsType
	 */
	enum class EPcStatsType : uint8_t
	{
		kNone                                 = 0,
		kSTR                                  = 1,
		kDEX                                  = 2,
		kINT                                  = 3,
		kPER                                  = 4,
		kAttackPowerMainHand                  = 5,
		kAttackPowerOffHand                   = 6,
		kBonusAttackPowerMainHand             = 7,
		kBonusAttackPowerOffHand              = 8,
		kAttackPowerModifier                  = 9,
		kAttackSpeedMainHand                  = 10,
		kAttackSpeedOffHand                   = 11,
		kAttackSpeedModifier                  = 12,
		kAttackSpeedModifierOffHand           = 13,
		kAttackRangeMainHand                  = 14,
		kAttackRangeOffHand                   = 15,
		kAttackRangeModifier                  = 16,
		kHpMax                                = 17,
		kHpMaxModifier                        = 18,
		kHpRegen                              = 19,
		kHpRegenModifier                      = 20,
		kPotionHealModifier                   = 21,
		kMagicDollHealModifier                = 22,
		kMeleeArmor                           = 23,
		kRangeArmor                           = 24,
		kMagicArmor                           = 25,
		kArmorModifier                        = 26,
		kAttackRating                         = 27,
		kShieldBlockChance                    = 28,
		kShieldBlockChancePenetration         = 29,
		kShieldBlockEfficiency                = 30,
		kCostMax                              = 31,
		kCostRegen                            = 32,
		kCostRegenModifier                    = 33,
		kCostSpend                            = 34,
		kCostConsumptionModifier              = 35,
		kMeleeCriticalAttack                  = 36,
		kRangeCriticalAttack                  = 37,
		kMagicCriticalAttack                  = 38,
		kMeleeCriticalDefense                 = 39,
		kRangeCriticalDefense                 = 40,
		kMagicCriticalDefense                 = 41,
		kMeleeDoubleAttack                    = 42,
		kRangeDoubleAttack                    = 43,
		kMagicDoubleAttack                    = 44,
		kMeleeDoubleDefense                   = 45,
		kRangeDoubleDefense                   = 46,
		kMagicDoubleDefense                   = 47,
		kMeleeAccuracy                        = 48,
		kRangeAccuracy                        = 49,
		kMagicAccuracy                        = 50,
		kMeleeEvasion                         = 51,
		kRangeEvasion                         = 52,
		kMagicEvasion                         = 53,
		kBossBonusAttackPower                 = 54,
		kBossDamageReduction                  = 55,
		kBossMeleeCriticalAttack              = 56,
		kBossRangeCriticalAttack              = 57,
		kBossMagicCriticalAttack              = 58,
		kBossMeleeCriticalDefense             = 59,
		kBossRangeCriticalDefense             = 60,
		kBossMagicCriticalDefense             = 61,
		kBossMeleeDoubleAttack                = 62,
		kBossRangeDoubleAttack                = 63,
		kBossMagicDoubleAttack                = 64,
		kBossMeleeDoubleDefense               = 65,
		kBossRangeDoubleDefense               = 66,
		kBossMagicDoubleDefense               = 67,
		kBossMeleeAccuracy                    = 68,
		kBossRangeAccuracy                    = 69,
		kBossMagicAccuracy                    = 70,
		kBossMeleeEvasion                     = 71,
		kBossRangeEvasion                     = 72,
		kBossMagicEvasion                     = 73,
		kPvPMeleeCriticalAttack               = 74,
		kPvPRangeCriticalAttack               = 75,
		kPvPMagicCriticalAttack               = 76,
		kPvPMeleeCriticalDefense              = 77,
		kPvPRangeCriticalDefense              = 78,
		kPvPMagicCriticalDefense              = 79,
		kPvPMeleeDoubleAttack                 = 80,
		kPvPRangeDoubleAttack                 = 81,
		kPvPMagicDoubleAttack                 = 82,
		kPvPMeleeDoubleDefense                = 83,
		kPvPRangeDoubleDefense                = 84,
		kPvPMagicDoubleDefense                = 85,
		kPvPMeleeAccuracy                     = 86,
		kPvPRangeAccuracy                     = 87,
		kPvPMagicAccuracy                     = 88,
		kPvPMeleeEvasion                      = 89,
		kPvPRangeEvasion                      = 90,
		kPvPMagicEvasion                      = 91,
		kMeleeDamageDealtModifier             = 92,
		kRangeDamageDealtModifier             = 93,
		kMagicDamageDealtModifier             = 94,
		kMeleeDamageTakenModifier             = 95,
		kRangeDamageTakenModifier             = 96,
		kMagicDamageTakenModifier             = 97,
		kCriticalDamageDealtModifier          = 98,
		kPvPDamageDealtModifier               = 99,
		kPvPDamageTakenModifier               = 100,
		kSkillPowerAmplification              = 101,
		kSkillPowerResistance                 = 102,
		kBuffGivenDurationModifier            = 103,
		kDebuffTakenDurationModifier          = 104,
		kAuraEffectBoost                      = 105,
		kAuraEffectBoostModifier              = 106,
		kAuraRadiusModifier                   = 107,
		kDamageReduction                      = 108,
		kGrankusDamageReduction               = 109,
		kEinardenDamageReduction              = 110,
		kDragonDamageReduction                = 111,
		kDemonDamageReduction                 = 112,
		kUndeadDamageReduction                = 113,
		kCreationDamageReduction              = 114,
		kSpiritDamageReduction                = 115,
		kAnimalDamageReduction                = 116,
		kInsectDamageReduction                = 117,
		kPlantDamageReduction                 = 118,
		kDamageReductionPenetration           = 119,
		kBonusGrankusAttackPower              = 120,
		kBonusEinardenAttackPower             = 121,
		kBonusDragonAttackPower               = 122,
		kBonusDemonAttackPower                = 123,
		kBonusUndeadAttackPower               = 124,
		kBonusCreationAttackPower             = 125,
		kBonusSpiritAttackPower               = 126,
		kBonusAnimalAttackPower               = 127,
		kBonusInsectAttackPower               = 128,
		kBonusPlantAttackPower                = 129,
		kWeakenAccuracy                       = 130,
		kWeakenTolerance                      = 131,
		kStunAccuracy                         = 132,
		kStunTolerance                        = 133,
		kPetrificationAccuracy                = 134,
		kPetrificationTolerance               = 135,
		kSleepAccuracy                        = 136,
		kSleepTolerance                       = 137,
		kSilenceAccuracy                      = 138,
		kSilenceTolerance                     = 139,
		kBindAccuracy                         = 140,
		kBindTolerance                        = 141,
		kBlindAccuracy                        = 142,
		kBlindTolerance                       = 143,
		kCollideAmplification                 = 144,
		kCollideResistance                    = 145,
		kWeakenCriticalAttack                 = 146,
		kWeakenCriticalDefense                = 147,
		kStunCriticalAttack                   = 148,
		kStunCriticalDefense                  = 149,
		kPetrificationCriticalAttack          = 150,
		kPetrificationCriticalDefense         = 151,
		kSleepCriticalAttack                  = 152,
		kSleepCriticalDefense                 = 153,
		kSilenceCriticalAttack                = 154,
		kSilenceCriticalDefense               = 155,
		kBindCriticalAttack                   = 156,
		kBindCriticalDefense                  = 157,
		kBlindCriticalAttack                  = 158,
		kBlindCriticalDefense                 = 159,
		kWeakenDoubleAttack                   = 160,
		kWeakenDoubleDefense                  = 161,
		kStunDoubleAttack                     = 162,
		kStunDoubleDefense                    = 163,
		kPetrificationDoubleAttack            = 164,
		kPetrificationDoubleDefense           = 165,
		kSleepDoubleAttack                    = 166,
		kSleepDoubleDefense                   = 167,
		kSilenceDoubleAttack                  = 168,
		kSilenceDoubleDefense                 = 169,
		kBindDoubleAttack                     = 170,
		kBindDoubleDefense                    = 171,
		kBlindDoubleAttack                    = 172,
		kBlindDoubleDefense                   = 173,
		kStunImmune                           = 174,
		kPetrificationImmune                  = 175,
		kSleepImmune                          = 176,
		kSilenceImmune                        = 177,
		kBindImmune                           = 178,
		kBlindImmune                          = 179,
		kCollideImmune                        = 180,
		kMoveSpeed                            = 181,
		kMoveSpeedModifier                    = 182,
		kDashFastMoveSpeedModifier            = 183,
		kDashNormalMoveSpeedModifier          = 184,
		kSwimFastMoveSpeedModifier            = 185,
		kSwimNormalMoveSpeedModifier          = 186,
		kGlideFastMoveSpeedModifier           = 187,
		kGlideNormalMoveSpeedModifier         = 188,
		kBelongingWeightCap                   = 189,
		kHealTakenModifier                    = 190,
		kDamageBoostChance                    = 191,
		kDamageBoostScale                     = 192,
		kPrimeAttackDamageBoostChance         = 193,
		kPrimeAttackDamageBoostScale          = 194,
		kAdjustExpAcquired                    = 195,
		kAdjustGoldAcquired                   = 196,
		kAdjustItemDrop                       = 197,
		kAdjustGoldDrop                       = 198,
		kAdjustResourceDrop                   = 199,
		kEarnWeaponMasteryExpModifier         = 200,
		kEarnDungeonPointModifier             = 201,
		kSpendDungeonPointModifier            = 202,
		kGatheringSpeed                       = 203,
		kGatheringSpeedModifier               = 204,
		kGatheringDoubleChance                = 205,
		kGatheringCriticalChance              = 206,
		kAggroModifier                        = 207,
		kHealModifier                         = 208,
		kSkillHealTakenModifier               = 209,
		kSkillCooldownModifier                = 210,
		kGlobalSkillCooldownModifier          = 211,
		kWildPolymorphSkillCooldownModifier   = 212,
		kPolymorphDuration                    = 213,
		kStaminaMax                           = 214,
		kStaminaRegen                         = 215,
		kStaminaRegenModifier                 = 216,
		kStaminaConsumption                   = 217,
		kStaminaConsumptionModifier           = 218,
		kHittedStopDurationModifier           = 219,
		kHittedStopPreventChance              = 220,
		kCompletelyHitChance                  = 221,
		kHp                                   = 222,
		kCost                                 = 223,
		kStamina                              = 224,
		kBelongingWeight                      = 225,
		kClientDualAttackChance               = 226,
		kClientCombatPower                    = 227,
		kEvasion                              = 228,
		kDeactivatedWeaponAttackRangeMainHand = 229,
		kDeactivatedWeaponAttackRangeOffHand  = 230,
		kDeactivatedWeaponAttackRangeModifier = 231,
		kEndOfEnum                            = 232,
		MAX                                   = 233
	};

	/**
	 * Enum TLScheme.ETLUIStatsValueType
	 */
	enum class ETLUIStatsValueType : uint8_t
	{
		PcStats    = 0,
		CustomText = 1,
		MAX        = 2
	};

	/**
	 * Enum TLScheme.ETLPolymorphLayer
	 */
	enum class ETLPolymorphLayer : uint8_t
	{
		Default   = 0,
		Normal    = 1,
		Special   = 2,
		Grave     = 3,
		EndOfEnum = 4,
		MAX       = 5
	};

	/**
	 * Enum TLScheme.EPolymorphGrade
	 */
	enum class EPolymorphGrade : uint8_t
	{
		kC         = 0,
		kB         = 1,
		kA         = 2,
		kAA        = 3,
		kAAA       = 4,
		kEndOfEnum = 5,
		MAX        = 6
	};

	/**
	 * Enum TLScheme.ETLMagicDollReactionType
	 */
	enum class ETLMagicDollReactionType : uint8_t
	{
		PlaySceneConti              = 0,
		StopMovingAndPlaySceneConti = 1,
		ActionCustom                = 2,
		MAX                         = 3
	};

	/**
	 * Enum TLScheme.ETLMagicDollEmotion
	 */
	enum class ETLMagicDollEmotion : uint8_t
	{
		Boast   = 0,
		Cute    = 1,
		Comfort = 2,
		MAX     = 3
	};

	/**
	 * Enum TLScheme.ETLMagicPortalDistance
	 */
	enum class ETLMagicPortalDistance : uint8_t
	{
		NearDistance   = 0,
		MiddleDistance = 1,
		LongDistance   = 2,
		MAX            = 3
	};

	/**
	 * Enum TLScheme.ETLConditionEquipment
	 */
	enum class ETLConditionEquipment : uint8_t
	{
		None     = 0,
		Any      = 1,
		MainHand = 2,
		OffHand  = 3,
		Head     = 4,
		Back     = 5,
		Chest    = 6,
		Legs     = 7,
		Hands    = 8,
		Feet     = 9,
		Ear1     = 10,
		Ear2     = 11,
		Neck     = 12,
		Wrist    = 13,
		Finger1  = 14,
		Finger2  = 15,
		Seal1    = 16,
		Seal2    = 17,
		Seal3    = 18,
		Seal4    = 19,
		Seal5    = 20,
		Ammo     = 21,
		Max      = 22
	};

	/**
	 * Enum TLScheme.ETLConditionAnyYesNo
	 */
	enum class ETLConditionAnyYesNo : uint8_t
	{
		None = 0,
		Any  = 1,
		Yes  = 2,
		No   = 3,
		Max  = 4
	};

	/**
	 * Enum TLScheme.ETLConditionAlignment
	 */
	enum class ETLConditionAlignment : uint8_t
	{
		None                 = 0,
		Any                  = 1,
		Lawful               = 2,
		Neutral              = 3,
		Chaotic              = 4,
		LawfulInSelfDefense  = 5,
		NeutralInSelfDefense = 6,
		Max                  = 7
	};

	/**
	 * Enum TLScheme.ETLConditionWeather
	 */
	enum class ETLConditionWeather : uint8_t
	{
		None    = 0,
		Any     = 1,
		Normal  = 2,
		Rain    = 3,
		Thunder = 4,
		Snow    = 5,
		Indoor  = 6,
		Max     = 7
	};

	/**
	 * Enum TLScheme.ETLConditionTimeOfDay
	 */
	enum class ETLConditionTimeOfDay : uint8_t
	{
		None    = 0,
		Any     = 1,
		Sunrise = 2,
		Day     = 3,
		Sunset  = 4,
		Night   = 5,
		Max     = 6
	};

	/**
	 * Enum TLScheme.ETLCraftingResultType
	 */
	enum class ETLCraftingResultType : uint8_t
	{
		Success         = 0,
		CriticalSuccess = 1,
		Failure         = 2,
		MAX             = 3
	};

	/**
	 * Enum TLScheme.EEnchantResultType
	 */
	enum class EEnchantResultType : uint8_t
	{
		C    = 0,
		B    = 1,
		A    = 2,
		S    = 3,
		F    = 4,
		None = 5,
		MAX  = 6
	};

	/**
	 * Enum TLScheme.ETLMagicDollZOffsetApply
	 */
	enum class ETLMagicDollZOffsetApply : uint8_t
	{
		Set                = 0,
		ScaleToOwnerHeight = 1,
		LongDistance       = 2,
		MAX                = 3
	};

	/**
	 * Enum TLScheme.ESpeciesGroup
	 */
	enum class ESpeciesGroup : uint8_t
	{
		kNone      = 0,
		kGrankus   = 1,
		kEinarden  = 2,
		kDragon    = 3,
		kDemon     = 4,
		kUndead    = 5,
		kCreation  = 6,
		kSpirit    = 7,
		kAnimal    = 8,
		kInsect    = 9,
		kPlant     = 10,
		kEndOfEnum = 11,
		MAX        = 12
	};

	/**
	 * Enum TLScheme.EMagicDollGrade
	 */
	enum class EMagicDollGrade : uint8_t
	{
		kC         = 0,
		kB         = 1,
		kA         = 2,
		kAA        = 3,
		kAAA       = 4,
		kEndOfEnum = 5,
		MAX        = 6
	};

	/**
	 * Enum TLScheme.EMapRegionType
	 */
	enum class EMapRegionType : uint8_t
	{
		kPeace     = 0,
		kConflict  = 1,
		kSafety    = 2,
		kFreeDuel  = 3,
		kWar       = 4,
		kCombat    = 5,
		kEndOfEnum = 6,
		MAX        = 7
	};

	/**
	 * Enum TLScheme.ESkillSlot
	 */
	enum class ESkillSlot : uint8_t
	{
		kButton01          = 0,
		kButton02          = 1,
		kButton03          = 2,
		kButton04          = 3,
		kButton05          = 4,
		kButton06          = 5,
		kButton07          = 6,
		kButton08          = 7,
		kButton09          = 8,
		kButton10          = 9,
		kButton11          = 10,
		kButton12          = 11,
		kButton13          = 12,
		kButton14          = 13,
		kButton15          = 14,
		kButton16          = 15,
		kButton17          = 16,
		kButton18          = 17,
		kButton19          = 18,
		kButton20          = 19,
		kButton21          = 20,
		kButton22          = 21,
		kButton23          = 22,
		kButton24          = 23,
		kButton25          = 24,
		kButton26          = 25,
		kButton27          = 26,
		kButton28          = 27,
		kButton29          = 28,
		kButton30          = 29,
		kButton31          = 30,
		kButton32          = 31,
		kButton33          = 32,
		kButton34          = 33,
		kButton35          = 34,
		kButton36          = 35,
		kButton37          = 36,
		kButton38          = 37,
		kButton39          = 38,
		kButton40          = 39,
		kButton41          = 40,
		kAura01            = 41,
		kAura02            = 42,
		kAura03            = 43,
		kAura04            = 44,
		kAura05            = 45,
		kRanker1           = 46,
		kRanker2           = 47,
		kRanker3           = 48,
		kPolymorph         = 49,
		kDash              = 50,
		kWaitRiding        = 51,
		kNotAssigned       = 52,
		kEndOfEnum         = 53,
		kError             = 54,
		kPassiveSkillStart = 55,
		kAuraSkillStart    = 56,
		kPassiveSkillEnd   = 57,
		kRankerSkillStart  = 58,
		kRankerSkillEnd    = 59,
		MAX                = 60
	};

	/**
	 * Enum TLScheme.EWeaponCategory
	 */
	enum class EWeaponCategory : uint8_t
	{
		kNone      = 0,
		kDagger    = 1,
		kSword     = 2,
		kShield    = 3,
		kSword2h   = 4,
		kStaff     = 5,
		kBow       = 6,
		kCrossbow  = 7,
		kGrimoire  = 8,
		kWand      = 9,
		kScroll    = 10,
		kSpear     = 11,
		kEndOfEnum = 12,
		MAX        = 13
	};

	/**
	 * Enum TLScheme.EBool
	 */
	enum class EBool : uint8_t
	{
		F   = 0,
		T   = 1,
		MAX = 2
	};

	/**
	 * Enum TLScheme.EMoneyType
	 */
	enum class EMoneyType : uint8_t
	{
		kGold             = 0,
		kContractCoin     = 1,
		kGuildCoin        = 2,
		kBmCoin           = 3,
		kLostAndFoundCoin = 4,
		kSocialCoin       = 5,
		kDiamond          = 6,
		kMax              = 7,
		kNone             = 8,
		MAX               = 9
	};

	/**
	 * Enum TLScheme.ETradeCategory
	 */
	enum class ETradeCategory : uint8_t
	{
		kError                   = 0,
		kSword                   = 1,
		kShield                  = 2,
		kSword2h                 = 3,
		kDagger                  = 4,
		kBow                     = 5,
		kCrossbow                = 6,
		kStaff                   = 7,
		kWand                    = 8,
		kGrimoire                = 9,
		kHead                    = 10,
		kChest                   = 11,
		kHands                   = 12,
		kLegs                    = 13,
		kFeet                    = 14,
		kCloak                   = 15,
		kEarring                 = 16,
		kNecklace                = 17,
		kBelt                    = 18,
		kBracelet                = 19,
		kRing                    = 20,
		kSeal                    = 21,
		kCrest                   = 22,
		kEnchantScroll           = 23,
		kFood                    = 24,
		kPotion                  = 25,
		kCraftingRecipe          = 26,
		kMaterial                = 27,
		kMisc                    = 28,
		kScroll                  = 29,
		kShirt                   = 30,
		kContractScroll          = 31,
		kSkillScrollCommon       = 32,
		kSkillScrollSword        = 33,
		kSkillScrollShield       = 34,
		kSkillScrollDagger       = 35,
		kSkillScrollCrossbow     = 36,
		kSkillScrollWand         = 37,
		kSkillScrollGrimoire     = 38,
		kSkillScrollSword2h      = 39,
		kSkillScrollBow          = 40,
		kSkillScrollStaff        = 41,
		kSkillScrollScroll       = 42,
		kPolymorphEnchantCommon  = 43,
		kPolymorphEnchantStr     = 44,
		kPolymorphEnchantDex     = 45,
		kPolymorphEnchantCon     = 46,
		kPolymorphEnchantInt     = 47,
		kPolymorphEnchantWis     = 48,
		kPolymorphEnchantCha     = 49,
		kWeaponMastery           = 50,
		kPolymorphEnchantControl = 51,
		kPolymorphEnchantAttack  = 52,
		kPolymorphEnchantMove    = 53,
		kPolymorphEnchantDefense = 54,
		kPolymorphEnchantWeak    = 55,
		kSpear                   = 56,
		kPotionElixir            = 57,
		kPotionHeal              = 58,
		kPotionLeaf              = 59,
		kEnchantPoint            = 60,
		kMaterialMain            = 61,
		kMaterialPowder          = 62,
		kMaterialSkillpaper      = 63,
		kMaterialJewel           = 64,
		kMaterialSub             = 65,
		kMaterialFood            = 66,
		kMaterialEtc             = 67,
		kSkillPointCommon        = 68,
		kMax                     = 69,
		kNone                    = 70,
		MAX                      = 71
	};

	/**
	 * Enum TLScheme.ETLSetAliveSource
	 */
	enum class ETLSetAliveSource : uint8_t
	{
		None        = 0,
		EnterPacket = 1,
		Playing     = 2,
		MAX         = 3
	};

	/**
	 * Enum TLScheme.EFoSubType
	 */
	enum class EFoSubType : uint8_t
	{
		None          = 0,
		Mineral       = 1,
		Herb          = 2,
		Wood          = 3,
		Cactus        = 4,
		Mushroom      = 5,
		Throne        = 6,
		Resurrection  = 7,
		Plunder       = 8,
		Investigation = 9,
		TimeTravel    = 10,
		Outpost       = 11,
		Hook          = 12,
		DropFo        = 13,
		UnderCover    = 14,
		GuildSkillFo  = 15,
		kEndOfEnum    = 16,
		MAX           = 17
	};

	/**
	 * Enum TLScheme.ETLCreatureRank
	 */
	enum class ETLCreatureRank : uint8_t
	{
		NoRank     = 0,
		Solo       = 1,
		SoloElite  = 2,
		Party      = 3,
		PartyElite = 4,
		Boss       = 5,
		BossWorld  = 6,
		EndOfEnum  = 7,
		MAX        = 8
	};

	/**
	 * Enum TLScheme.EWorldObjectType
	 */
	enum class EWorldObjectType : uint8_t
	{
		None      = 0,
		PC        = 1,
		NPC       = 2,
		FO        = 3,
		Item      = 4,
		Area      = 5,
		Global    = 6,
		Effect    = 7,
		Carrier   = 8,
		MagicDoll = 9,
		MAX       = 10
	};

	/**
	 * Enum TLScheme.ECriminalType
	 */
	enum class ECriminalType : uint8_t
	{
		kNeutral              = 0,
		kLawfulInSelfDefense  = 1,
		kNeutralInSelfDefense = 2,
		kChaotic              = 3,
		kLawful               = 4,
		kEndOfEnum            = 5,
		MAX                   = 6
	};

	/**
	 * Enum TLScheme.ETLRewardGroup
	 */
	enum class ETLRewardGroup : uint8_t
	{
		A    = 0,
		B    = 1,
		C    = 2,
		D    = 3,
		E    = 4,
		F    = 5,
		G    = 6,
		H    = 7,
		I    = 8,
		J    = 9,
		Side = 10,
		MAX  = 11
	};

	/**
	 * Enum TLScheme.EEquipCategory
	 */
	enum class EEquipCategory : uint8_t
	{
		kMainHand   = 0,
		kOffHand    = 1,
		kHead       = 2,
		kBack       = 3,
		kChest      = 4,
		kLegs       = 5,
		kHands      = 6,
		kFeet       = 7,
		kEar1       = 8,
		kEar2       = 9,
		kNeck       = 10,
		kWrist      = 11,
		kFinger1    = 12,
		kFinger2    = 13,
		kSeal       = 14,
		kCrest      = 15,
		kShirt      = 16,
		kBelt       = 17,
		kFishingRod = 18,
		kAmmo       = 19,
		kEndOfEnum  = 20,
		MAX         = 21
	};

	/**
	 * Enum TLScheme.ETLContentsOpenType
	 */
	enum class ETLContentsOpenType : uint8_t
	{
		NONE                    = 0,
		GUILD                   = 1,
		CODEX                   = 2,
		COLLECTION              = 3,
		MAGIC_DOLL              = 4,
		POLYMORPH               = 5,
		CRAFT                   = 6,
		WORLD_MAP               = 7,
		MINI_MAP                = 8,
		RANKING                 = 9,
		MARKET                  = 10,
		CONTRACT                = 11,
		CONTRACT_GUILD          = 12,
		COMBAT_ASSIST           = 13,
		TARGET_SCANNER          = 14,
		CHATTING                = 15,
		SKILL                   = 16,
		MEMORIAL                = 17,
		PVP_RECORD              = 18,
		WEAPON_MASTERY          = 19,
		PC_RELATIONSHIP         = 20,
		INVENTORY               = 21,
		CHARACTER               = 22,
		GUILDUNION              = 23,
		HERPY_MK1               = 24,
		HERPY_MK2               = 25,
		HERPY_MK3               = 26,
		HERPY_MK4               = 27,
		HERPY_MK5               = 28,
		HERPY_MK6               = 29,
		HERPY_COMPLETE          = 30,
		TIMETABLE               = 31,
		WEAPONSWAP              = 32,
		ATTENDANCE              = 33,
		ABYSS_POINT             = 34,
		POST                    = 35,
		MOBILITY_POLYMORPH      = 36,
		PURCHASE                = 37,
		PartyAssist             = 38,
		AUTO_PATH               = 39,
		MONEY                   = 40,
		PIN                     = 41,
		SAVEPLACE               = 42,
		COMPASS                 = 43,
		CONTENTS_WINDOW         = 44,
		HUB_MENU                = 45,
		SEASON_PASS             = 46,
		TIMELIMIT_DUNGEON       = 47,
		GUILDHOME               = 48,
		RETURNWARP              = 49,
		ENCHANT                 = 50,
		GATHERING               = 51,
		TREASURE_BOX            = 52,
		CONTENTS_ALARM          = 53,
		MAGIC_DOLL_AUTO_PICK_UP = 54,
		CODEX_ACHIEVEMENT       = 55,
		CODEX_COLLECTION        = 56,
		GROWTHPASS              = 57,
		WORLD_CHAT              = 58,
		SYSTEM_HERPY_COMPLETE   = 59,
		FIXED_QUICKSLOT         = 60,
		HUD_CUSTOMIZE           = 61,
		BOUTIQUE                = 62,
		COUPON                  = 63,
		ROTATION_EVENT          = 64,
		EVETN_CALENDAR          = 65,
		WORLD_EVENT             = 66,
		CONTRACT_BM             = 67,
		PARTY                   = 68,
		TYPE_MAX                = 69,
		MAX                     = 70
	};

	/**
	 * Enum TLScheme.ESlotType
	 */
	enum class ESlotType : uint8_t
	{
		kError                 = 0,
		kQuickSlotPrimeSkill   = 1,
		kQuickSlotSkill        = 2,
		kQuickSlotPassiveSkill = 3,
		kQuickSlotAuraSkill    = 4,
		kQuickSlotSpecialSkill = 5,
		kQuickSlotItem         = 6,
		kInventory             = 7,
		kEquipment             = 8,
		kRestoration           = 9,
		kCrafting              = 10,
		kCraftingResult        = 11,
		kDeathPenalty          = 12,
		kEnchant               = 13,
		kSkillSetPassive       = 14,
		kSkillSetActive        = 15,
		kSkillSetAura          = 16,
		kPolymorph             = 17,
		MAX                    = 18
	};

	/**
	 * Enum TLScheme.ETLTopLevelAnalogCursorState
	 */
	enum class ETLTopLevelAnalogCursorState : uint8_t
	{
		None             = 0,
		Show             = 1,
		Hide             = 2,
		ShowAndForceMove = 3,
		MAX              = 4
	};

	/**
	 * Enum TLScheme.ETLUIPlatform
	 */
	enum class ETLUIPlatform : uint8_t
	{
		PC        = 0,
		Console   = 1,
		Mobile    = 2,
		EndOfEnum = 3,
		MAX       = 4
	};

	/**
	 * Enum TLScheme.ETutorialActiveType
	 */
	enum class ETutorialActiveType : uint8_t
	{
		kNormal             = 0,
		kPopupWindow        = 1,
		kHudMainMenu        = 2,
		kWidget             = 3,
		kCustom             = 4,
		kSubType            = 5,
		kSystemMessageGuide = 6,
		MAX                 = 7
	};

	/**
	 * Enum TLScheme.ETLPolymorphEntryType
	 */
	enum class ETLPolymorphEntryType : uint8_t
	{
		Combat    = 0,
		Dash      = 1,
		Glide     = 2,
		Swim      = 3,
		Social    = 4,
		None      = 5,
		EndOfEnum = 6,
		MAX       = 7
	};

	/**
	 * Enum TLScheme.ETLKeyIconType
	 */
	enum class ETLKeyIconType : uint8_t
	{
		Default  = 0,
		Small    = 1,
		Tutorial = 2,
		MAX      = 3
	};

	/**
	 * Enum TLScheme.EActionKeyVisibleType
	 */
	enum class EActionKeyVisibleType : uint8_t
	{
		kAlwaysChangeIcon      = 0,
		kAlways                = 1,
		kChangeIcon            = 2,
		kOnlyGamepad           = 3,
		kOnlyKeyboardMouse     = 4,
		kIconOnlyGamepad       = 5,
		kIconOnlyKeyboardMouse = 6,
		kDoNotChangeVislbe     = 7,
		MAX                    = 8
	};

	/**
	 * Enum TLScheme.ETLContentsMarkerType
	 */
	enum class ETLContentsMarkerType : uint8_t
	{
		kNone             = 0,
		kDynamicEvent     = 1,
		kInsGuideEvent    = 2,
		kCodexAdventure   = 3,
		kCodexAchievement = 4,
		kNpcContract      = 5,
		kItemContract     = 6,
		kGuildContract    = 7,
		kResourceObject   = 8,
		kInfinityDungeon  = 9,
		kMax              = 10,
		MAX               = 11
	};

	/**
	 * Enum TLScheme.EItemAttrType
	 */
	enum class EItemAttrType : uint8_t
	{
		kNone                         = 0,
		kAttackSpeed                  = 1,
		kAttackRange                  = 2,
		kHpMax                        = 3,
		kCostMax                      = 4,
		kCostRegen                    = 5,
		kArmorClass                   = 6,
		kPotionHealModifier           = 7,
		kAttackPower                  = 8,
		kMeleeAccuracy                = 9,
		kRangeAccuracy                = 10,
		kMagicAccuracy                = 11,
		kCriticalAttack               = 12,
		kCriticalDefense              = 13,
		kDamageReduction              = 14,
		kShieldBlockChance            = 15,
		kBlockEfficiency              = 16,
		kAttackRating                 = 17,
		kSTR                          = 18,
		kDEX                          = 19,
		kINT                          = 20,
		kPER                          = 21,
		kAttackRangeMod               = 22,
		kAttackSpeedMod               = 23,
		kHpRegen                      = 24,
		kCostConsumptionModifier      = 25,
		kStaminaMax                   = 26,
		kStaminaRegen                 = 27,
		kSkillCooldownModifier        = 28,
		kMoveSpeedMod                 = 29,
		kFireAmplification            = 30,
		kWaterAmplification           = 31,
		kWindAmplification            = 32,
		kEarthAmplification           = 33,
		kFireResistance               = 34,
		kWaterResistance              = 35,
		kWindResistance               = 36,
		kEarthResistance              = 37,
		kAdjustExpAcquired            = 38,
		kAdjustGoldAcquired           = 39,
		kAdjustGoldDrop               = 40,
		kAdjustItemDrop               = 41,
		kAdjustResourceDrop           = 42,
		kCollideAmplification         = 43,
		kCollideResistance            = 44,
		kMeleeEvasion                 = 45,
		kRangeEvasion                 = 46,
		kMagicEvasion                 = 47,
		kDamageReductionPenetration   = 48,
		kBelongingWeightCap           = 49,
		kBonusAttackPower             = 50,
		kGrankusBonusAttackPower      = 51,
		kEinardenBonusAttackPower     = 52,
		kDragonBonusAttackPower       = 53,
		kDemonBonusAttackPower        = 54,
		kUndeadBonusAttackPower       = 55,
		kCreationBonusAttackPower     = 56,
		kSpiritBonusAttackPower       = 57,
		kAnimalBonusAttackPower       = 58,
		kInsectBonusAttackPower       = 59,
		kPlantBonusAttackPower        = 60,
		kGrankusDamageReduction       = 61,
		kEinardenDamageReduction      = 62,
		kDragonDamageReduction        = 63,
		kDemonDamageReduction         = 64,
		kUndeadDamageReduction        = 65,
		kCreationDamageReduction      = 66,
		kSpiritDamageReduction        = 67,
		kAnimalDamageReduction        = 68,
		kInsectDamageReduction        = 69,
		kPlantDamageReduction         = 70,
		kWeakenAccuracy               = 71,
		kStunAccuracy                 = 72,
		kPetrificationAccuracy        = 73,
		kSleepAccuracy                = 74,
		kSilenceAccuracy              = 75,
		kBindAccuracy                 = 76,
		kBlindAccuracy                = 77,
		kWeakenTolerance              = 78,
		kStunTolerance                = 79,
		kPetrificationTolerance       = 80,
		kSleepTolerance               = 81,
		kSilenceTolerance             = 82,
		kBindTolerance                = 83,
		kBlindTolerance               = 84,
		kDoubleAttack                 = 85,
		kDoubleDefense                = 86,
		kAttackPowerModifier          = 87,
		kMagicDollHealModifier        = 88,
		kMeleeArmor                   = 89,
		kRangeArmor                   = 90,
		kMagicArmor                   = 91,
		kMeleeCriticalAttack          = 92,
		kRangeCriticalAttack          = 93,
		kMagicCriticalAttack          = 94,
		kMeleeCriticalDefense         = 95,
		kRangeCriticalDefense         = 96,
		kMagicCriticalDefense         = 97,
		kMeleeDoubleAttack            = 98,
		kRangeDoubleAttack            = 99,
		kMagicDoubleAttack            = 100,
		kMeleeDoubleDefense           = 101,
		kRangeDoubleDefense           = 102,
		kMagicDoubleDefense           = 103,
		kBossMeleeCriticalAttack      = 104,
		kBossRangeCriticalAttack      = 105,
		kBossMagicCriticalAttack      = 106,
		kBossMeleeCriticalDefense     = 107,
		kBossRangeCriticalDefense     = 108,
		kBossMagicCriticalDefense     = 109,
		kBossMeleeDoubleAttack        = 110,
		kBossRangeDoubleAttack        = 111,
		kBossMagicDoubleAttack        = 112,
		kBossMeleeDoubleDefense       = 113,
		kBossRangeDoubleDefense       = 114,
		kBossMagicDoubleDefense       = 115,
		kPvPMeleeCriticalAttack       = 116,
		kPvPRangeCriticalAttack       = 117,
		kPvPMagicCriticalAttack       = 118,
		kPvPMeleeCriticalDefense      = 119,
		kPvPRangeCriticalDefense      = 120,
		kPvPMagicCriticalDefense      = 121,
		kPvPMeleeDoubleAttack         = 122,
		kPvPRangeDoubleAttack         = 123,
		kPvPMagicDoubleAttack         = 124,
		kPvPMeleeDoubleDefense        = 125,
		kPvPRangeDoubleDefense        = 126,
		kPvPMagicDoubleDefense        = 127,
		kDashFastMoveSpeedModifier    = 128,
		kDashNormalMoveSpeedModifier  = 129,
		kSwimFastMoveSpeedModifier    = 130,
		kSwimNormalMoveSpeedModifier  = 131,
		kGlideFastMoveSpeedModifier   = 132,
		kGlideNormalMoveSpeedModifier = 133,
		kAttackPowerMainHand          = 134,
		kAttackPowerOffHand           = 135,
		kBonusAttackPowerMainHand     = 136,
		kBonusAttackPowerOffHand      = 137,
		kAttackSpeedMainHand          = 138,
		kAttackSpeedOffHand           = 139,
		kAttackRangeMainHand          = 140,
		kAttackRangeOffHand           = 141,
		kEndOfEnum                    = 142,
		MAX                           = 143
	};

	/**
	 * Enum TLScheme.EItemTraitStats
	 */
	enum class EItemTraitStats : uint8_t
	{
		kNone                               = 0,
		kSTR                                = 1,
		kDEX                                = 2,
		kINT                                = 3,
		kPER                                = 4,
		kAttackPowerMainhand                = 5,
		kAttackPowerOffhand                 = 6,
		kBonusAttackPowerMainhand           = 7,
		kBonusAttackPowerOffhand            = 8,
		kAttackPowerModifier                = 9,
		kAttackSpeedMain                    = 10,
		kAttackSpeedOff                     = 11,
		kAttackSpeedModifier                = 12,
		kAttackSpeedModifierOffHand         = 13,
		kAttackRangeMain                    = 14,
		kAttackRangeOff                     = 15,
		kAttackRangeModifier                = 16,
		kHpMax                              = 17,
		kHpMaxModifier                      = 18,
		kHpRegen                            = 19,
		kHpRegenModifier                    = 20,
		kPotionHealModifier                 = 21,
		kMagicDollHealModifier              = 22,
		kMeleeArmor                         = 23,
		kRangeArmor                         = 24,
		kMagicArmor                         = 25,
		kArmorModifier                      = 26,
		kAttackRating                       = 27,
		kShieldBlockChance                  = 28,
		kShieldBlockChancePenetration       = 29,
		kShieldBlockEfficiency              = 30,
		kCostMax                            = 31,
		kCostRegen                          = 32,
		kCostRegenModifier                  = 33,
		kCostSpend                          = 34,
		kCostConsumptionModifier            = 35,
		kMeleeCriticalAttack                = 36,
		kRangeCriticalAttack                = 37,
		kMagicCriticalAttack                = 38,
		kMeleeCriticalDefense               = 39,
		kRangeCriticalDefense               = 40,
		kMagicCriticalDefense               = 41,
		kMeleeDoubleAttack                  = 42,
		kRangeDoubleAttack                  = 43,
		kMagicDoubleAttack                  = 44,
		kMeleeDoubleDefense                 = 45,
		kRangeDoubleDefense                 = 46,
		kMagicDoubleDefense                 = 47,
		kMeleeAccuracy                      = 48,
		kRangeAccuracy                      = 49,
		kMagicAccuracy                      = 50,
		kMeleeEvasion                       = 51,
		kRangeEvasion                       = 52,
		kMagicEvasion                       = 53,
		kBossBonusAttackPower               = 54,
		kBossDamageReduction                = 55,
		kBossMeleeCriticalAttack            = 56,
		kBossRangeCriticalAttack            = 57,
		kBossMagicCriticalAttack            = 58,
		kBossMeleeCriticalDefense           = 59,
		kBossRangeCriticalDefense           = 60,
		kBossMagicCriticalDefense           = 61,
		kBossMeleeDoubleAttack              = 62,
		kBossRangeDoubleAttack              = 63,
		kBossMagicDoubleAttack              = 64,
		kBossMeleeDoubleDefense             = 65,
		kBossRangeDoubleDefense             = 66,
		kBossMagicDoubleDefense             = 67,
		kBossMeleeAccuracy                  = 68,
		kBossRangeAccuracy                  = 69,
		kBossMagicAccuracy                  = 70,
		kBossMeleeEvasion                   = 71,
		kBossRangeEvasion                   = 72,
		kBossMagicEvasion                   = 73,
		kPvPMeleeCriticalAttack             = 74,
		kPvPRangeCriticalAttack             = 75,
		kPvPMagicCriticalAttack             = 76,
		kPvPMeleeCriticalDefense            = 77,
		kPvPRangeCriticalDefense            = 78,
		kPvPMagicCriticalDefense            = 79,
		kPvPMeleeDoubleAttack               = 80,
		kPvPRangeDoubleAttack               = 81,
		kPvPMagicDoubleAttack               = 82,
		kPvPMeleeDoubleDefense              = 83,
		kPvPRangeDoubleDefense              = 84,
		kPvPMagicDoubleDefense              = 85,
		kPvPMeleeAccuracy                   = 86,
		kPvPRangeAccuracy                   = 87,
		kPvPMagicAccuracy                   = 88,
		kPvPMeleeEvasion                    = 89,
		kPvPRangeEvasion                    = 90,
		kPvPMagicEvasion                    = 91,
		kMeleeDamageDealtModifier           = 92,
		kRangeDamageDealtModifier           = 93,
		kMagicDamageDealtModifier           = 94,
		kMeleeDamageTakenModifier           = 95,
		kRangeDamageTakenModifier           = 96,
		kMagicDamageTakenModifier           = 97,
		kCriticalDamageDealtModifier        = 98,
		kPvPDamageDealtModifier             = 99,
		kPvPDamageTakenModifier             = 100,
		kSkillPowerAmplification            = 101,
		kSkillPowerResistance               = 102,
		kBuffGivenDurationModifier          = 103,
		kDebuffTakenDurationModifier        = 104,
		kAuraEffectBoost                    = 105,
		kAuraEffectBoostModifier            = 106,
		kAuraRadiusModifier                 = 107,
		kDamageReduction                    = 108,
		kGrankusDamageReduction             = 109,
		kEinardenDamageReduction            = 110,
		kDragonDamageReduction              = 111,
		kDemonDamageReduction               = 112,
		kUndeadDamageReduction              = 113,
		kCreationDamageReduction            = 114,
		kSpiritDamageReduction              = 115,
		kAnimalDamageReduction              = 116,
		kInsectDamageReduction              = 117,
		kPlantDamageReduction               = 118,
		kDamageReductionPenetration         = 119,
		kBonusGrankusAttackPower            = 120,
		kBonusEinardenAttackPower           = 121,
		kBonusDragonAttackPower             = 122,
		kBonusDemonAttackPower              = 123,
		kBonusUndeadAttackPower             = 124,
		kBonusCreationAttackPower           = 125,
		kBonusSpiritAttackPower             = 126,
		kBonusAnimalAttackPower             = 127,
		kBonusInsectAttackPower             = 128,
		kBonusPlantAttackPower              = 129,
		kWeakenAccuracy                     = 130,
		kWeakenTolerance                    = 131,
		kStunAccuracy                       = 132,
		kStunTolerance                      = 133,
		kPetrificationAccuracy              = 134,
		kPetrificationTolerance             = 135,
		kSleepAccuracy                      = 136,
		kSleepTolerance                     = 137,
		kSilenceAccuracy                    = 138,
		kSilenceTolerance                   = 139,
		kBindAccuracy                       = 140,
		kBindTolerance                      = 141,
		kBlindAccuracy                      = 142,
		kBlindTolerance                     = 143,
		kCollideAmplification               = 144,
		kCollideResistance                  = 145,
		kWeakenCriticalAttack               = 146,
		kWeakenCriticalDefense              = 147,
		kStunCriticalAttack                 = 148,
		kStunCriticalDefense                = 149,
		kPetrificationCriticalAttack        = 150,
		kPetrificationCriticalDefense       = 151,
		kSleepCriticalAttack                = 152,
		kSleepCriticalDefense               = 153,
		kSilenceCriticalAttack              = 154,
		kSilenceCriticalDefense             = 155,
		kBindCriticalAttack                 = 156,
		kBindCriticalDefense                = 157,
		kBlindCriticalAttack                = 158,
		kBlindCriticalDefense               = 159,
		kWeakenDoubleAttack                 = 160,
		kWeakenDoubleDefense                = 161,
		kStunDoubleAttack                   = 162,
		kStunDoubleDefense                  = 163,
		kPetrificationDoubleAttack          = 164,
		kPetrificationDoubleDefense         = 165,
		kSleepDoubleAttack                  = 166,
		kSleepDoubleDefense                 = 167,
		kSilenceDoubleAttack                = 168,
		kSilenceDoubleDefense               = 169,
		kBindDoubleAttack                   = 170,
		kBindDoubleDefense                  = 171,
		kBlindDoubleAttack                  = 172,
		kBlindDoubleDefense                 = 173,
		kStunImmune                         = 174,
		kPetrificationImmune                = 175,
		kSleepImmune                        = 176,
		kSilenceImmune                      = 177,
		kBindImmune                         = 178,
		kBlindImmune                        = 179,
		kCollideImmune                      = 180,
		kMoveSpeed                          = 181,
		kMoveSpeedModifier                  = 182,
		kDashFastMoveSpeedModifier          = 183,
		kDashNormalMoveSpeedModifier        = 184,
		kSwimFastMoveSpeedModifier          = 185,
		kSwimNormalMoveSpeedModifier        = 186,
		kGlideFastMoveSpeedModifier         = 187,
		kGlideNormalMoveSpeedModifier       = 188,
		kBelongingWeightCap                 = 189,
		kHealTakenModifier                  = 190,
		kDamageBoostChance                  = 191,
		kDamageBoostScale                   = 192,
		kPrimeAttackDamageBoostChance       = 193,
		kPrimeAttackDamageBoostScale        = 194,
		kAdjustExpAcquired                  = 195,
		kAdjustGoldAcquired                 = 196,
		kAdjustItemDrop                     = 197,
		kAdjustGoldDrop                     = 198,
		kAdjustResourceDrop                 = 199,
		kEarnWeaponMasteryExpModifier       = 200,
		kEarnDungeonPointModifier           = 201,
		kSpendDungeonPointModifier          = 202,
		kGatheringSpeed                     = 203,
		kGatheringSpeedModifier             = 204,
		kGatheringDoubleChance              = 205,
		kGatheringCriticalChance            = 206,
		kAggroModifier                      = 207,
		kHealModifier                       = 208,
		kSkillHealTakenModifier             = 209,
		kSkillCooldownModifier              = 210,
		kGlobalSkillCooldownModifier        = 211,
		kWildPolymorphSkillCooldownModifier = 212,
		kPolymorphDuration                  = 213,
		kStaminaMax                         = 214,
		kStaminaRegen                       = 215,
		kStaminaRegenModifier               = 216,
		kStaminaConsumption                 = 217,
		kStaminaConsumptionModifier         = 218,
		kHittedStopDurationModifier         = 219,
		kHittedStopPreventChance            = 220,
		kCompletelyHitChance                = 221,
		kHp                                 = 222,
		kCost                               = 223,
		kStamina                            = 224,
		kBelongingWeight                    = 225,
		kEndOfEnum                          = 226,
		MAX                                 = 227
	};

	/**
	 * Enum TLScheme.EItemExtraStat
	 */
	enum class EItemExtraStat : uint8_t
	{
		kNone                       = 0,
		kSTR                        = 1,
		kDEX                        = 2,
		kINT                        = 3,
		kPER                        = 4,
		kAttackRangeModifier        = 5,
		kAttackSpeedModifier        = 6,
		kCriticalAttack             = 7,
		kCriticalDefense            = 8,
		kHpMax                      = 9,
		kHpRegen                    = 10,
		kCostMax                    = 11,
		kCostRegen                  = 12,
		kCostConsumptionModifier    = 13,
		kStaminaMax                 = 14,
		kStaminaRegen               = 15,
		kSkillCooldownModifier      = 16,
		kMoveSpeedModifier          = 17,
		kFireAmplification          = 18,
		kWaterAmplification         = 19,
		kWindAmplification          = 20,
		kEarthAmplification         = 21,
		kFireResistance             = 22,
		kWaterResistance            = 23,
		kWindResistance             = 24,
		kEarthResistance            = 25,
		kAdjustExpAcquired          = 26,
		kAdjustGoldAcquired         = 27,
		kAdjustGoldDrop             = 28,
		kAdjustItemDrop             = 29,
		kAdjustResourceDrop         = 30,
		kPotionHealModifier         = 31,
		kCollideAmplification       = 32,
		kCollideResistance          = 33,
		kMeleeAccuracy              = 34,
		kRangeAccuracy              = 35,
		kMagicAccuracy              = 36,
		kMeleeEvasion               = 37,
		kRangeEvasion               = 38,
		kMagicEvasion               = 39,
		kDamageReduction            = 40,
		kDamageReductionPenetration = 41,
		kBelongingWeightCap         = 42,
		kShieldBlockChance          = 43,
		kBonusAttackPower           = 44,
		kBonusGrankusAttackPower    = 45,
		kBonusEinardenAttackPower   = 46,
		kBonusDragonAttackPower     = 47,
		kBonusDemonAttackPower      = 48,
		kBonusUndeadAttackPower     = 49,
		kBonusCreationAttackPower   = 50,
		kBonusSpiritAttackPower     = 51,
		kBonusAnimalAttackPower     = 52,
		kBonusInsectAttackPower     = 53,
		kBonusPlantAttackPower      = 54,
		kGrankusDamageReduction     = 55,
		kEinardenDamageReduction    = 56,
		kDragonDamageReduction      = 57,
		kDemonDamageReduction       = 58,
		kUndeadDamageReduction      = 59,
		kCreationDamageReduction    = 60,
		kSpiritDamageReduction      = 61,
		kAnimalDamageReduction      = 62,
		kInsectDamageReduction      = 63,
		kPlantDamageReduction       = 64,
		kWeakenAccuracy             = 65,
		kStunAccuracy               = 66,
		kPetrificationAccuracy      = 67,
		kSleepAccuracy              = 68,
		kSilenceAccuracy            = 69,
		kBindAccuracy               = 70,
		kBlindAccuracy              = 71,
		kWeakenTolerance            = 72,
		kStunTolerance              = 73,
		kPetrificationTolerance     = 74,
		kSleepTolerance             = 75,
		kSilenceTolerance           = 76,
		kBindTolerance              = 77,
		kBlindTolerance             = 78,
		kArmorClass                 = 79,
		kAttackRating               = 80,
		kDoubleAttack               = 81,
		kDoubleDefense              = 82,
		kMeleeArmor                 = 83,
		kRangeArmor                 = 84,
		kMagicArmor                 = 85,
		kMeleeCriticalAttack        = 86,
		kRangeCriticalAttack        = 87,
		kMagicCriticalAttack        = 88,
		kMeleeCriticalDefense       = 89,
		kRangeCriticalDefense       = 90,
		kMagicCriticalDefense       = 91,
		kMeleeDoubleAttack          = 92,
		kRangeDoubleAttack          = 93,
		kMagicDoubleAttack          = 94,
		kMeleeDoubleDefense         = 95,
		kRangeDoubleDefense         = 96,
		kMagicDoubleDefense         = 97,
		kBossMeleeCriticalAttack    = 98,
		kBossRangeCriticalAttack    = 99,
		kBossMagicCriticalAttack    = 100,
		kBossMeleeCriticalDefense   = 101,
		kBossRangeCriticalDefense   = 102,
		kBossMagicCriticalDefense   = 103,
		kBossMeleeDoubleAttack      = 104,
		kBossRangeDoubleAttack      = 105,
		kBossMagicDoubleAttack      = 106,
		kBossMeleeDoubleDefense     = 107,
		kBossRangeDoubleDefense     = 108,
		kBossMagicDoubleDefense     = 109,
		kAttackPowerMainHand        = 110,
		kAttackPowerOffHand         = 111,
		kBonusAttackPowerMainHand   = 112,
		kBonusAttackPowerOffHand    = 113,
		kEndOfEnum                  = 114,
		MAX                         = 115
	};

	/**
	 * Enum TLScheme.EItemMainStat
	 */
	enum class EItemMainStat : uint8_t
	{
		kNone                     = 0,
		kAttackSpeed              = 1,
		kAttackRange              = 2,
		kHpMax                    = 3,
		kCostMax                  = 4,
		kCostRegen                = 5,
		kArmorClass               = 6,
		kPotionHealModifier       = 7,
		kAttackPower              = 8,
		kBonusAttackPower         = 9,
		kMeleeAccuracy            = 10,
		kRangeAccuracy            = 11,
		kMagicAccuracy            = 12,
		kCriticalAttack           = 13,
		kDamageReduction          = 14,
		kShieldBlockChance        = 15,
		kBlockEfficiency          = 16,
		kAttackRating             = 17,
		kAttackPowerMainHand      = 18,
		kAttackPowerOffHand       = 19,
		kBonusAttackPowerMainHand = 20,
		kBonusAttackPowerOffHand  = 21,
		kAttackSpeedMainHand      = 22,
		kAttackSpeedOffHand       = 23,
		kAttackRangeMainHand      = 24,
		kAttackRangeOffHand       = 25,
		kAttackPowerModifier      = 26,
		kMeleeArmor               = 27,
		kRangeArmor               = 28,
		kMagicArmor               = 29,
		kMeleeEvasion             = 30,
		kRangeEvasion             = 31,
		kMagicEvasion             = 32,
		kEndOfEnum                = 33,
		MAX                       = 34
	};

	/**
	 * Enum TLScheme.ETLEyeColorApplyMode
	 */
	enum class ETLEyeColorApplyMode : uint8_t
	{
		BothSide = 0,
		EachSide = 1,
		MAX      = 2
	};

	/**
	 * Enum TLScheme.EGuildRaidResurrectionType
	 */
	enum class EGuildRaidResurrectionType : uint8_t
	{
		kGuildRaid = 0,
		kGuildHome = 1,
		MAX        = 2
	};

	/**
	 * Enum TLScheme.EHudWidgetKey
	 */
	enum class EHudWidgetKey : uint8_t
	{
		None                = 0,
		MainMenu            = 1,
		ChatViewer          = 2,
		ChatToggleButton    = 3,
		Currency            = 4,
		PCInfo              = 5,
		Party               = 6,
		BossTaget           = 7,
		Minimap             = 8,
		ContentsViewer      = 9,
		TargetScan          = 10,
		Acquirement         = 11,
		FixedQuickslot      = 12,
		SkillQuickslot      = 13,
		CombatPolymorph     = 14,
		CombatControl       = 15,
		Compass             = 16,
		Fightback           = 17,
		PartyAssist         = 18,
		PVPMessage          = 19,
		QuickButtonGroup    = 20,
		TargetGroup         = 21,
		MainMenuCenter      = 22,
		ReturnPointButton   = 23,
		InventoryButton     = 24,
		TimelineDialog      = 25,
		TempInventoryButton = 26,
		RealTime            = 27,
		MAX                 = 28
	};

	/**
	 * Enum TLScheme.EGuildRewardBoxContentsType
	 */
	enum class EGuildRewardBoxContentsType : uint8_t
	{
		None                 = 0,
		GuildContract        = 1,
		GuildRaid            = 2,
		PersonalDynamicEvent = 3,
		GuildDynamicEvent    = 4,
		RotationEvent        = 5,
		WorldBoss            = 6,
		TaxDelivery          = 7,
		BMShop               = 8,
		Max                  = 9
	};

	/**
	 * Enum TLScheme.ETLSkillIconType
	 */
	enum class ETLSkillIconType : uint8_t
	{
		kActive  = 0,
		kPassive = 1,
		kPrime   = 2,
		kItem    = 3,
		MAX      = 4
	};

	/**
	 * Enum TLScheme.ETLSkillObjectType
	 */
	enum class ETLSkillObjectType : uint8_t
	{
		Normal = 0,
		Guild  = 1,
		MAX    = 2
	};

	/**
	 * Enum TLScheme.EMapEventShapeType
	 */
	enum class EMapEventShapeType : uint8_t
	{
		DynamicEventRegion = 0,
		SiegeWarfareShape  = 1,
		OccupationShape    = 2,
		WorldBossShape     = 3,
		TaxDeliveryShape   = 4,
		MapAreaShape       = 5,
		FieldBossShape     = 6,
		MAX                = 7
	};

	/**
	 * Enum TLScheme.EPurchaseNavigationEntry
	 */
	enum class EPurchaseNavigationEntry : uint8_t
	{
		SeasonPass = 0,
		GrowthPass = 1,
		Max        = 2,
		None       = 3
	};

	/**
	 * Enum TLScheme.EShopCurrencyType
	 */
	enum class EShopCurrencyType : uint8_t
	{
		Money = 0,
		Item  = 1,
		MAX   = 2
	};

	/**
	 * Enum TLScheme.EChatHyperlinkType
	 */
	enum class EChatHyperlinkType : uint8_t
	{
		Character           = 0,
		Item                = 1,
		Skill               = 2,
		NPC                 = 3,
		Guild               = 4,
		Map                 = 5,
		CallClan            = 6,
		Pin                 = 7,
		Polymorph           = 8,
		MagicDoll           = 9,
		GuildAttackedMember = 10,
		PcSubtitle          = 11,
		Zone                = 12,
		Contract            = 13,
		GuildContract       = 14,
		ItemCollection      = 15,
		Memorial            = 16,
		Url                 = 17,
		PartyInvate         = 18,
		MAX                 = 19
	};

	/**
	 * Enum TLScheme.ECastingEndReason
	 */
	enum class ECastingEndReason : uint8_t
	{
		Success = 0,
		Cancel  = 1,
		Fail    = 2,
		MAX     = 3
	};

	/**
	 * Enum TLScheme.ETLContentsListSortType
	 */
	enum class ETLContentsListSortType : uint8_t
	{
		Default  = 0,
		Acquired = 1,
		Grade    = 2,
		Name     = 3,
		MAX      = 4
	};

	/**
	 * Enum TLScheme.ETLUITargetPriority
	 */
	enum class ETLUITargetPriority : uint8_t
	{
		NpcFirst = 0,
		PcFirst  = 1,
		All      = 2,
		NpcOnly  = 3,
		PcOnly   = 4,
		MAX      = 5
	};

	/**
	 * Enum TLScheme.EEventCalenderType
	 */
	enum class EEventCalenderType : uint8_t
	{
		None           = 0,
		SeasonPass     = 1,
		RotationEvent  = 2,
		FixedTermEvent = 3,
		EndOfEnum      = 4,
		MAX            = 5
	};

	/**
	 * Enum TLScheme.EGuildRaidButtonState
	 */
	enum class EGuildRaidButtonState : uint8_t
	{
		Deactivate = 0,
		Enter      = 1,
		Change     = 2,
		MAX        = 3
	};

	/**
	 * Enum TLScheme.EGuildRaidState
	 */
	enum class EGuildRaidState : uint8_t
	{
		Deactivate = 0,
		Activate   = 1,
		Start      = 2,
		Complete   = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.EPcPlatformType
	 */
	enum class EPcPlatformType : uint8_t
	{
		Unknown     = 0,
		PC          = 1,
		Playstation = 2,
		XBox        = 3,
		Mobile      = 4,
		Steam       = 5,
		MAX         = 6
	};

	/**
	 * Enum TLScheme.ETLPolymorphUIContentType
	 */
	enum class ETLPolymorphUIContentType : uint8_t
	{
		Combat           = 0,
		Dash             = 1,
		Glide            = 2,
		Swim             = 3,
		Social           = 4,
		Collection       = 5,
		GrowthCollection = 6,
		MAX              = 7
	};

	/**
	 * Enum TLScheme.ETLAutoStatus
	 */
	enum class ETLAutoStatus : uint8_t
	{
		None           = 0,
		AutoCombat     = 1,
		AutoPathFollow = 2,
		MAX            = 3
	};

	/**
	 * Enum TLScheme.EPartySettingType
	 */
	enum class EPartySettingType : uint8_t
	{
		None         = 0,
		ItemReward   = 1,
		PinAuthority = 2,
		MAX          = 3
	};

	/**
	 * Enum TLScheme.ETLAbnormalStateUIType
	 */
	enum class ETLAbnormalStateUIType : uint8_t
	{
		My             = 0,
		Target         = 1,
		FriendlyTarget = 2,
		Custom         = 3,
		MAX            = 4
	};

	/**
	 * Enum TLScheme.ETLAbnormalStateUITab
	 */
	enum class ETLAbnormalStateUITab : uint8_t
	{
		My             = 0,
		Target         = 1,
		Party          = 2,
		FriendlyTarget = 3,
		MAX            = 4
	};

	/**
	 * Enum TLScheme.ETLTargetUIType
	 */
	enum class ETLTargetUIType : uint8_t
	{
		Target         = 0,
		FriendlyTarget = 1,
		BossTarget     = 2,
		MAX            = 3
	};

	/**
	 * Enum TLScheme.ETLMagicDollStringDialogType
	 */
	enum class ETLMagicDollStringDialogType : uint8_t
	{
		Normal              = 0,
		NormalTreasureBox   = 1,
		AdvancedTreasureBox = 2,
		MAX                 = 3
	};

	/**
	 * Enum TLScheme.ETLMagicDollExpressionVoiceType
	 */
	enum class ETLMagicDollExpressionVoiceType : uint8_t
	{
		None           = 0,
		ExpVoiceType1  = 1,
		ExpVoiceType2  = 2,
		ExpVoiceType3  = 3,
		ExpVoiceType4  = 4,
		ExpVoiceType5  = 5,
		ExpVoiceType6  = 6,
		ExpVoiceType7  = 7,
		ExpVoiceType8  = 8,
		ExpVoiceType9  = 9,
		ExpVoiceType10 = 10,
		ExpVoiceType11 = 11,
		ExpVoiceType12 = 12,
		ExpVoiceType13 = 13,
		ExpVoiceType14 = 14,
		ExpVoiceType15 = 15,
		MAX            = 16
	};

	/**
	 * Enum TLScheme.ETLExpressionVoiceType
	 */
	enum class ETLExpressionVoiceType : uint8_t
	{
		None         = 0,
		Pleasure     = 1,
		Gladness     = 2,
		Anger        = 3,
		Annoyance    = 4,
		Sadness      = 5,
		Resignation  = 6,
		Enjoyment    = 7,
		Comfort      = 8,
		Request      = 9,
		Monologue    = 10,
		Question     = 11,
		Doubt        = 12,
		Affirmation  = 13,
		Relief       = 14,
		Surprise     = 15,
		Astonishment = 16,
		Retort       = 17,
		Refutation   = 18,
		MAX          = 19
	};

	/**
	 * Enum TLScheme.ETLSpecialMoveSpeedMode
	 */
	enum class ETLSpecialMoveSpeedMode : uint8_t
	{
		Normal       = 0,
		Fast         = 1,
		Slow         = 2,
		DropDown     = 3,
		PowerLanding = 4,
		MAX          = 5
	};

	/**
	 * Enum TLScheme.ETLWeaponMasterySlotState
	 */
	enum class ETLWeaponMasterySlotState : uint8_t
	{
		Empty = 0,
		Close = 1,
		Open  = 2,
		MAX   = 3
	};

	/**
	 * Enum TLScheme.ETLWeaponSlotType
	 */
	enum class ETLWeaponSlotType : uint8_t
	{
		MainHand          = 0,
		OffHand           = 1,
		WeaponSlotTypeMax = 2,
		MAX               = 3
	};

	/**
	 * Enum TLScheme.ETLFixWorldTargetPositionType
	 */
	enum class ETLFixWorldTargetPositionType : uint8_t
	{
		None      = 0,
		LeftFix   = 1,
		RightFix  = 2,
		EndofEnum = 3,
		MAX       = 4
	};

	/**
	 * Enum TLScheme.ETLCardinalPoint
	 */
	enum class ETLCardinalPoint : uint8_t
	{
		None      = 0,
		East      = 1,
		West      = 2,
		South     = 3,
		North     = 4,
		EndofEnum = 5,
		MAX       = 6
	};

	/**
	 * Enum TLScheme.ETLNameplateDistanceGroup
	 */
	enum class ETLNameplateDistanceGroup : uint8_t
	{
		None   = 0,
		GroupA = 1,
		GroupB = 2,
		GroupC = 3,
		GroupD = 4,
		MAX    = 5
	};

	/**
	 * Enum TLScheme.EHpBarType
	 */
	enum class EHpBarType : uint8_t
	{
		None                   = 0,
		MyPc                   = 1,
		PartyMember            = 2,
		DEBoss                 = 3,
		WorldBoss              = 4,
		SiegePolymorphOtherPc  = 5,
		SiegePolymorphFriendly = 6,
		SiegePolymorphMyPc     = 7,
		CastleDoor             = 8,
		OtherPc                = 9,
		NPC                    = 10,
		FO                     = 11,
		Friendly               = 12,
		EndofEnum              = 13,
		MAX                    = 14
	};

	/**
	 * Enum TLScheme.ETLSkillSetUI
	 */
	enum class ETLSkillSetUI : uint8_t
	{
		None           = 0,
		QuickSlot      = 1,
		SkillSetWidget = 2,
		EndOfEnum      = 3,
		MAX            = 4
	};

	/**
	 * Enum TLScheme.EContractState
	 */
	enum class EContractState : uint8_t
	{
		kNone        = 0,
		kNotContract = 1,
		kContracted  = 2,
		kCompleted   = 3,
		EndOfEnum    = 4,
		MAX          = 5
	};

	/**
	 * Enum TLScheme.EFloaterType
	 */
	enum class EFloaterType : uint8_t
	{
		Damage    = 0,
		Abnormal  = 1,
		EndOfEnum = 2,
		MAX       = 3
	};

	/**
	 * Enum TLScheme.EFloaterCategory
	 */
	enum class EFloaterCategory : uint8_t
	{
		Glancing                     = 0,
		ShieldHit                    = 1,
		DamageShieldHit              = 2,
		Immuned                      = 3,
		CriticalHit                  = 4,
		GreatHit                     = 5,
		NormalHit                    = 6,
		Counter                      = 7,
		Miss                         = 8,
		CriticalHeal                 = 9,
		NormalHeal                   = 10,
		AbnormalGood                 = 11,
		AbnormalBad                  = 12,
		DoubleCriticalHit            = 13,
		DoubleHit                    = 14,
		NormalDefenseByDefenseAction = 15,
		HeavyDefenseByDefenseAction  = 16,
		CriticalHealDouble           = 17,
		NormalHealDouble             = 18,
		ContinuousHit                = 19,
		ContinuousHeal               = 20,
		Debug                        = 21,
		EndOfEnum                    = 22,
		MAX                          = 23
	};

	/**
	 * Enum TLScheme.ETLFixTargetSource
	 */
	enum class ETLFixTargetSource : uint8_t
	{
		None              = 0,
		Normal            = 1,
		PartyAssist       = 2,
		AutoCombat        = 3,
		Interaction       = 4,
		ResetTargetHelper = 5,
		MAX               = 6
	};

	/**
	 * Enum TLScheme.ETLPlayLoopMotion_MotionType
	 */
	enum class ETLPlayLoopMotion_MotionType : uint8_t
	{
		kStart                = 0,
		kLoop                 = 1,
		kEnd                  = 2,
		kEndFast              = 3,
		ETLPlayLoopMotion_MAX = 4
	};

	/**
	 * Enum TLScheme.EEndTakeType
	 */
	enum class EEndTakeType : uint8_t
	{
		Case_00  = 0,
		Case_01  = 1,
		Case_02  = 2,
		Case_03  = 3,
		Case_04  = 4,
		Case_MAX = 5
	};

	/**
	 * Enum TLScheme.EUserWidgetClassType
	 */
	enum class EUserWidgetClassType : uint8_t
	{
		None                    = 0,
		ChatBallonPC            = 1,
		ChatBalloonPCHorse      = 2,
		ChatBallonNPC           = 3,
		ChatBallonNPCIntegrated = 4,
		ChatBallonFO            = 5,
		HeadUIItem              = 6,
		HeadUISolo              = 7,
		HeadUIDuo               = 8,
		HeadUIMultiHorse        = 9,
		HeadUIMultiRider        = 10,
		ChatItem                = 11,
		ChatItemMy              = 12,
		ChatItemTime            = 13,
		ChatItemSimple          = 14,
		HeadUISimple            = 15,
		DropFoNameplate         = 16,
		PcNameplate             = 17,
		PcNameplateSimple       = 18,
		PcCasting               = 19,
		CountMax                = 20,
		MAX                     = 21
	};

	/**
	 * Enum TLScheme.EMainMenuType
	 */
	enum class EMainMenuType : uint8_t
	{
		MainMenuInventory            = 0,
		MainMenuCharacter            = 1,
		MainMenuSkill                = 2,
		MainMenuPolymorph            = 3,
		MainMenuGuild                = 4,
		MainMenuUnion                = 5,
		MainMenuWorldmap             = 6,
		MainMenuSavedPlace           = 7,
		MainMenuSystem               = 8,
		MainMenuOption               = 9,
		MainMenuMail                 = 10,
		MainMenuCuration             = 11,
		MainMenuMagicDoll            = 12,
		MainMenuCodex                = 13,
		MainMenuRanking              = 14,
		MainMenuContract             = 15,
		MainMenuPvpHistory           = 16,
		MainMenuItemCollection       = 17,
		MainMenuOpener               = 18,
		MainMenuClose                = 19,
		MainMenuCharacterSelect      = 20,
		MainMenuHelpInfo             = 21,
		MainMenuExit                 = 22,
		MainMenuCraftingBook         = 23,
		MainMenuTrade                = 24,
		MainMenuMemorial             = 25,
		MainMenuWeaponMastery        = 26,
		MainMenuPcRelationship       = 27,
		MainMenuAttend               = 28,
		MainMenuRingMenu             = 29,
		MainMenuEnchant              = 30,
		MainMenuPurchase             = 31,
		MainMenuSeasonPass           = 32,
		MainMenuRotationEvent        = 33,
		MainMenuTimeLimitDungeon     = 34,
		MainMenuEventCalender        = 35,
		MainMenuChatWindow           = 36,
		MainMenuGrowthPass           = 37,
		MainMenuVow                  = 38,
		MainMenuPartyManager         = 39,
		MainMenuTargetScanSetting    = 40,
		MainMenuAutoCombatResult     = 41,
		MainMenuBuff                 = 42,
		MainMenuMagicDollInteraction = 43,
		MainMenuHudCustomize         = 44,
		MainMenuBoutique             = 45,
		MainMenuCoupon               = 46,
		MainMenuRating               = 47,
		None                         = 48,
		MAX                          = 49
	};

	/**
	 * Enum TLScheme.EInteractionState
	 */
	enum class EInteractionState : uint8_t
	{
		kNone                    = 0,
		kOtherUIOpened           = 1,
		kDialogueSequence        = 2,
		kDialogueSelectWait      = 3,
		kInteractionQuery        = 4,
		kInteractionSelectWait   = 5,
		kInteractionExecute      = 6,
		kInteractionCastingStart = 7,
		kInteractionCastingEnd   = 8,
		kInteractionSkillEnd     = 9,
		kCombat                  = 10,
		kDeath                   = 11,
		kShowingPcContext        = 12,
		kInteractionItem         = 13,
		kDisableInteraction      = 14,
		kPcMount                 = 15,
		kShowFailErrorMsg        = 16,
		MAX                      = 17
	};

	/**
	 * Enum TLScheme.EActionBuilderCommandMacro
	 */
	enum class EActionBuilderCommandMacro : uint8_t
	{
		BuilderCommandMacro1  = 0,
		BuilderCommandMacro2  = 1,
		BuilderCommandMacro3  = 2,
		BuilderCommandMacro4  = 3,
		BuilderCommandMacro5  = 4,
		BuilderCommandMacro6  = 5,
		BuilderCommandMacro7  = 6,
		BuilderCommandMacro8  = 7,
		BuilderCommandMacro9  = 8,
		BuilderCommandMacro10 = 9,
		MAX                   = 10
	};

	/**
	 * Enum TLScheme.ETLUIActionType
	 */
	enum class ETLUIActionType : uint8_t
	{
		UIVirtualAccept   = 0,
		UIVirtualBack     = 1,
		UIFaceRight       = 2,
		UIFaceBottom      = 3,
		UIFaceTop         = 4,
		UIFaceLeft        = 5,
		UILeftBumper      = 6,
		UIRightBumper     = 7,
		UILeftTrigger     = 8,
		UIRightTrigger    = 9,
		UILeftStickPush   = 10,
		UIRightStickPush  = 11,
		UIDPadUp          = 12,
		UIDPadDown        = 13,
		UIDPadRight       = 14,
		UIDPadLeft        = 15,
		UILeftStickUp     = 16,
		UILeftStickDown   = 17,
		UILeftStickLeft   = 18,
		UILeftStickRight  = 19,
		UIRightStickUp    = 20,
		UIRightStickDown  = 21,
		UIRightStickLeft  = 22,
		UIRightStickRight = 23,
		kEndOfEnum        = 24,
		MAX               = 25
	};

	/**
	 * Enum TLScheme.EInputTypeUI
	 */
	enum class EInputTypeUI : uint8_t
	{
		Pc      = 0,
		PcPlay  = 1,
		Console = 2,
		MAX     = 3
	};

	/**
	 * Enum TLScheme.EKeyGroup
	 */
	enum class EKeyGroup : uint8_t
	{
		None           = 0,
		Lobby          = 1,
		Play           = 2,
		MapLoading     = 3,
		AvoidKeys      = 4,
		TestUserWidget = 5,
		CustomScene    = 6,
		MAX            = 7
	};

	/**
	 * Enum TLScheme.EInteractionType
	 */
	enum class EInteractionType : uint8_t
	{
		kNone            = 0,
		kInteract        = 1,
		kInstantInteract = 2,
		kEndOfEnum       = 3,
		MAX              = 4
	};

	/**
	 * Enum TLScheme.ETribeRelation
	 */
	enum class ETribeRelation : uint8_t
	{
		kHostile   = 0,
		kFriendly  = 1,
		kNeutral   = 2,
		kEndOfEnum = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.ESkillContextReason
	 */
	enum class ESkillContextReason : uint8_t
	{
		kNone    = 0,
		kContext = 1,
		MAX      = 2
	};

	/**
	 * Enum TLScheme.ESkillContextStatus
	 */
	enum class ESkillContextStatus : uint8_t
	{
		kNormal                    = 0,
		kLock                      = 1,
		kStunned                   = 2,
		kClose                     = 3,
		kUnequipped                = 4,
		kInTheAir                  = 5,
		kInDeactivatedWeaponPreset = 6,
		kInTheWater                = 7,
		kError                     = 8,
		MAX                        = 9
	};

	/**
	 * Enum TLScheme.ETLJsonContractType
	 */
	enum class ETLJsonContractType : uint8_t
	{
		kNone = 0,
		kNpc  = 1,
		kItem = 2,
		kBm   = 3,
		MAX   = 4
	};

	/**
	 * Enum TLScheme.ETLJsonContractGroupType
	 */
	enum class ETLJsonContractGroupType : uint8_t
	{
		kNpc  = 0,
		kItem = 1,
		kBm   = 2,
		MAX   = 3
	};

	/**
	 * Enum TLScheme.ETLJsonContractGrade
	 */
	enum class ETLJsonContractGrade : uint8_t
	{
		kOne   = 0,
		kTwo   = 1,
		kThree = 2,
		kFour  = 3,
		kFive  = 4,
		MAX    = 5
	};

	/**
	 * Enum TLScheme.EGuildContractType
	 */
	enum class EGuildContractType : uint8_t
	{
		kNormal = 0,
		kParty  = 1,
		kEvent  = 2,
		MAX     = 3
	};

	/**
	 * Enum TLScheme.ETLJsonMapRegionType
	 */
	enum class ETLJsonMapRegionType : uint8_t
	{
		kPeace    = 0,
		kConflict = 1,
		kSafety   = 2,
		kFreeDuel = 3,
		kWar      = 4,
		kCombat   = 5,
		MAX       = 6
	};

	/**
	 * Enum TLScheme.ETLJsonMapResurrectionPointType
	 */
	enum class ETLJsonMapResurrectionPointType : uint8_t
	{
		kNone              = 0,
		kResurrectionPoint = 1,
		kDynamicEventPoint = 2,
		kTaxDelivery       = 3,
		kWorldBoss         = 4,
		MAX                = 5
	};

	/**
	 * Enum TLScheme.ETLJsonMapResurrectionType
	 */
	enum class ETLJsonMapResurrectionType : uint8_t
	{
		kNone              = 0,
		kResurrectionPoint = 1,
		kStartPoint        = 2,
		kInstanceDungeon   = 3,
		kGuildRaid         = 4,
		MAX                = 5
	};

	/**
	 * Enum TLScheme.ETLJsonGuildRankedRewardGroup
	 */
	enum class ETLJsonGuildRankedRewardGroup : uint8_t
	{
		kA  = 0,
		kB  = 1,
		kC  = 2,
		kD  = 3,
		kE  = 4,
		kF  = 5,
		kG  = 6,
		kH  = 7,
		kI  = 8,
		kJ  = 9,
		MAX = 10
	};

	/**
	 * Enum TLScheme.ETLJsonRankedRewardGroup
	 */
	enum class ETLJsonRankedRewardGroup : uint8_t
	{
		kA  = 0,
		kB  = 1,
		kC  = 2,
		kD  = 3,
		kE  = 4,
		MAX = 5
	};

	/**
	 * Enum TLScheme.ETLJsonTerrirtoryAbyssType
	 */
	enum class ETLJsonTerrirtoryAbyssType : uint8_t
	{
		kNone = 0,
		kEarn = 1,
		kUse  = 2,
		MAX   = 3
	};

	/**
	 * Enum TLScheme.EHpAbnormalStatus
	 */
	enum class EHpAbnormalStatus : uint8_t
	{
		kNone          = 0,
		kPetrification = 1,
		kBurn          = 2,
		kAddict        = 3,
		MAX            = 4
	};

	/**
	 * Enum TLScheme.EInfluenceOnHorse
	 */
	enum class EInfluenceOnHorse : uint8_t
	{
		kNone            = 0,
		kApplyWith       = 1,
		kUnmountOnly     = 2,
		kUnmountAndApply = 3,
		MAX              = 4
	};

	/**
	 * Enum TLScheme.EInfluenceOnRider
	 */
	enum class EInfluenceOnRider : uint8_t
	{
		kNone                   = 0,
		kInfection              = 1,
		kSeparation             = 2,
		kInfectionAndSeparation = 3,
		MAX                     = 4
	};

	/**
	 * Enum TLScheme.ETLAbnormalSctCategory
	 */
	enum class ETLAbnormalSctCategory : uint8_t
	{
		Aura        = 0,
		Top         = 1,
		Cap         = 2,
		Body        = 3,
		Potion      = 4,
		Root        = 5,
		Animation   = 6,
		System      = 7,
		kEndOfEnums = 8,
		MAX         = 9
	};

	/**
	 * Enum TLScheme.EDurationModifyGroup
	 */
	enum class EDurationModifyGroup : uint8_t
	{
		kNone   = 0,
		kBuff   = 1,
		kDebuff = 2,
		MAX     = 3
	};

	/**
	 * Enum TLScheme.EModifyGroup
	 */
	enum class EModifyGroup : uint8_t
	{
		kNone          = 0,
		kWeaken        = 1,
		kStun          = 2,
		kPetrification = 3,
		kSleep         = 4,
		kSilence       = 5,
		kBind          = 6,
		kBlind         = 7,
		kCollide       = 8,
		MAX            = 9
	};

	/**
	 * Enum TLScheme.EAbnormalStackingPolicyType
	 */
	enum class EAbnormalStackingPolicyType : uint8_t
	{
		kOneByOne         = 0,
		kStackUp          = 1,
		kStackUpPerPlayer = 2,
		kDominance        = 3,
		MAX               = 4
	};

	/**
	 * Enum TLScheme.ETLDurationSettingPolicyType
	 */
	enum class ETLDurationSettingPolicyType : uint8_t
	{
		kReplace     = 0,
		kAddDuration = 1,
		kPickLonger  = 2,
		MAX          = 3
	};

	/**
	 * Enum TLScheme.ETLCollisionDisableType
	 */
	enum class ETLCollisionDisableType : uint8_t
	{
		None   = 0,
		OnlyPC = 1,
		All    = 2,
		MAX    = 3
	};

	/**
	 * Enum TLScheme.EAbnormalGoodOrBad
	 */
	enum class EAbnormalGoodOrBad : uint8_t
	{
		kGood = 0,
		kBad  = 1,
		kNone = 2,
		MAX   = 3
	};

	/**
	 * Enum TLScheme.EAbnormalDispelTag
	 */
	enum class EAbnormalDispelTag : uint8_t
	{
		kMagic  = 0,
		kPoison = 1,
		kFury   = 2,
		kCurse  = 3,
		MAX     = 4
	};

	/**
	 * Enum TLScheme.ETLAbnormalSctShowOption
	 */
	enum class ETLAbnormalSctShowOption : uint8_t
	{
		All                 = 0,
		CasterAndTargetOnly = 1,
		MyPartyOnly         = 2,
		MAX                 = 3
	};

	/**
	 * Enum TLScheme.EControlTargetOnPartType
	 */
	enum class EControlTargetOnPartType : uint8_t
	{
		kNone    = 0,
		kAllow   = 1,
		kProtect = 2,
		MAX      = 3
	};

	/**
	 * Enum TLScheme.ETLCarrierType
	 */
	enum class ETLCarrierType : uint8_t
	{
		None       = 0,
		Attached   = 1,
		Gigantrite = 2,
		Standalone = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.EUseSkillEventSendTime
	 */
	enum class EUseSkillEventSendTime : uint8_t
	{
		kError        = 0,
		kNone         = 1,
		kSwingTime    = 2,
		kFirstHitTime = 3,
		kFinishTime   = 4,
		kLeave        = 5,
		MAX           = 6
	};

	/**
	 * Enum TLScheme.ESkillTargetObjectType
	 */
	enum class ESkillTargetObjectType : uint8_t
	{
		kNone = 0,
		kPC   = 1,
		kNPC  = 2,
		kFO   = 3,
		MAX   = 4
	};

	/**
	 * Enum TLScheme.ETLSkillTargetExceptionalRule
	 */
	enum class ETLSkillTargetExceptionalRule : uint8_t
	{
		kError                 = 0,
		kNone                  = 1,
		kCasterOnly            = 2,
		kExcludeCaster         = 3,
		kExcludeExecuter       = 4,
		kExcludeCasterExecuter = 5,
		kExcludeMainTarget     = 6,
		MAX                    = 7
	};

	/**
	 * Enum TLScheme.ETransResultType
	 */
	enum class ETransResultType : uint8_t
	{
		kNone        = 0,
		kDespawn     = 1,
		kChangeState = 2,
		MAX          = 3
	};

	/**
	 * Enum TLScheme.ETransCondType
	 */
	enum class ETransCondType : uint8_t
	{
		kNone     = 0,
		kCooldown = 1,
		kDeath    = 2,
		MAX       = 3
	};

	/**
	 * Enum TLScheme.ETLChallengeCodeCategory
	 */
	enum class ETLChallengeCodeCategory : uint8_t
	{
		kPrologue = 0,
		kNormal   = 1,
		kFinal    = 2,
		EndOfEnum = 3,
		MAX       = 4
	};

	/**
	 * Enum TLScheme.EChatInputMode
	 */
	enum class EChatInputMode : uint8_t
	{
		ChatInputMode_Normal       = 0,
		ChatInputMode_Area         = 1,
		ChatInputMode_Party        = 2,
		ChatInputMode_Guild        = 3,
		ChatInputMode_Union        = 4,
		ChatInputMode_Whisper      = 5,
		ChatInputMode_World        = 6,
		ChatInputMode_Help         = 7,
		ChatInputMode_GuildNotice  = 8,
		ChatInputMode_UnionNotice  = 9,
		ChatInputMode_Group1       = 10,
		ChatInputMode_Group2       = 11,
		ChatInputMode_Group3       = 12,
		ChatInputMode_Group4       = 13,
		ChatInputMode_Group5       = 14,
		ChatInputMode_Group1Notice = 15,
		ChatInputMode_Group2Notice = 16,
		ChatInputMode_Group3Notice = 17,
		ChatInputMode_Group4Notice = 18,
		ChatInputMode_Group5Notice = 19,
		ChatInputMode_MAX          = 20
	};

	/**
	 * Enum TLScheme.ETLChatTabType
	 */
	enum class ETLChatTabType : uint8_t
	{
		ChatAll             = 0,
		ChatNormal          = 1,
		ChatWorld           = 2,
		ChatParty           = 3,
		ChatGuildUnion      = 4,
		ChatSystem          = 5,
		ChatContents        = 6,
		UserCustom          = 7,
		Group1              = 8,
		Group2              = 9,
		Group3              = 10,
		Group4              = 11,
		Group5              = 12,
		GroupMenu           = 13,
		Whisper             = 14,
		GroupExpandButton   = 15,
		WhisperExpandButton = 16,
		FriendList          = 17,
		EndOfEnum           = 18,
		MAX                 = 19
	};

	/**
	 * Enum TLScheme.EChatCommandCategory
	 */
	enum class EChatCommandCategory : uint8_t
	{
		kNone      = 0,
		kChat      = 1,
		kCommunity = 2,
		kAction    = 3,
		kSocial    = 4,
		kEmoticon  = 5,
		MAX        = 6
	};

	/**
	 * Enum TLScheme.EChatMessageCategory
	 */
	enum class EChatMessageCategory : uint8_t
	{
		kNone              = 0,
		kChatNormal        = 1,
		kChatParty         = 2,
		kChatGuild         = 3,
		kChatUnion         = 4,
		kChatArea          = 5,
		kChatWhisper       = 6,
		kChatWorld         = 7,
		kChatGroup1        = 8,
		kChatGroup2        = 9,
		kChatGroup3        = 10,
		kChatGroup4        = 11,
		kChatGroup5        = 12,
		kChatGuildNotice   = 13,
		kSysArea           = 14,
		kSysBroadcast      = 15,
		kSysDice           = 16,
		kSysExp            = 17,
		kSysGuild          = 18,
		kSysUnion          = 19,
		kChatUnionNotice   = 20,
		kSysInfo           = 21,
		kSysItem           = 22,
		kSysItemParty      = 23,
		kSysMoney          = 24,
		kSysNormal         = 25,
		kSysNotice         = 26,
		kSysOperation      = 27,
		kSysParty          = 28,
		kSysSiege          = 29,
		kSysWarning        = 30,
		kSysWorld          = 31,
		kSysCp             = 32,
		kContSpeech        = 33,
		kContDialogue      = 34,
		kContShout         = 35,
		kContMonologue     = 36,
		kContTalk          = 37,
		kContCodex         = 38,
		kSysTaunt          = 39,
		kSysPvp            = 40,
		kSysBroadcastGuild = 41,
		kSysGroup          = 42,
		kSysGroup1         = 43,
		kSysGroup2         = 44,
		kSysGroup3         = 45,
		kSysGroup4         = 46,
		kSysGroup5         = 47,
		kGroupNotice1      = 48,
		kGroupNotice2      = 49,
		kGroupNotice3      = 50,
		kGroupNotice4      = 51,
		kGroupNotice5      = 52,
		kSysTip            = 53,
		kDebug             = 54,
		MAX                = 55
	};

	/**
	 * Enum TLScheme.EChatPortraitType
	 */
	enum class EChatPortraitType : uint8_t
	{
		None              = 0,
		SystemPortrait    = 1,
		GuildPortrait     = 2,
		RewardPortrait    = 3,
		BroadcastPortrait = 4,
		DicePortrait      = 5,
		DialoguePortrait  = 6,
		UserPortrait      = 7,
		MAX               = 8
	};

	/**
	 * Enum TLScheme.EChatMessageFilterGroup
	 */
	enum class EChatMessageFilterGroup : uint8_t
	{
		FilterGroupNone   = 0,
		FilterGroupChat   = 1,
		FilterGroupSystem = 2,
		FilterGroupTake   = 3,
		FilterGroupNpc    = 4,
		EndOfEnum         = 5,
		MAX               = 6
	};

	/**
	 * Enum TLScheme.ETLChatVisibleType
	 */
	enum class ETLChatVisibleType : uint8_t
	{
		Normal = 0,
		Mini   = 1,
		Hide   = 2,
		MAX    = 3
	};

	/**
	 * Enum TLScheme.ETLClientObjectType
	 */
	enum class ETLClientObjectType : uint8_t
	{
		NONE               = 0,
		BOSS_SPAWN_SIGN    = 1,
		DYNAMIC_EVENT_SIGN = 2,
		MAX                = 3
	};

	/**
	 * Enum TLScheme.ECodeDrawLineDirectionType
	 */
	enum class ECodeDrawLineDirectionType : uint8_t
	{
		UpperLine = 0,
		UnderLine = 1,
		MAX       = 2
	};

	/**
	 * Enum TLScheme.ETLConditionalTaskMethod
	 */
	enum class ETLConditionalTaskMethod : uint8_t
	{
		RandomlyOneOfFirstMatchedConditionContents = 0,
		RandomlyOneOfAllMatchedConditionContents   = 1,
		MAX                                        = 2
	};

	/**
	 * Enum TLScheme.ETLContentsOpenPolymorphTypeMask
	 */
	enum class ETLContentsOpenPolymorphTypeMask : uint8_t
	{
		None        = 0,
		Combat      = 1,
		Mobility    = 2,
		SiegeWeapon = 3,
		Social      = 4,
		Temporary   = 5,
		MAX         = 6
	};

	/**
	 * Enum TLScheme.EContractTabType
	 */
	enum class EContractTabType : uint8_t
	{
		ContractableList   = 0,
		BmContractableList = 1,
		ContractedList     = 2,
		MAX                = 3
	};

	/**
	 * Enum TLScheme.ETLCraftingCategoryType
	 */
	enum class ETLCraftingCategoryType : uint8_t
	{
		kDefault = 0,
		kPcClass = 1,
		MAX      = 2
	};

	/**
	 * Enum TLScheme.ETLCraftingBookType
	 */
	enum class ETLCraftingBookType : uint8_t
	{
		None      = 0,
		Weapon    = 1,
		Equip     = 2,
		Accessory = 3,
		Grocery   = 4,
		SkillBook = 5,
		Max       = 6
	};

	/**
	 * Enum TLScheme.ETLCustomizingMakeupItemRaceFilter
	 */
	enum class ETLCustomizingMakeupItemRaceFilter : uint8_t
	{
		Human = 0,
		Count = 1,
		MAX   = 2
	};

	/**
	 * Enum TLScheme.EDialogueType
	 */
	enum class EDialogueType : uint8_t
	{
		kNone                 = 0,
		kTimelineScene        = 1,
		kInteractionScene     = 2,
		kInteractionSceneA    = 3,
		kInteractionSceneB    = 4,
		kInteractionSceneC    = 5,
		kInteractionSceneD    = 6,
		kIntegratedChatBallon = 7,
		MAX                   = 8
	};

	/**
	 * Enum TLScheme.EDynamicEventProgressType
	 */
	enum class EDynamicEventProgressType : uint8_t
	{
		kNone     = 0,
		kPrepare  = 1,
		kProgress = 2,
		MAX       = 3
	};

	/**
	 * Enum TLScheme.ETLDynamicEventWarehouseValueType
	 */
	enum class ETLDynamicEventWarehouseValueType : uint8_t
	{
		MY_COUNT          = 0,
		MAX_COUNT         = 1,
		TOTAL_COUNT       = 2,
		TOP_COUNT         = 3,
		INFINITY_COUNT    = 4,
		ACQUIREABLE_COUNT = 5,
		MAX               = 6
	};

	/**
	 * Enum TLScheme.ETLProjectileType
	 */
	enum class ETLProjectileType : uint8_t
	{
		kOnNav  = 0,
		kDirect = 1,
		MAX     = 2
	};

	/**
	 * Enum TLScheme.EHitSctDir
	 */
	enum class EHitSctDir : uint8_t
	{
		Neutral     = 0,
		LeftToRight = 1,
		RightToLeft = 2,
		BottomToTop = 3,
		TopToBottom = 4,
		FrontToBack = 5,
		BackToFront = 6,
		MAX         = 7
	};

	/**
	 * Enum TLScheme.ERagdollPower
	 */
	enum class ERagdollPower : uint8_t
	{
		Low    = 0,
		Medium = 1,
		High   = 2,
		MAX    = 3
	};

	/**
	 * Enum TLScheme.ERagdollPosition
	 */
	enum class ERagdollPosition : uint8_t
	{
		FromCaster = 0,
		FromPoint  = 1,
		MAX        = 2
	};

	/**
	 * Enum TLScheme.ERagdollType
	 */
	enum class ERagdollType : uint8_t
	{
		Normal        = 0,
		Collapse      = 1,
		CollapseFront = 2,
		CollapseBack  = 3,
		BombEffect    = 4,
		MAX           = 5
	};

	/**
	 * Enum TLScheme.EEffectGroup
	 */
	enum class EEffectGroup : uint8_t
	{
		None                                = 0,
		Abnormal_Propagation                = 1,
		Add_Skill_Cost                      = 2,
		Adjust_Armor_By_Shield_Block_Chance = 3,
		Adjust_Duration                     = 4,
		Adjust_Dynamic_Stat                 = 5,
		Adjust_Gliding_Ability              = 6,
		Adjust_Judgement_To_Causer          = 7,
		Adjust_Sensory_Range                = 8,
		Adjust_Skill_Cooldown               = 9,
		Adjust_Stat                         = 10,
		Adjust_Stealth_Detection_Range      = 11,
		Aoe_Anchored                        = 12,
		Aoe_Projectile                      = 13,
		Aoe_Projectile_Control              = 14,
		Aoe_Tornado                         = 15,
		Apply                               = 16,
		Apply_To_Caster_Friendly_Target     = 17,
		Apply_To_Guild_Members              = 18,
		Attach_Summons                      = 19,
		Attack_Event                        = 20,
		Aura                                = 21,
		Block                               = 22,
		Boost_Stat_By_Abnormal              = 23,
		Boost_Stat_By_Distance              = 24,
		bring_on                            = 25,
		Call_Area                           = 26,
		Call_Child                          = 27,
		CallClan                            = 28,
		Carrier_CallClan                    = 29,
		Carrier_Change_State                = 30,
		Carrier_Move                        = 31,
		Carrier_Polymorph                   = 32,
		Carrier_Rotate                      = 33,
		Caster_Conditional_Branch           = 34,
		Central_Force                       = 35,
		Central_Force_Move_Watcher          = 36,
		change_aggressive                   = 37,
		Change_Position                     = 38,
		Cluster_Bomb                        = 39,
		Collider                            = 40,
		Conditional_Activation              = 41,
		Conditional_Branch                  = 42,
		Continuous_Damage                   = 43,
		Continuous_Heal                     = 44,
		Cooldown                            = 45,
		Cooldown_Reduction                  = 46,
		Crowd_Surfing                       = 47,
		Damage_Accumulation                 = 48,
		Damage_Distribution                 = 49,
		Damage_Imputation                   = 50,
		Damage_Partial_Adjustment           = 51,
		Damage_Shield                       = 52,
		Dash_State_Manager                  = 53,
		Definite_Attack_Result              = 54,
		Detach_Summons                      = 55,
		Direct_Damage                       = 56,
		Directional_Force                   = 57,
		Dispel                              = 58,
		Do_Nothing_Duration                 = 59,
		Do_Nothing_Instant                  = 60,
		Drop_Rider                          = 61,
		Durational_Summon                   = 62,
		Durational_Taunt                    = 63,
		Dynamic_Boost_Stat                  = 64,
		Elemental                           = 65,
		Elemental_Picker                    = 66,
		Environment_Change                  = 67,
		Event_Trigger                       = 68,
		Falling                             = 69,
		Fear                                = 70,
		Fo_Change_State                     = 71,
		Forced_Conditional_Skill            = 72,
		forced_movement                     = 73,
		Forced_Self_Defense_Status          = 74,
		Forced_Teleport                     = 75,
		Fo_Transform                        = 76,
		Give_Item                           = 77,
		Gliding_Float                       = 78,
		Gliding_State_Manager               = 79,
		Global_Cooldown_Reduction           = 80,
		HpLimitControl                      = 81,
		Inexhaustible_Skill_Cost            = 82,
		Instant_Death                       = 83,
		Instant_Drain                       = 84,
		Instant_Heal                        = 85,
		Instant_Taunt                       = 86,
		Intervallic_Damage                  = 87,
		Intervallic_Heal                    = 88,
		Mark                                = 89,
		Move_Watcher                        = 90,
		Npc_Change_Appearance               = 91,
		Npc_Transform                       = 92,
		Override_Skill_Level                = 93,
		Passive_On                          = 94,
		Pattern                             = 95,
		Projectile                          = 96,
		Random_Picker                       = 97,
		Relative_Position                   = 98,
		Resurrection                        = 99,
		Return_To_Caster                    = 100,
		Sensor                              = 101,
		Set_Collision_Size                  = 102,
		Skill_Cost_Accumulation             = 103,
		SkillCost_To_HP                     = 104,
		Spell_Polymorph                     = 105,
		Stamina_Damage                      = 106,
		Stamina_Watcher                     = 107,
		Start_Gliding_On_Jump               = 108,
		Store_Formula                       = 109,
		Summon                              = 110,
		Support                             = 111,
		Swimming_State_Manager              = 112,
		Target_Counter                      = 113,
		Target_Direction_Filter             = 114,
		TransferableBinder                  = 115,
		Wind_Blown                          = 116,
		WithinRangeBinder                   = 117,
		MAX                                 = 118
	};

	/**
	 * Enum TLScheme.EWorldMapListSearchType
	 */
	enum class EWorldMapListSearchType : uint8_t
	{
		Region   = 0,
		Species  = 1,
		Monsters = 2,
		Max      = 3
	};

	/**
	 * Enum TLScheme.ETLSeasonPassStatusType
	 */
	enum class ETLSeasonPassStatusType : uint8_t
	{
		EnableFreePass   = 0,
		EnableTicketPass = 1,
		GracePeriod      = 2,
		MAX              = 3
	};

	/**
	 * Enum TLScheme.ETLContentsViewerNotifyType
	 */
	enum class ETLContentsViewerNotifyType : uint8_t
	{
		CreateNotify    = 0,
		AddRewardNotify = 1,
		NotRewardNotify = 2,
		MAX             = 3
	};

	/**
	 * Enum TLScheme.EPurchaseCurrencyGroupType
	 */
	enum class EPurchaseCurrencyGroupType : uint8_t
	{
		Cash    = 0,
		Diamond = 1,
		Max     = 2
	};

	/**
	 * Enum TLScheme.ETLLanguageTag
	 */
	enum class ETLLanguageTag : uint8_t
	{
		Engine = 0,
		Purple = 1,
		MAX    = 2
	};

	/**
	 * Enum TLScheme.ETLLanguages
	 */
	enum class ETLLanguages : uint8_t
	{
		Korean             = 0,
		English            = 1,
		Japanese           = 2,
		ChineseTraditional = 3,
		French             = 4,
		German             = 5,
		Spanish            = 6,
		SpanishLatAm       = 7,
		Portuguese         = 8,
		Thai               = 9,
		MAX                = 10
	};

	/**
	 * Enum TLScheme.ETLDynamicEventType
	 */
	enum class ETLDynamicEventType : uint8_t
	{
		NormalEvent = 0,
		PeaceEvent  = 1,
		GuildEvent  = 2,
		EndOfEnum   = 3,
		MAX         = 4
	};

	/**
	 * Enum TLScheme.ETLGetROType
	 */
	enum class ETLGetROType : uint8_t
	{
		Mineral  = 0,
		Wood     = 1,
		Herb     = 2,
		Cactus   = 3,
		Mushroom = 4,
		MAX      = 5
	};

	/**
	 * Enum TLScheme.ETLWidgetPlatformBits
	 */
	enum class ETLWidgetPlatformBits : uint8_t
	{
		FLAG_NONE    = 0,
		FLAG_PC      = 1,
		FLAG_CONSOLE = 2,
		FLAG_MOBILE  = 3,
		FLAG_ALL     = 4,
		FLAG_MAX     = 5
	};

	/**
	 * Enum TLScheme.ETLTerritoryFogState
	 */
	enum class ETLTerritoryFogState : uint8_t
	{
		CLOSED  = 0,
		OPENING = 1,
		OPENED  = 2,
		MAX     = 3
	};

	/**
	 * Enum TLScheme.ETLWidgetCreationSetType
	 */
	enum class ETLWidgetCreationSetType : uint8_t
	{
		NONE    = 0,
		CLIENT  = 1,
		PREGAME = 2,
		INGAME  = 3,
		MAX     = 4
	};

	/**
	 * Enum TLScheme.ETLSkillSetType
	 */
	enum class ETLSkillSetType : uint8_t
	{
		None              = 0,
		WeaponSkillSet    = 1,
		PolymorphSkillSet = 2,
		SpecialSkillSet   = 3,
		RankingSkillSet   = 4,
		MAX               = 5
	};

	/**
	 * Enum TLScheme.ETLRewardDistribution
	 */
	enum class ETLRewardDistribution : uint8_t
	{
		kByContribution    = 0,
		kToTerminator      = 1,
		kToTerminatorParty = 2,
		MAX                = 3
	};

	/**
	 * Enum TLScheme.EEmojiTabType
	 */
	enum class EEmojiTabType : uint8_t
	{
		Tab1 = 0,
		Tab2 = 1,
		Tab3 = 2,
		MAX  = 3
	};

	/**
	 * Enum TLScheme.ETLPostCategoryType
	 */
	enum class ETLPostCategoryType : uint8_t
	{
		System  = 0,
		User    = 1,
		Storage = 2,
		MAX     = 3
	};

	/**
	 * Enum TLScheme.EDragScrollingType
	 */
	enum class EDragScrollingType : uint8_t
	{
		RightClick = 0,
		LeftClick  = 1,
		MAX        = 2
	};

	/**
	 * Enum TLScheme.ETLPostUserCategoryType
	 */
	enum class ETLPostUserCategoryType : uint8_t
	{
		Player = 0,
		Guild  = 1,
		Union  = 2,
		MAX    = 3
	};

	/**
	 * Enum TLScheme.ETLMemorialRankingType
	 */
	enum class ETLMemorialRankingType : uint8_t
	{
		kNone                 = 0,
		kPcExpRank            = 1,
		kGuildActivePointRank = 2,
		kWorldCharacterRank   = 3,
		EndOfEnum             = 4,
		MAX                   = 5
	};

	/**
	 * Enum TLScheme.ETLMemorialRecordType
	 */
	enum class ETLMemorialRecordType : uint8_t
	{
		kPersonal = 0,
		kGuild    = 1,
		kServer   = 2,
		EndOfEnum = 3,
		MAX       = 4
	};

	/**
	 * Enum TLScheme.ETLGroupChatRole
	 */
	enum class ETLGroupChatRole : uint8_t
	{
		Joiner    = 0,
		Master    = 1,
		SubMaster = 2,
		EndOfEnum = 3,
		MAX       = 4
	};

	/**
	 * Enum TLScheme.ETLDeveloperLetterType
	 */
	enum class ETLDeveloperLetterType : uint8_t
	{
		None             = 0,
		SinglePage       = 1,
		BothPages        = 2,
		SmallPicturePage = 3,
		LargePicturePage = 4,
		EndOfEnum        = 5,
		MAX              = 6
	};

	/**
	 * Enum TLScheme.ETLLevelAchievementType
	 */
	enum class ETLLevelAchievementType : uint8_t
	{
		None             = 0,
		BonusStat        = 1,
		BonusNpcContract = 2,
		ContractCommon   = 3,
		ContentsOpen     = 4,
		Reward           = 5,
		MAX              = 6
	};

	/**
	 * Enum TLScheme.ETLGrowthMissionType
	 */
	enum class ETLGrowthMissionType : uint8_t
	{
		None         = 0,
		ContentsOpen = 1,
		Reward       = 2,
		MAX          = 3
	};

	/**
	 * Enum TLScheme.ETLCodexCollectionPageType
	 */
	enum class ETLCodexCollectionPageType : uint8_t
	{
		None        = 0,
		SinglePage  = 1,
		BothPages   = 2,
		PicturePage = 3,
		EndOfEnum   = 4,
		MAX         = 5
	};

	/**
	 * Enum TLScheme.ETLCodexCollectionType
	 */
	enum class ETLCodexCollectionType : uint8_t
	{
		None      = 0,
		Bundle    = 1,
		Book      = 2,
		Page      = 3,
		EndOfEnum = 4,
		MAX       = 5
	};

	/**
	 * Enum TLScheme.ECastleType
	 */
	enum class ECastleType : uint8_t
	{
		kNone     = 0,
		kStongard = 1,
		kDraco    = 2,
		kTreheim  = 3,
		EndOfEnum = 4,
		MAX       = 5
	};

	/**
	 * Enum TLScheme.ETLFishGrade
	 */
	enum class ETLFishGrade : uint8_t
	{
		kNone      = 0,
		kCommon    = 1,
		kUncommon  = 2,
		kRare      = 3,
		kHeroic    = 4,
		kLegendary = 5,
		EndOfEnum  = 6,
		MAX        = 7
	};

	/**
	 * Enum TLScheme.EEventCalenderRelatedType
	 */
	enum class EEventCalenderRelatedType : uint8_t
	{
		None            = 0,
		SeasonPassUI    = 1,
		RotationEventUI = 2,
		Web             = 3,
		EndOfEnum       = 4,
		MAX             = 5
	};

	/**
	 * Enum TLScheme.ETLSeasonPassRewardType
	 */
	enum class ETLSeasonPassRewardType : uint8_t
	{
		None       = 0,
		Both       = 1,
		FreeOnly   = 2,
		TicketOnly = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.EItemLifeTimeType
	 */
	enum class EItemLifeTimeType : uint8_t
	{
		None     = 0,
		DateTime = 1,
		Usage    = 2,
		Fixed    = 3,
		MAX      = 4
	};

	/**
	 * Enum TLScheme.ETLSeasonPassTaskGroupType
	 */
	enum class ETLSeasonPassTaskGroupType : uint8_t
	{
		Daily  = 0,
		Weekly = 1,
		Season = 2,
		MAX    = 3
	};

	/**
	 * Enum TLScheme.ETLSeasonPassTaskType
	 */
	enum class ETLSeasonPassTaskType : uint8_t
	{
		None        = 0,
		Daily       = 1,
		Weekly      = 2,
		Season      = 3,
		RandomDaily = 4,
		MAX         = 5
	};

	/**
	 * Enum TLScheme.ETLSlateImageType
	 */
	enum class ETLSlateImageType : uint8_t
	{
		SPRITE  = 0,
		TEXTURE = 1,
		MAX     = 2
	};

	/**
	 * Enum TLScheme.ETLWorldEffectType
	 */
	enum class ETLWorldEffectType : uint8_t
	{
		WorldEffect           = 0,
		MapCarrierWorldEffect = 1,
		MapCarrierSafeEffect  = 2,
		MAX                   = 3
	};

	/**
	 * Enum TLScheme.ETLTeamBattleMessageType
	 */
	enum class ETLTeamBattleMessageType : uint8_t
	{
		StartTeamBattle        = 0,
		WarningIntensiveAttack = 1,
		MAX                    = 2
	};

	/**
	 * Enum TLScheme.ETLSpeakDistanceType
	 */
	enum class ETLSpeakDistanceType : uint8_t
	{
		None    = 0,
		Near    = 1,
		Far     = 2,
		NoLimit = 3,
		MAX     = 4
	};

	/**
	 * Enum TLScheme.ETimePhase
	 */
	enum class ETimePhase : uint8_t
	{
		kDay   = 0,
		kNight = 1,
		MAX    = 2
	};

	/**
	 * Enum TLScheme.EWeatherType
	 */
	enum class EWeatherType : uint8_t
	{
		Normal    = 0,
		Rain      = 1,
		Thunder   = 2,
		Snow      = 3,
		Indoor    = 4,
		MagicRain = 5,
		EndOfEnum = 6,
		None      = 7,
		MAX       = 8
	};

	/**
	 * Enum TLScheme.ETLCodexCommonStatusType
	 */
	enum class ETLCodexCommonStatusType : uint8_t
	{
		Closed   = 0,
		Progress = 1,
		Attained = 2,
		Rewarded = 3,
		MAX      = 4
	};

	/**
	 * Enum TLScheme.ETLCodexAchievementActionType
	 */
	enum class ETLCodexAchievementActionType : uint8_t
	{
		None         = 0,
		DynamicEvent = 1,
		Contract     = 2,
		Hunting      = 3,
		MAX          = 4
	};

	/**
	 * Enum TLScheme.ETLContentHolderType
	 */
	enum class ETLContentHolderType : uint8_t
	{
		None           = 0,
		Memorial       = 1,
		Codex          = 2,
		PlayerContract = 3,
		GuildContract  = 4,
		Crafting       = 5,
		MAX            = 6
	};

	/**
	 * Enum TLScheme.ETLTerrirtoryAbyssType
	 */
	enum class ETLTerrirtoryAbyssType : uint8_t
	{
		kNone = 0,
		kEarn = 1,
		kUse  = 2,
		MAX   = 3
	};

	/**
	 * Enum TLScheme.ETLTraceEffectType
	 */
	enum class ETLTraceEffectType : uint8_t
	{
		kNone    = 0,
		kFighter = 1,
		kFloor   = 2,
		MAX      = 3
	};

	/**
	 * Enum TLScheme.EMaterialCategory
	 */
	enum class EMaterialCategory : uint8_t
	{
		kNone                = 0,
		kMaterialFabric      = 1,
		kMaterialIron        = 2,
		kMaterialWood        = 3,
		kMaterialLeather     = 4,
		kMaterialSilver      = 5,
		kMaterialBone        = 6,
		kMaterialBeast       = 7,
		kMaterialAnimal      = 8,
		kMaterialInsect      = 9,
		kMaterialPlant       = 10,
		kMaterialGold        = 11,
		kMaterialFragment    = 12,
		kMaterialElement     = 13,
		kMaterialPlatinum    = 14,
		kMaterialMithril     = 15,
		kMaterialSeed        = 16,
		kMaterialLeaf        = 17,
		kMaterialFruit       = 18,
		kMaterialCactus      = 19,
		kMaterialMushroom    = 20,
		kMaterialFlyMushroom = 21,
		kMaterialMeat        = 22,
		kEndOfEnum           = 23,
		MAX                  = 24
	};

	/**
	 * Enum TLScheme.EContractBoardType
	 */
	enum class EContractBoardType : uint8_t
	{
		kNone     = 0,
		kMemorial = 1,
		kPlayer   = 2,
		kBookmark = 3,
		kArea     = 4,
		kAll      = 5,
		MAX       = 6
	};

	/**
	 * Enum TLScheme.ETLEventScheduleType
	 */
	enum class ETLEventScheduleType : uint8_t
	{
		kNormalEvent = 0,
		kPeaceEvent  = 1,
		kGuildEvent  = 2,
		MAX          = 3
	};

	/**
	 * Enum TLScheme.ETLTimeTableType
	 */
	enum class ETLTimeTableType : uint8_t
	{
		kNone             = 0,
		kDynamiEvent      = 1,
		kSiegeWarfare     = 2,
		kRegionStone      = 3,
		kBossStone        = 4,
		kWorldBoss        = 5,
		kTaxDelivery      = 6,
		kFieldBoss        = 7,
		kRespawnFieldBoss = 8,
		EndOfEnum         = 9,
		MAX               = 10
	};

	/**
	 * Enum TLScheme.ETLHyperLinkType
	 */
	enum class ETLHyperLinkType : uint8_t
	{
		WorldMap         = 0,
		ItemDropInfoRace = 1,
		ItemDropInfoType = 2,
		DynamicEvent     = 3,
		ItemCollection   = 4,
		CodexAdventure   = 5,
		CodexAchievement = 6,
		Contract         = 7,
		GuildContract    = 8,
		Npc              = 9,
		Fo               = 10,
		Memorial         = 11,
		FieldBoss        = 12,
		ArchBoss         = 13,
		Castle           = 14,
		TaxDelivery      = 15,
		GuildViewer      = 16,
		TradeSearch      = 17,
		Species          = 18,
		Character        = 19,
		Option           = 20,
		EndOfEnum        = 21,
		MAX              = 22
	};

	/**
	 * Enum TLScheme.ETLAbsoluteTimerType
	 */
	enum class ETLAbsoluteTimerType : uint8_t
	{
		ShopReset             = 0,
		FreeRecoverCountReset = 1,
		MAX                   = 2
	};

	/**
	 * Enum TLScheme.EInspectionTargetWidget
	 */
	enum class EInspectionTargetWidget : uint8_t
	{
		Hud       = 0,
		Adventure = 1,
		MAX       = 2
	};

	/**
	 * Enum TLScheme.EContractType
	 */
	enum class EContractType : uint8_t
	{
		kNone = 0,
		kNpc  = 1,
		kItem = 2,
		kBm   = 3,
		MAX   = 4
	};

	/**
	 * Enum TLScheme.ETLSkillClassType
	 */
	enum class ETLSkillClassType : uint8_t
	{
		kNone          = 0,
		kWeaponType    = 1,
		kPolymorph     = 2,
		kSpecial       = 3,
		kRanking       = 4,
		kWeaponMastery = 5,
		MAX            = 6
	};

	/**
	 * Enum TLScheme.ETLCodexObjectiveActionType
	 */
	enum class ETLCodexObjectiveActionType : uint8_t
	{
		kNone         = 0,
		kTalk         = 1,
		kKill         = 2,
		kInteraction  = 3,
		kInspection   = 4,
		kCollection   = 5,
		kContract     = 6,
		kDynamicEvent = 7,
		kTimeLapse    = 8,
		kCutScene     = 9,
		kLock         = 10,
		kRewardable   = 11,
		kRewarded     = 12,
		kEndOfEnum    = 13,
		MAX           = 14
	};

	/**
	 * Enum TLScheme.ECutsceneActionWhenCompleted
	 */
	enum class ECutsceneActionWhenCompleted : uint8_t
	{
		Default       = 0,
		BlackScreen   = 1,
		WhiteScreen   = 2,
		LoadingScreen = 3,
		EndOfEnum     = 4,
		MAX           = 5
	};

	/**
	 * Enum TLScheme.ECodexCodeType
	 */
	enum class ECodexCodeType : uint8_t
	{
		kNone      = 0,
		kPrologue  = 1,
		kNormal    = 2,
		kChallenge = 3,
		kUpdate    = 4,
		kEndOfEnum = 5,
		MAX        = 6
	};

	/**
	 * Enum TLScheme.ECodexCategoryType
	 */
	enum class ECodexCategoryType : uint8_t
	{
		kAdventure   = 0,
		kAchievement = 1,
		kCollection  = 2,
		kEndOfEnum   = 3,
		MAX          = 4
	};

	/**
	 * Enum TLScheme.EContractRefreshListReason
	 */
	enum class EContractRefreshListReason : uint8_t
	{
		kNone                             = 0,
		kInitialize                       = 1,
		kRequestRefreshList               = 2,
		kNpcListRefreshWithAcceptContract = 3,
		kAcceptContract                   = 4,
		kStopContract                     = 5,
		kFinishContract                   = 6,
		kChangeContract                   = 7,
		kRewardContract                   = 8,
		kChangeStateContract              = 9,
		kContractedList                   = 10,
		kBookmarkChange                   = 11,
		kFavoritesChange                  = 12,
		kOnlyFavoritesModeChange          = 13,
		MAX                               = 14
	};

	/**
	 * Enum TLScheme.EInteractionSkillWaitingReason
	 */
	enum class EInteractionSkillWaitingReason : uint8_t
	{
		None      = 0,
		Ownership = 1,
		MAX       = 2
	};

	/**
	 * Enum TLScheme.EInteractionDialogType
	 */
	enum class EInteractionDialogType : uint8_t
	{
		DialogTypeNone        = 0,
		DialogTypeCodexDialog = 1,
		MAX                   = 2
	};

	/**
	 * Enum TLScheme.EInteractionFacilityType
	 */
	enum class EInteractionFacilityType : uint8_t
	{
		None          = 0,
		kShop         = 1,
		kStorage      = 2,
		kCastleKeeper = 3,
		kCraft        = 4,
		kRecovery     = 5,
		kPolymorph    = 6,
		kGuildStorage = 7,
		kMining       = 8,
		kGathering    = 9,
		kLogging      = 10,
		kViewPoint    = 11,
		kContract     = 12,
		MAX           = 13
	};

	/**
	 * Enum TLScheme.EInteractionActionType
	 */
	enum class EInteractionActionType : uint8_t
	{
		kNone     = 0,
		kSkill    = 1,
		kFacility = 2,
		kDialogue = 3,
		kSpeak    = 4,
		MAX       = 5
	};

	/**
	 * Enum TLScheme.EContractGroupType
	 */
	enum class EContractGroupType : uint8_t
	{
		kNpc  = 0,
		kItem = 1,
		kBm   = 2,
		MAX   = 3
	};

	/**
	 * Enum TLScheme.EContractRewardType
	 */
	enum class EContractRewardType : uint8_t
	{
		kGold          = 0,
		kExp           = 1,
		kAligmentPoint = 2,
		kItem          = 3,
		kContractCoin  = 4,
		kActivePoint   = 5,
		MAX            = 6
	};

	/**
	 * Enum TLScheme.EContractGrade
	 */
	enum class EContractGrade : uint8_t
	{
		kOne   = 0,
		kTwo   = 1,
		kThree = 2,
		kFour  = 3,
		kFive  = 4,
		MAX    = 5
	};

	/**
	 * Enum TLScheme.ECustomizeFacialCategory
	 */
	enum class ECustomizeFacialCategory : uint8_t
	{
		kNone      = 0,
		kEyeBrow   = 1,
		kEye       = 2,
		kNose      = 3,
		klip       = 4,
		kEndOfEnum = 5,
		MAX        = 6
	};

	/**
	 * Enum TLScheme.ECustomizeUIDetailCategory
	 */
	enum class ECustomizeUIDetailCategory : uint8_t
	{
		Face_Preset    = 0,
		Face_Shape     = 1,
		Face_Skin      = 2,
		Face_Cheek     = 3,
		Face_Chin      = 4,
		Eyes_Preset    = 5,
		Eyes_Iris      = 6,
		Eyes_Pupil     = 7,
		Eyes_Whole     = 8,
		Eyes_Side      = 9,
		Eyebrow_Preset = 10,
		Eyebrow_Whole  = 11,
		Eyebrow_Side   = 12,
		Nose_Preset    = 13,
		Nose_Whole     = 14,
		Nose_Side      = 15,
		Mouth_Preset   = 16,
		Mouth_Whole    = 17,
		Mouth_Side     = 18,
		Ear_Preset     = 19,
		Ear_Whole      = 20,
		Makeup_Preset  = 21,
		Makeup_Eyes    = 22,
		Makeup_Cheek   = 23,
		Makeup_Mouth   = 24,
		Makeup_Tattoo  = 25,
		Hair_Style     = 26,
		Hair_Color     = 27,
		Hair_Ombre     = 28,
		Beard          = 29,
		Beard_Long     = 30,
		Body_Height    = 31,
		Body_Upper     = 32,
		Body_Middle    = 33,
		Body_Lower     = 34,
		Max            = 35
	};

	/**
	 * Enum TLScheme.ECustomizeUIMiddleCategory
	 */
	enum class ECustomizeUIMiddleCategory : uint8_t
	{
		Face      = 0,
		Eyes      = 1,
		Eyebrow   = 2,
		Nose      = 3,
		Mouth     = 4,
		Ear       = 5,
		Makeup    = 6,
		Hair      = 7,
		Body      = 8,
		Costume   = 9,
		Voice     = 10,
		Facial    = 11,
		Lighting  = 12,
		Polymorph = 13,
		Max       = 14
	};

	/**
	 * Enum TLScheme.ECustomizeUIHighCategory
	 */
	enum class ECustomizeUIHighCategory : uint8_t
	{
		Main      = 0,
		Facial    = 1,
		NonFacial = 2,
		Preview   = 3,
		MAX       = 4
	};

	/**
	 * Enum TLScheme.ECustomizeUIPresetBlendPoints
	 */
	enum class ECustomizeUIPresetBlendPoints : uint8_t
	{
		Top    = 0,
		Right  = 1,
		Bottom = 2,
		Left   = 3,
		Max    = 4
	};

	/**
	 * Enum TLScheme.ECustomizeGender
	 */
	enum class ECustomizeGender : uint8_t
	{
		kAll       = 0,
		kMale      = 1,
		kFemale    = 2,
		kEndOfEnum = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.ECustomizeHistoryType
	 */
	enum class ECustomizeHistoryType : uint8_t
	{
		Default        = 0,
		Preset         = 1,
		Randomize      = 2,
		Reset          = 3,
		ArmorPreset    = 4,
		VoicePreset    = 5,
		LoadSnapshot   = 6,
		LoadFile       = 7,
		AICustomize    = 8,
		DesignerPreset = 9,
		MAX            = 10
	};

	/**
	 * Enum TLScheme.ECustomizeType
	 */
	enum class ECustomizeType : uint8_t
	{
		kNone                 = 0,
		kFaceType             = 1,
		kSkinRoughness        = 2,
		kFaceColor            = 3,
		kFaceSpotType         = 4,
		kFaceSpotIntensity    = 5,
		kScarType             = 6,
		kScarIntensity        = 7,
		kWrinkleIntensity     = 8,
		kCheek2Up             = 9,
		kCheek2Side           = 10,
		kCheek2Front          = 11,
		kCheekWidth           = 12,
		kCheek1Front          = 13,
		kCheek1Side           = 14,
		kCheek1Up             = 15,
		kCheekFront           = 16,
		kCheekSide            = 17,
		kTempleSide           = 18,
		kChinLength           = 19,
		kChinWidth            = 20,
		kJawFront             = 21,
		kSideJawUp            = 22,
		kSideJawFront         = 23,
		kSideJawScale         = 24,
		kJawLowerHeight       = 25,
		kJawTipFront          = 26,
		kJawTipScale          = 27,
		kJawTipLength         = 28,
		kIrisColor_Left       = 29,
		kIrisColor_Right      = 30,
		kIrisType             = 31,
		kIrisSize             = 32,
		kIrisBrightness       = 33,
		kPupilSize            = 34,
		kPupilWidth           = 35,
		kEyeSide              = 36,
		kEyeFront             = 37,
		kEyeSize              = 38,
		kEyeHeight            = 39,
		kEyelidOutSide        = 40,
		kEyelidInSide         = 41,
		kEyeRotation          = 42,
		kEyeSlope             = 43,
		kEyelidInUp           = 44,
		kEyelidInUpper        = 45,
		kEyelidOutUpper       = 46,
		kEyelidInLower        = 47,
		kEyelidOutLower       = 48,
		kEyelashIcon          = 49,
		kEyeBrowIntensity     = 50,
		kEyeBrowColor         = 51,
		kEyelashPos           = 52,
		kBrowWide             = 53,
		kBrowFront            = 54,
		kBrowThickness        = 55,
		kBrow1Up              = 56,
		kBrow1Side            = 57,
		kBrow1Front           = 58,
		kBrow2Up              = 59,
		kBrow2Side            = 60,
		kBrow2Front           = 61,
		kNoseUp               = 62,
		kNoseHeight           = 63,
		kNoseFront            = 64,
		kNoseScale            = 65,
		kBrowCFront           = 66,
		kNoseMidScale         = 67,
		kNoseMidFront         = 68,
		kNoseTipScale         = 69,
		kNoseTipUp            = 70,
		kNoseTipFront         = 71,
		kNoseBridgeHeight     = 72,
		kLipHeight            = 73,
		kLipLength            = 74,
		kLipDepth             = 75,
		kLipSlope             = 76,
		kUpperLipFront        = 77,
		kLowerLipFront        = 78,
		kUpperLipUp           = 79,
		kLowerLipUp           = 80,
		kEarType              = 81,
		kEarScale             = 82,
		kEarRotate            = 83,
		kEyelashType          = 84,
		kEyeLineType          = 85,
		kEyeLineIntensity     = 86,
		kEyeDecoIcon          = 87,
		kEyeDecoIntensity1    = 88,
		kEyeDecoIntensity2    = 89,
		kEyeDecoColor1        = 90,
		kEyeDecoColor2        = 91,
		kEyeGlitterIntensity  = 92,
		kBlusherX             = 93,
		kBlusherY             = 94,
		kBlusherIntensity     = 95,
		kBlusherColor         = 96,
		kLipType              = 97,
		kLipIntensity         = 98,
		kLipRoughness         = 99,
		kLipColor             = 100,
		kLipsGlitterIntensity = 101,
		kTattooType3          = 102,
		kTattooIntensity3     = 103,
		kTattooType           = 104,
		kTattooIntensity1     = 105,
		kTattooIntensity2     = 106,
		kTattooColor          = 107,
		kTattooColor2         = 108,
		kHairType             = 109,
		kHairColor            = 110,
		kHairTipType          = 111,
		kHairTipRange         = 112,
		kHairTipIntensity     = 113,
		kHairTipColor         = 114,
		kBeardType            = 115,
		kBeardIntensity       = 116,
		kLongBeardType        = 117,
		kLongBeardIntensity   = 118,
		kBeardColor           = 119,
		kHeight               = 120,
		kHeadSize             = 121,
		kNeckThickness        = 122,
		kShoulderHeight       = 123,
		kShoulderThickness    = 124,
		kShoulderWidth        = 125,
		kUpperBody            = 126,
		kBreastSize           = 127,
		kBreastUp             = 128,
		kUpperArmSize         = 129,
		kForeArmSize          = 130,
		kHandSize             = 131,
		kAbdomenFatSize       = 132,
		kPelvis               = 133,
		kThighSize            = 134,
		kCalfSize             = 135,
		kVoiceType            = 136,
		kEyeUp                = 137,
		kCheekHeight          = 138,
		kCheekboneFront       = 139,
		kEyelashColor         = 140,
		kEyelashIntensity     = 141,
		kEyeLineColor         = 142,
		kEyeRoughness         = 143,
		kTattooColor3         = 144,
		kTattooX              = 145,
		kTattooY              = 146,
		kTattooSize           = 147,
		kTattooRotation       = 148,
		kEndOfEnum            = 149,
		MAX                   = 150
	};

	/**
	 * Enum TLScheme.ECustomizeCategory
	 */
	enum class ECustomizeCategory : uint8_t
	{
		kNone      = 0,
		kFace      = 1,
		kMakeUp    = 2,
		kHair      = 3,
		kBody      = 4,
		kAll       = 5,
		kEndOfEnum = 6,
		MAX        = 7
	};

	/**
	 * Enum TLScheme.ECustomizeUIType
	 */
	enum class ECustomizeUIType : uint8_t
	{
		kNone         = 0,
		kIcon         = 1,
		kSlide        = 2,
		kDefaultColor = 3,
		kSkinColor    = 4,
		MAX           = 5
	};

	/**
	 * Enum TLScheme.EViewMakrType
	 */
	enum class EViewMakrType : uint8_t
	{
		kNone             = 0,
		kCastleOwnerGuild = 1,
		kGuild            = 2,
		MAX               = 3
	};

	/**
	 * Enum TLScheme.EGraphUserType
	 */
	enum class EGraphUserType : uint8_t
	{
		kCitizen = 0,
		kMonster = 1,
		kPlayer  = 2,
		MAX      = 3
	};

	/**
	 * Enum TLScheme.ETLResurrectionLocationType
	 */
	enum class ETLResurrectionLocationType : uint8_t
	{
		DefaultPoint     = 0,
		SiegePoint       = 1,
		SiegeCastlePoint = 2,
		DEPoint          = 3,
		StartPoint       = 4,
		NearPoint        = 5,
		TaxDeliveryPoint = 6,
		InDungeon        = 7,
		OutDungeon       = 8,
		GuildSkillPoint  = 9,
		GuildRaid        = 10,
		GuildHome        = 11,
		WorldBossPoint   = 12,
		MAX              = 13
	};

	/**
	 * Enum TLScheme.ETransformType
	 */
	enum class ETransformType : uint8_t
	{
		kNone    = 0,
		kBase    = 1,
		kDerived = 2,
		MAX      = 3
	};

	/**
	 * Enum TLScheme.EEventRewardType
	 */
	enum class EEventRewardType : uint8_t
	{
		kGold           = 0,
		kExp            = 1,
		kGuildExp       = 2,
		kDiamond        = 3,
		kItem           = 4,
		kGuildRankPoint = 5,
		kBmCoin         = 6,
		kActivePoint    = 7,
		kGuildCoin      = 8,
		MAX             = 9
	};

	/**
	 * Enum TLScheme.ETLDynamicEventUIType
	 */
	enum class ETLDynamicEventUIType : uint8_t
	{
		Type00 = 0,
		Type01 = 1,
		Type02 = 2,
		Type03 = 3,
		Type04 = 4,
		Type05 = 5,
		Type06 = 6,
		Type07 = 7,
		Type08 = 8,
		Type09 = 9,
		None   = 10,
		MAX    = 11
	};

	/**
	 * Enum TLScheme.ETLContextPolymorphType
	 */
	enum class ETLContextPolymorphType : uint8_t
	{
		DASH      = 0,
		SWIM      = 1,
		GLIDE     = 2,
		EndOfEnum = 3,
		NONE      = 4,
		MAX       = 5
	};

	/**
	 * Enum TLScheme.ETLFrameShowType
	 */
	enum class ETLFrameShowType : uint8_t
	{
		None                        = 0,
		HideHud                     = 1,
		HideOtherFocusedFrame       = 2,
		HideHudAndOtherFocusedFrame = 3,
		MAX                         = 4
	};

	/**
	 * Enum TLScheme.ETLWidgetLayout
	 */
	enum class ETLWidgetLayout : uint8_t
	{
		FRAME               = 0,
		WINDOW              = 1,
		FULL_SCREEN         = 2,
		FULL_SCREEN_SERVICE = 3,
		DIALOGUE_BOX        = 4,
		DIALOGUE_INVITE_BOX = 5,
		MAX                 = 6
	};

	/**
	 * Enum TLScheme.ETLWidgetLayer
	 */
	enum class ETLWidgetLayer : uint8_t
	{
		NO_FLAGS   = 0,
		SCREEN     = 1,
		HUD        = 2,
		POPUP      = 3,
		WINDOW     = 4,
		OVERLAY    = 5,
		TOPMOST    = 6,
		FULLSCREEN = 7,
		All        = 8,
		MAX        = 9
	};

	/**
	 * Enum TLScheme.ETLWidgetViewportLayer
	 */
	enum class ETLWidgetViewportLayer : uint8_t
	{
		LAYER_GAME           = 0,
		LAYER_UI             = 1,
		LAYER_TOOLTIP        = 2,
		LAYER_LOADING_SCREEN = 3,
		LAYER_TOPMOST        = 4,
		LAYER_MAX            = 5
	};

	/**
	 * Enum TLScheme.ETLController
	 */
	enum class ETLController : uint8_t
	{
		None = 0,
		PC   = 1,
		PS5  = 2,
		XBOX = 3,
		MAX  = 4
	};

	/**
	 * Enum TLScheme.ETLUIPreLoadType
	 */
	enum class ETLUIPreLoadType : uint8_t
	{
		DO_NOT_PRELOAD                  = 0,
		PREREQUISITES_FOR_START_GAME    = 1,
		PREREQUISITES_FOR_START_IN_GAME = 2,
		NONE                            = 3,
		MAX                             = 4
	};

	/**
	 * Enum TLScheme.ETLUIGameMode
	 */
	enum class ETLUIGameMode : uint8_t
	{
		InGameMode   = 0,
		TestGameMode = 1,
		DontPreload  = 2,
		MAX          = 3
	};

	/**
	 * Enum TLScheme.ETLUIStage
	 */
	enum class ETLUIStage : uint8_t
	{
		UI_STAGE_GAME       = 0,
		UI_STAGE_GAME_LOBBY = 1,
		UI_STAGE_NONE       = 2,
		UI_STAGE_MAX        = 3
	};

	/**
	 * Enum TLScheme.ETLUICacheLifeType
	 */
	enum class ETLUICacheLifeType : uint8_t
	{
		NONE                  = 0,
		DELETE_WHEN_LOBBY_END = 1,
		MAX                   = 2
	};

	/**
	 * Enum TLScheme.ETLUICacheType
	 */
	enum class ETLUICacheType : uint8_t
	{
		NoCache = 0,
		BPClass = 1,
		Widget  = 2,
		None    = 3,
		MAX     = 4
	};

	/**
	 * Enum TLScheme.ETLUILoadingType
	 */
	enum class ETLUILoadingType : uint8_t
	{
		Synchronous  = 0,
		Asynchronous = 1,
		None         = 2,
		MAX          = 3
	};

	/**
	 * Enum TLScheme.ETLUIWidgetType
	 */
	enum class ETLUIWidgetType : uint8_t
	{
		RootWidget    = 0,
		LayerWidget   = 1,
		Widget        = 2,
		ManagedWidget = 3,
		None          = 4,
		MAX           = 5
	};

	/**
	 * Enum TLScheme.ELoadingScreenType
	 */
	enum class ELoadingScreenType : uint8_t
	{
		kNormal     = 0,
		kManor      = 1,
		kController = 2,
		MAX         = 3
	};

	/**
	 * Enum TLScheme.ETLSensingOutLineType
	 */
	enum class ETLSensingOutLineType : uint8_t
	{
		NONE   = 0,
		TYPE_A = 1,
		TYPE_B = 2,
		MAX    = 3
	};

	/**
	 * Enum TLScheme.ETLPassiveType
	 */
	enum class ETLPassiveType : uint8_t
	{
		kNone     = 0,
		kAttack   = 1,
		kDefence  = 2,
		kRecovery = 3,
		kSpecial  = 4,
		MAX       = 5
	};

	/**
	 * Enum TLScheme.EStrongholdType
	 */
	enum class EStrongholdType : uint8_t
	{
		kCastleTower       = 0,
		kCastleDoor        = 1,
		kCastleWall        = 2,
		kCastleBarbican    = 3,
		kCastleInsideDoor  = 4,
		kCastleOutsideDoor = 5,
		kEndOfEnum         = 6,
		MAX                = 7
	};

	/**
	 * Enum TLScheme.EPostType
	 */
	enum class EPostType : uint8_t
	{
		kNone               = 0,
		kPlayer             = 1,
		kGm                 = 2,
		kGmMulti            = 3,
		kLevelUpReward      = 4,
		kDynamicEventReward = 5,
		kPvpReward          = 6,
		kGuildContribution  = 7,
		kPlayerToGuild      = 8,
		kPlayerToUnion      = 9,
		kEndOfEnum          = 10,
		MAX                 = 11
	};

	/**
	 * Enum TLScheme.EDamageFloaterType
	 */
	enum class EDamageFloaterType : uint8_t
	{
		kNone  = 0,
		kPrime = 1,
		kSkill = 2,
		MAX    = 3
	};

	/**
	 * Enum TLScheme.ETLNameplateState
	 */
	enum class ETLNameplateState : uint8_t
	{
		kAlwaysShow       = 0,
		kAlwaysHide       = 1,
		kByRule           = 2,
		kContentsMarkOnly = 3,
		MAX               = 4
	};

	/**
	 * Enum TLScheme.ETLItemGroupFilter
	 */
	enum class ETLItemGroupFilter : uint8_t
	{
		kAll        = 0,
		kEquip      = 1,
		kUsable     = 2,
		kMaterials  = 3,
		kMiscs      = 4,
		kWeapon     = 5,
		kArmor      = 6,
		kAccessory  = 7,
		kAutoUse    = 8,
		kReinforcer = 9,
		kEndOfEnum  = 10,
		MAX         = 11
	};

	/**
	 * Enum TLScheme.EItemPackageSortType
	 */
	enum class EItemPackageSortType : uint8_t
	{
		kItemSortGrade    = 0,
		kItemSortCategory = 1,
		kItemSortName     = 2,
		kItemSortCount    = 3,
		kEndOfEnum        = 4,
		MAX               = 5
	};

	/**
	 * Enum TLScheme.EItemSortType
	 */
	enum class EItemSortType : uint8_t
	{
		kItemSortGrade       = 0,
		kItemSortEnchant     = 1,
		kItemSortUid         = 2,
		kItemSortCount       = 3,
		kItemSortWear        = 4,
		kItemSortType        = 5,
		kItemSortCategory    = 6,
		kItemSortWeight      = 7,
		kItemAutoUse         = 8,
		kItemSystemRecommand = 9,
		kEndOfEnum           = 10,
		MAX                  = 11
	};

	/**
	 * Enum TLScheme.ETLDistanceType
	 */
	enum class ETLDistanceType : uint8_t
	{
		MinRange   = 0,
		MaxRange   = 1,
		OutOfRange = 2,
		kEndOfEnum = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.EFacilityType
	 */
	enum class EFacilityType : uint8_t
	{
		kNone                   = 0,
		kShop                   = 1,
		kStorage                = 2,
		kCastleKeeper           = 3,
		kCraft                  = 4,
		kRecovery               = 5,
		kGuildStorage           = 6,
		kMining                 = 7,
		kGathering              = 8,
		kLogging                = 9,
		kViewPoint              = 10,
		kContract               = 11,
		kTerritoryFogOpening    = 12,
		kBeautyShop             = 13,
		kItemGain               = 14,
		kDungeonWaypoint        = 15,
		kRotationEvent          = 16,
		kGuildRaid              = 17,
		kDungeonWaypointOpening = 18,
		kDeveloperLetter        = 19,
		kCodexCollection        = 20,
		kOpenInstanceDungeonUI  = 21,
		MAX                     = 22
	};

	/**
	 * Enum TLScheme.ESkillElementType
	 */
	enum class ESkillElementType : uint8_t
	{
		kNone     = 0,
		kPhysical = 1,
		kFire     = 2,
		kWater    = 3,
		kEarth    = 4,
		kWind     = 5,
		MAX       = 6
	};

	/**
	 * Enum TLScheme.EItemEnchantTransferGrade
	 */
	enum class EItemEnchantTransferGrade : uint8_t
	{
		kC         = 0,
		kB         = 1,
		kA         = 2,
		kAA        = 3,
		kAAA       = 4,
		kEndOfEnum = 5,
		MAX        = 6
	};

	/**
	 * Enum TLScheme.ETLDamageType
	 */
	enum class ETLDamageType : uint8_t
	{
		kMelee = 0,
		kRange = 1,
		kMagic = 2,
		kError = 3,
		MAX    = 4
	};

	/**
	 * Enum TLScheme.ETLVoiceType
	 */
	enum class ETLVoiceType : uint8_t
	{
		VoiceType1 = 0,
		VoiceType2 = 1,
		VoiceType3 = 2,
		MAX        = 3
	};

	/**
	 * Enum TLScheme.ETLGender
	 */
	enum class ETLGender : uint8_t
	{
		Male   = 0,
		Female = 1,
		MAX    = 2
	};

	/**
	 * Enum TLScheme.ETLPolymorphSlot
	 */
	enum class ETLPolymorphSlot : uint8_t
	{
		ICON_SLOT_01   = 0,
		ICON_SLOT_02   = 1,
		ICON_SLOT_03   = 2,
		ICON_SLOT_04   = 3,
		ICON_SLOT_05   = 4,
		ICON_SLOT_06   = 5,
		ICON_SLOT_07   = 6,
		ICON_SLOT_08   = 7,
		ICON_SLOT_09   = 8,
		ICON_SLOT      = 9,
		ICON_SLOT01    = 10,
		ICON_SLOT02    = 11,
		ICON_SLOT03    = 12,
		ICON_SLOT04    = 13,
		ICON_SLOT05    = 14,
		ICON_SLOT06    = 15,
		ICON_SLOT_MAX  = 16,
		ICON_SLOT_NONE = 17
	};

	/**
	 * Enum TLScheme.ESkillEnchantCategory
	 */
	enum class ESkillEnchantCategory : uint8_t
	{
		kNone     = 0,
		kAttack   = 1,
		kMove     = 2,
		kDebuff   = 3,
		kBuff     = 4,
		kRecovery = 5,
		MAX       = 6
	};

	/**
	 * Enum TLScheme.ESkillSettingSlotType
	 */
	enum class ESkillSettingSlotType : uint8_t
	{
		Active  = 0,
		Passive = 1,
		Special = 2,
		Ranking = 3,
		Enchant = 4,
		MAX     = 5
	};

	/**
	 * Enum TLScheme.EActionSkillType
	 */
	enum class EActionSkillType : uint8_t
	{
		kPrimeSkill = 0,
		kPolymorph  = 1,
		kDash       = 2,
		kWaitRiding = 3,
		kEndOfEnum  = 4,
		MAX         = 5
	};

	/**
	 * Enum TLScheme.ESkillSlotType
	 */
	enum class ESkillSlotType : uint8_t
	{
		kActiveSkill  = 0,
		kPassiveSkill = 1,
		MAX           = 2
	};

	/**
	 * Enum TLScheme.ETLSkillOptionRank
	 */
	enum class ETLSkillOptionRank : uint8_t
	{
		All    = 0,
		Error  = 1,
		Rank1  = 2,
		Rank2  = 3,
		Rank3  = 4,
		Rank4  = 5,
		Rank5  = 6,
		Rank6  = 7,
		Rank7  = 8,
		Rank8  = 9,
		Rank9  = 10,
		Rank10 = 11,
		Rank11 = 12,
		Rank12 = 13,
		Rank13 = 14,
		Rank14 = 15,
		Rank15 = 16,
		Rank16 = 17,
		MAX    = 18
	};

	/**
	 * Enum TLScheme.ETLSkillExclusiveGroup
	 */
	enum class ETLSkillExclusiveGroup : uint8_t
	{
		kGroup_01  = 0,
		kGroup_02  = 1,
		kGroup_03  = 2,
		kGroup_04  = 3,
		kGroup_05  = 4,
		kGroup_06  = 5,
		kGroup_07  = 6,
		kGroup_08  = 7,
		kGroup_09  = 8,
		kGroup     = 9,
		kGroup_Max = 10,
		kEndOfEnum = 11,
		MAX        = 12
	};

	/**
	 * Enum TLScheme.EDayOfWeekScheme
	 */
	enum class EDayOfWeekScheme : uint8_t
	{
		Monday    = 0,
		Tuesday   = 1,
		Wednesday = 2,
		Thursday  = 3,
		Friday    = 4,
		Saturday  = 5,
		Sunday    = 6,
		MAX       = 7
	};

	/**
	 * Enum TLScheme.ESkillGrade
	 */
	enum class ESkillGrade : uint8_t
	{
		kC         = 0,
		kB         = 1,
		kA         = 2,
		kAA        = 3,
		kAAA       = 4,
		kEndOfEnum = 5,
		MAX        = 6
	};

	/**
	 * Enum TLScheme.ESkillPhaseType
	 */
	enum class ESkillPhaseType : uint8_t
	{
		kNone        = 0,
		kSwing       = 1,
		kFollowSwing = 2,
		kFinish      = 3,
		kError       = 4,
		MAX          = 5
	};

	/**
	 * Enum TLScheme.EChangeInitStateType
	 */
	enum class EChangeInitStateType : uint8_t
	{
		kNone            = 0,
		kCodexCollection = 1,
		kDeveloperLetter = 2,
		MAX              = 3
	};

	/**
	 * Enum TLScheme.EUseSpawnCondType
	 */
	enum class EUseSpawnCondType : uint8_t
	{
		kNone    = 0,
		kBase    = 1,
		kDerived = 2,
		MAX      = 3
	};

	/**
	 * Enum TLScheme.ERangeFormulaType
	 */
	enum class ERangeFormulaType : uint8_t
	{
		kRangeOfConstant                  = 0,
		kRangeFromNthRootOfAttackPower    = 1,
		kRangeFromAttackRange             = 2,
		kRangeFromAttackRangeWithWind     = 3,
		kRangeFromDualAttackRange         = 4,
		kRangeFromDualAttackRangeWithWind = 5,
		kRangeFromAuraRadiusModifier      = 6,
		MAX                               = 7
	};

	/**
	 * Enum TLScheme.EHeightFormulaType
	 */
	enum class EHeightFormulaType : uint8_t
	{
		kHeightOfConstant                  = 0,
		kHeightFromAttackRange             = 1,
		kHeightFromAttackRangeWithWind     = 2,
		kHeightFromDualAttackRange         = 3,
		kHeightFromDualAttackRangeWithWind = 4,
		kHeightFromNthRootOfAttackPower    = 5,
		kHeightFromObjectHeight            = 6,
		MAX                                = 7
	};

	/**
	 * Enum TLScheme.EFormulaType
	 */
	enum class EFormulaType : uint8_t
	{
		kAmountFromMinMax                                = 0,
		kAmountFromHpMax                                 = 1,
		kAmountFromCostMax                               = 2,
		kAmountFromAttackRange                           = 3,
		kAmountFromDistance                              = 4,
		kAmountFromNormalAttackDelay                     = 5,
		kAmountFromAttackPower                           = 6,
		kAmountFromAttackPowerWithinMinMax               = 7,
		kAmountFromAttackPowerWithinMinMaxAndTargetHpMax = 8,
		kAmountFromAttackPowerAndCost                    = 9,
		kAmountFromAttackPowerAndTargetHpMax             = 10,
		kAmountFromDamageReduction                       = 11,
		kAmountFromCostRegen                             = 12,
		kAmountFromTargetHpMax                           = 13,
		kAmountFromTargetHpMaxOrMinValue                 = 14,
		kAmountFromTargetHpMaxOrMaxValue                 = 15,
		kAmountFromAuraEffectBoost                       = 16,
		kAmountFromFalling                               = 17,
		kAmountFromAttackPowerForPrimeAttack             = 18,
		kAmountFromAttackPowerForPrimeAttackWithinMinMax = 19,
		kAmountFromAttackSpeedRatioBetweenHands          = 20,
		kAmountFromTargetHpBPWithinLimits                = 21,
		kAmountFromHp                                    = 22,
		kAmountFromTargetHp                              = 23,
		kAmountFromUsableCost                            = 24,
		kAmountFromConsumptionCost                       = 25,
		kAmountFromPassiveHpConsumption                  = 26,
		kAmountFromTailWindSpeed                         = 27,
		kAmountFromWindSpeed                             = 28,
		MAX                                              = 29
	};

	/**
	 * Enum TLScheme.EFilterType
	 */
	enum class EFilterType : uint8_t
	{
		None             = 0,
		HPRange          = 1,
		Codex            = 2,
		Guild            = 3,
		CodexCollection  = 4,
		DeveloperLetter  = 5,
		WayPoint         = 6,
		CodexAchievement = 7,
		MAX              = 8
	};

	/**
	 * Enum TLScheme.ESpawnHitDirectionType
	 */
	enum class ESpawnHitDirectionType : uint8_t
	{
		kNone   = 0,
		kTop    = 1,
		kFront  = 2,
		kBack   = 3,
		kLeft   = 4,
		kRight  = 5,
		kFromFo = 6,
		MAX     = 7
	};

	/**
	 * Enum TLScheme.ETransitResultType
	 */
	enum class ETransitResultType : uint8_t
	{
		kDespawn     = 0,
		kChangeState = 1,
		kTransform   = 2,
		MAX          = 3
	};

	/**
	 * Enum TLScheme.ETransitCondType
	 */
	enum class ETransitCondType : uint8_t
	{
		kNone        = 0,
		kDropCount   = 1,
		kInteraction = 2,
		kCooldown    = 3,
		kDeath       = 4,
		kRevival     = 5,
		MAX          = 6
	};

	/**
	 * Enum TLScheme.EItemDropCondType
	 */
	enum class EItemDropCondType : uint8_t
	{
		kNone         = 0,
		kInteraction  = 1,
		kCurrentState = 2,
		MAX           = 3
	};

	/**
	 * Enum TLScheme.ETLContentCategory
	 */
	enum class ETLContentCategory : uint8_t
	{
		kNone          = 0,
		kMap           = 1,
		kZone          = 2,
		kTerritory     = 3,
		kNpcSpawn      = 4,
		kFoSpawn       = 5,
		kSiegeWarfare  = 6,
		kRegionStone   = 7,
		kBossStone     = 8,
		kWorldBoss     = 9,
		kDynamicEvent  = 10,
		kTaxDelivery   = 11,
		kFieldBoss     = 12,
		kMemorial      = 13,
		kCodex         = 14,
		kChallenge     = 15,
		kContract      = 16,
		kGuildContract = 17,
		kAchievement   = 18,
		EndOfEnum      = 19,
		MAX            = 20
	};

	/**
	 * Enum TLScheme.EGuildRelationship
	 */
	enum class EGuildRelationship : uint8_t
	{
		None            = 0,
		Alliance        = 1,
		Enemy           = 2,
		Observation     = 3,
		RequestAlliance = 4,
		My              = 5,
		MyUnion         = 6,
		MAX             = 7
	};

	/**
	 * Enum TLScheme.EGuildMemeberGrade
	 */
	enum class EGuildMemeberGrade : uint8_t
	{
		None      = 0,
		Master    = 1,
		SubMaster = 2,
		Guardian  = 3,
		Trainee   = 4,
		MAX       = 5
	};

	/**
	 * Enum TLScheme.EGuildSkillType
	 */
	enum class EGuildSkillType : uint8_t
	{
		Active  = 0,
		Passive = 1,
		Max     = 2
	};

	/**
	 * Enum TLScheme.EGuildContractRewardType
	 */
	enum class EGuildContractRewardType : uint8_t
	{
		kGold             = 0,
		kGuildCoin        = 1,
		kExp              = 2,
		kGuildExp         = 3,
		kItem             = 4,
		kReputationPoint  = 5,
		kLostAndFoundCoin = 6,
		kActivePoint      = 7,
		MAX               = 8
	};

	/**
	 * Enum TLScheme.EGuildLockState
	 */
	enum class EGuildLockState : uint8_t
	{
		UnLock     = 0,
		Memorial   = 1,
		Level      = 2,
		RemainTime = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.EGuildContractState
	 */
	enum class EGuildContractState : uint8_t
	{
		Standby   = 0,
		Change    = 1,
		Lock      = 2,
		Progress  = 3,
		Completed = 4,
		MAX       = 5
	};

	/**
	 * Enum TLScheme.EInstanceMapGuideEventLooksType
	 */
	enum class EInstanceMapGuideEventLooksType : uint8_t
	{
		Event          = 0,
		EventStep      = 1,
		EventObjective = 2,
		MAX            = 3
	};

	/**
	 * Enum TLScheme.EGaugeType
	 */
	enum class EGaugeType : uint8_t
	{
		kNone                 = 0,
		kPrivate              = 1,
		kCompetitive          = 2,
		kCooperative          = 3,
		kSkillHitDelay        = 4,
		kPrivateWithHookSkill = 5,
		MAX                   = 6
	};

	/**
	 * Enum TLScheme.EConditionCategory
	 */
	enum class EConditionCategory : uint8_t
	{
		kNone                          = 0,
		kItem                          = 1,
		kEffect                        = 2,
		kEventEffect                   = 3,
		kGuildMaster                   = 4,
		kGuildAdmin                    = 5,
		kGuildManager                  = 6,
		kGuildLevel                    = 7,
		kCastleOwner                   = 8,
		kCastleGuildMember             = 9,
		kCastleAllyGuild               = 10,
		kCastleUnion                   = 11,
		kEnableOwnerGuild              = 12,
		kEnableAllyGuild               = 13,
		kEnableOwnerUnion              = 14,
		kEnableTempOwnerGuild          = 15,
		kTribe                         = 16,
		kCoverTribe                    = 17,
		kEmptyPlunder                  = 18,
		kLevel                         = 19,
		kClosedTerritoryFog            = 20,
		kCodexObjective                = 21,
		kRegionStonePossessionMaxCount = 22,
		kBossStonePossessionMaxCount   = 23,
		kCastlePossessionMaxCount      = 24,
		kDynamicEventSide              = 25,
		kContribution                  = 26,
		kKey                           = 27,
		kRotationEventStart            = 28,
		kMemorial                      = 29,
		kClosedDungeonWaypoint         = 30,
		kPolymorph                     = 31,
		kMaxUserCount                  = 32,
		kAchievement                   = 33,
		kGuildItem                     = 34,
		MAX                            = 35
	};

	/**
	 * Enum TLScheme.EItemAcquisitionType
	 */
	enum class EItemAcquisitionType : uint8_t
	{
		Drop         = 0,
		DynamicEvent = 1,
		Contract     = 2,
		Craft        = 3,
		Shop         = 4,
		Gathering    = 5,
		None         = 6,
		MAX          = 7
	};

	/**
	 * Enum TLScheme.EItemTooltipComponent
	 */
	enum class EItemTooltipComponent : uint8_t
	{
		Title        = 0,
		TopInfos     = 1,
		Stats        = 2,
		Skills       = 3,
		Description  = 4,
		SetEquipment = 5,
		BottomInfos  = 6,
		EndOfEnum    = 7,
		MAX          = 8
	};

	/**
	 * Enum TLScheme.EItemMaterial
	 */
	enum class EItemMaterial : uint8_t
	{
		None         = 0,
		Silver       = 1,
		Mithril      = 2,
		BlackMithril = 3,
		Orichalcon   = 4,
		Magic        = 5,
		Jewel        = 6,
		Iron         = 7,
		Bone         = 8,
		Wood         = 9,
		Leather      = 10,
		Fabric       = 11,
		Plate        = 12,
		EndOfEnum    = 13,
		MAX          = 14
	};

	/**
	 * Enum TLScheme.EEnchantMethod
	 */
	enum class EEnchantMethod : uint8_t
	{
		None   = 0,
		Normal = 1,
		MAX    = 2
	};

	/**
	 * Enum TLScheme.EEnchantCategory
	 */
	enum class EEnchantCategory : uint8_t
	{
		kNone      = 0,
		kWeapon    = 1,
		kArmor     = 2,
		kAccessory = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.ETLGachaCategory
	 */
	enum class ETLGachaCategory : uint8_t
	{
		None      = 0,
		Polymorph = 1,
		MagicDoll = 2,
		Equip     = 3,
		Misc      = 4,
		SkillBook = 5,
		Key       = 6,
		Coin      = 7,
		MAX       = 8
	};

	/**
	 * Enum TLScheme.EItemAutoUseType
	 */
	enum class EItemAutoUseType : uint8_t
	{
		kHP      = 0,
		kBuff    = 1,
		kDebuff  = 2,
		kLantern = 3,
		MAX      = 4
	};

	/**
	 * Enum TLScheme.ETLItemCollectionType
	 */
	enum class ETLItemCollectionType : uint8_t
	{
		kC                       = 0,
		kB                       = 1,
		kA                       = 2,
		kAA                      = 3,
		kAAA                     = 4,
		kEndOfItemCollectionType = 5,
		MAX                      = 6
	};

	/**
	 * Enum TLScheme.EItemCollectionOptionType
	 */
	enum class EItemCollectionOptionType : uint8_t
	{
		All       = 0,
		Stat      = 1,
		Attack    = 2,
		Defense   = 3,
		EndOfEnum = 4,
		MAX       = 5
	};

	/**
	 * Enum TLScheme.ETLItemQuickSlotId
	 */
	enum class ETLItemQuickSlotId : uint8_t
	{
		kNormalSlot0               = 0,
		kPcPlatformEnd             = 1,
		kConsoleItemQuickSlotStart = 2,
		kConsoleItemQuickSlotEnd   = 3,
		kConsoleRingMenuSlotStart  = 4,
		kConsoleRingMenuSlotEnd    = 5,
		kEndOfEnum                 = 6,
		MAX                        = 7
	};

	/**
	 * Enum TLScheme.ETLItemSetParts
	 */
	enum class ETLItemSetParts : uint8_t
	{
		kA         = 0,
		kB         = 1,
		kC         = 2,
		kD         = 3,
		kE         = 4,
		kEndOfEnum = 5,
		MAX        = 6
	};

	/**
	 * Enum TLScheme.ETLMagicDollDialogEventType
	 */
	enum class ETLMagicDollDialogEventType : uint8_t
	{
		Idle        = 0,
		Reaction    = 1,
		Nudge       = 2,
		Tutorial    = 3,
		MagicPortal = 4,
		MAX         = 5
	};

	/**
	 * Enum TLScheme.ETLMagicDollStatType
	 */
	enum class ETLMagicDollStatType : uint8_t
	{
		None                        = 0,
		DroppedItemPickable         = 1,
		HpMax                       = 2,
		HpRegen                     = 3,
		CostMax                     = 4,
		CostRegen                   = 5,
		CostConsumptionModifier     = 6,
		BuffCostConsumptionModifier = 7,
		SkillCooldownModifier       = 8,
		MovementSpeedModifier       = 9,
		AdjustExpAcquired           = 10,
		AdjustGoldAcquired          = 11,
		AdjustGoldDrop              = 12,
		AdjustItemDrop              = 13,
		BelongingWeightCap          = 14,
		EarnDungeonPointModifier    = 15,
		SpendDungeonPointModifier   = 16,
		PickExtraMaterialChance     = 17,
		MagicDollHealModifier       = 18,
		EndOfEnum                   = 19,
		MAX                         = 20
	};

	/**
	 * Enum TLScheme.ETLMapDataType
	 */
	enum class ETLMapDataType : uint8_t
	{
		ALL                      = 0,
		ZONE                     = 1,
		REGION                   = 2,
		WAYPOINT                 = 3,
		EVENT_WAYPOINT           = 4,
		RESURRECTION_POINT       = 5,
		GUILD_FLAG               = 6,
		SIEGE_RESURRECTION_POINT = 7,
		SIEGE_PLUNDER_POINT      = 8,
		SIEGE_OUTPOST            = 9,
		SIEGE_THRONE             = 10,
		LINER                    = 11,
		REGION_STONE             = 12,
		BOSS_STONE               = 13,
		MAX                      = 14
	};

	/**
	 * Enum TLScheme.ETLMapContentsType
	 */
	enum class ETLMapContentsType : uint8_t
	{
		NONE       = 0,
		BEGINNING  = 1,
		PERSISTENT = 2,
		INSTANCE   = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.ETLMapType
	 */
	enum class ETLMapType : uint8_t
	{
		NONE = 0,
		GAME = 1,
		TEST = 2,
		MAX  = 3
	};

	/**
	 * Enum TLScheme.EWaypointType
	 */
	enum class EWaypointType : uint8_t
	{
		Waypoint      = 0,
		EventWaypoint = 1,
		MAX           = 2
	};

	/**
	 * Enum TLScheme.ETLContentResurrectionType
	 */
	enum class ETLContentResurrectionType : uint8_t
	{
		kNone              = 0,
		kResurrectionPoint = 1,
		kStartPoint        = 2,
		kInstanceDungeon   = 3,
		kGuildRaid         = 4,
		MAX                = 5
	};

	/**
	 * Enum TLScheme.ETLUpdateMapDisplaySource
	 */
	enum class ETLUpdateMapDisplaySource : uint8_t
	{
		Any           = 0,
		FloorList     = 1,
		MapRegionList = 2,
		RegionInfo    = 3,
		MAX           = 4
	};

	/**
	 * Enum TLScheme.ETLMapDisplayType
	 */
	enum class ETLMapDisplayType : uint8_t
	{
		WorldMap         = 0,
		StandaloneIndoor = 1,
		OverlayIndoor    = 2,
		MAX              = 3
	};

	/**
	 * Enum TLScheme.ETLRegionMapDisplayType
	 */
	enum class ETLRegionMapDisplayType : uint8_t
	{
		None       = 0,
		Standalone = 1,
		Overlay    = 2,
		MAX        = 3
	};

	/**
	 * Enum TLScheme.ETLRegionSpaceType
	 */
	enum class ETLRegionSpaceType : uint8_t
	{
		None    = 0,
		OutDoor = 1,
		InDoor  = 2,
		Dungeon = 3,
		MAX     = 4
	};

	/**
	 * Enum TLScheme.ETLCompassHideReason
	 */
	enum class ETLCompassHideReason : uint8_t
	{
		None            = 0,
		OutOfAngle      = 1,
		OutOfRange      = 2,
		NotCreate       = 3,
		EventRange      = 4,
		MapIconHideFlag = 5,
		Clustered       = 6,
		MaxShowCount    = 7,
		HideDistance    = 8,
		MAX             = 9
	};

	/**
	 * Enum TLScheme.ETLCompassDistanceShowType
	 */
	enum class ETLCompassDistanceShowType : uint8_t
	{
		None        = 0,
		InsideRange = 1,
		MAX         = 2
	};

	/**
	 * Enum TLScheme.ETLCompassEventType
	 */
	enum class ETLCompassEventType : uint8_t
	{
		None         = 0,
		DynamicEvent = 1,
		Siege        = 2,
		ArchBoss     = 3,
		Occupation   = 4,
		TaxDelivery  = 5,
		MAX          = 6
	};

	/**
	 * Enum TLScheme.ETLCompassEventShowType
	 */
	enum class ETLCompassEventShowType : uint8_t
	{
		None       = 0,
		Always     = 1,
		ByDistance = 2,
		MAX        = 3
	};

	/**
	 * Enum TLScheme.ETLCompassShowType
	 */
	enum class ETLCompassShowType : uint8_t
	{
		None          = 0,
		Always        = 1,
		ByDistance    = 2,
		Event         = 3,
		CardinalPoint = 4,
		MAX           = 5
	};

	/**
	 * Enum TLScheme.ETLMapIconActionType
	 */
	enum class ETLMapIconActionType : uint8_t
	{
		SHOW = 0,
		HIDE = 1,
		MAX  = 2
	};

	/**
	 * Enum TLScheme.ETLEventStatus
	 */
	enum class ETLEventStatus : uint8_t
	{
		NONE                     = 0,
		SIEGE_WARFARE_STANDBY    = 1,
		SIEGE_WARFARE_INPROGRESS = 2,
		SIEGE_WARFARE_RESULT     = 3,
		SIEGE_WARFARE_NONE       = 4,
		MAX                      = 5
	};

	/**
	 * Enum TLScheme.ETLEventStatusBitFlag
	 */
	enum class ETLEventStatusBitFlag : uint8_t
	{
		SIEGE_WARFARE_STANDBY    = 0,
		SIEGE_WARFARE_INPROGRESS = 1,
		SIEGE_WARFARE_RESULT     = 2,
		SIEGE_WARFARE_NONE       = 3,
		SIEGE_WARFARE_MAX        = 4
	};

	/**
	 * Enum TLScheme.ETLMapIconCreateType
	 */
	enum class ETLMapIconCreateType : uint8_t
	{
		NONE     = 0,
		PRESET   = 1,
		DYNAMIC  = 2,
		TEMPLATE = 3,
		MAX      = 4
	};

	/**
	 * Enum TLScheme.EMapIconState
	 */
	enum class EMapIconState : uint8_t
	{
		Default  = 0,
		On       = 1,
		Off      = 2,
		Friendly = 3,
		Hostile  = 4,
		MAX      = 5
	};

	/**
	 * Enum TLScheme.EMapIconType
	 */
	enum class EMapIconType : uint8_t
	{
		None                        = 0,
		DebugZone                   = 1,
		DebugRegion                 = 2,
		DebugEvent                  = 3,
		DebugEventWarning           = 4,
		DebugSiegeWarning           = 5,
		DynamicEventRegion          = 6,
		SiegeWarfareShape           = 7,
		PathFollowLine              = 8,
		OccupationShape             = 9,
		WorldBossShape              = 10,
		TaxDeliveryShape            = 11,
		MapAreaShape                = 12,
		WorldpinLine                = 13,
		PlayerView                  = 14,
		Player                      = 15,
		Party                       = 16,
		Npc                         = 17,
		Waypoint                    = 18,
		Dungeon                     = 19,
		Town                        = 20,
		Manor                       = 21,
		Region                      = 22,
		Location                    = 23,
		BossNpc                     = 24,
		DynamicEventTarget          = 25,
		GuildFlag                   = 26,
		DynamicEvent                = 27,
		Pin                         = 28,
		InstanceMapTarget           = 29,
		GuildMember                 = 30,
		SavedPlace                  = 31,
		Siege                       = 32,
		WaypointSmall               = 33,
		ContractTarget              = 34,
		WorldUserPin                = 35,
		WorldPartyPin               = 36,
		WorldGuildPin               = 37,
		OtherPlayer                 = 38,
		ViewPoint                   = 39,
		RevengeTarget               = 40,
		WorldTemporaryPin           = 41,
		CodexAdventureWorldTarget   = 42,
		CodexAdventureTarget        = 43,
		CodexAchievementWorldTarget = 44,
		CodexAchievementTarget      = 45,
		GuildContractTarget         = 46,
		NotOpenWaypoint             = 47,
		ResourceObject              = 48,
		TestMapIconArea             = 49,
		RelationFavorite            = 50,
		RelationUnfavorite          = 51,
		WorldUnionPin               = 52,
		CompassCardinalPoint        = 53,
		PlayerAutoCombatRange       = 54,
		TaxDelivery                 = 55,
		TaxDeliveryTarget           = 56,
		TreasureBox                 = 57,
		TreasureBoxArea             = 58,
		LegionGuildHome             = 59,
		GuildHome                   = 60,
		GuildMemberAlram            = 61,
		GuildCallClan               = 62,
		GuildAttackedMember         = 63,
		ChaoticTarget               = 64,
		DungeonWaypoint             = 65,
		CodexAdventureCentroid      = 66,
		CodexAchievementCentroid    = 67,
		ContractCentroid            = 68,
		GuildContractCentroid       = 69,
		GuildSkillResurrectionArea  = 70,
		WorldBoss                   = 71,
		MaxCount                    = 72,
		End                         = 73,
		MAX                         = 74
	};

	/**
	 * Enum TLScheme.SystemMsgType
	 */
	enum class ESystemMsgType : uint8_t
	{
		SystemMsgTypekError            = 0,
		SystemMsgTypeNone              = 1,
		SystemMsgTypeChat              = 2,
		SystemMsgTypeScreen            = 3,
		SystemMsgTypeAll               = 4,
		SystemMsgTypeSound             = 5,
		SystemMsgTypeGuide             = 6,
		SystemMsgTypeSiege             = 7,
		SystemMsgTypeSystemMsgType_MAX = 8
	};

	/**
	 * Enum TLScheme.ETLMessageBoxProgressBarPlayType
	 */
	enum class ETLMessageBoxProgressBarPlayType : uint8_t
	{
		PLAY_TYPE_FIX_VALUE     = 0,
		PLAY_TYPE_TIME_INCREASE = 1,
		PLAY_TYPE_TIME_DECREASE = 2,
		PLAY_TYPE_NONE          = 3,
		PLAY_TYPE_MAX           = 4
	};

	/**
	 * Enum TLScheme.ETLMessageBoxBtnStyle
	 */
	enum class ETLMessageBoxBtnStyle : uint8_t
	{
		BTN_STYLE_OK            = 0,
		BTN_STYLE_OK_CANCEL     = 1,
		BTN_STYLE_YES_NO        = 2,
		BTN_STYLE_YES_NO_CANCEL = 3,
		BTN_STYLE_NONE          = 4,
		BTN_STYLE_MAX           = 5
	};

	/**
	 * Enum TLScheme.ETLMountCondition
	 */
	enum class ETLMountCondition : uint8_t
	{
		kNone      = 0,
		kGuildOnly = 1,
		MAX        = 2
	};

	/**
	 * Enum TLScheme.ETLEventSkipCondition
	 */
	enum class ETLEventSkipCondition : uint8_t
	{
		NONE                     = 0,
		COMPLETE_MAP_CHANGE_STEP = 1,
		MAX                      = 2
	};

	/**
	 * Enum TLScheme.ETLMoviePlaybackType
	 */
	enum class ETLMoviePlaybackType : uint8_t
	{
		PLAY_ONCE               = 0,
		PLAY_LOOP               = 1,
		PLAY_LOADING_LOOP       = 2,
		PLAY_LEVEL_LOADING_LOOP = 3,
		PLAY_MAX                = 4
	};

	/**
	 * Enum TLScheme.ETLMoviePlayerType
	 */
	enum class ETLMoviePlayerType : uint8_t
	{
		BINK_MEDIA_PLAYER    = 0,
		DEFAULT_MOVIE_PLAYER = 1,
		MAX                  = 2
	};

	/**
	 * Enum TLScheme.ETLNpcSectorCondition
	 */
	enum class ETLNpcSectorCondition : uint8_t
	{
		kNormal    = 0,
		kBroken    = 1,
		kDestroyed = 2,
		kEndOfEnum = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.ETLNpcSector
	 */
	enum class ETLNpcSector : uint8_t
	{
		kSector1   = 0,
		kSector2   = 1,
		kSector3   = 2,
		kSector4   = 3,
		kEndOfEnum = 4,
		MAX        = 5
	};

	/**
	 * Enum TLScheme.ENpcSubType
	 */
	enum class ENpcSubType : uint8_t
	{
		None       = 0,
		Shop       = 1,
		kEndOfEnum = 2,
		MAX        = 3
	};

	/**
	 * Enum TLScheme.ENpcRoamingType
	 */
	enum class ENpcRoamingType : uint8_t
	{
		kStraight = 0,
		kCurve    = 1,
		kNatural  = 2,
		MAX       = 3
	};

	/**
	 * Enum TLScheme.EMenuCondition
	 */
	enum class EMenuCondition : uint8_t
	{
		TargetOnline             = 0,
		TargetAlive              = 1,
		Party                    = 2,
		TargetNotParty           = 3,
		TargetPartyMember        = 4,
		TargetNotPartyMember     = 5,
		PartyLeader              = 6,
		Guild                    = 7,
		NotGuild                 = 8,
		TargetGuild              = 9,
		TargetNotGuild           = 10,
		TargetNotGuildMember     = 11,
		TargetQualifyGuildLeader = 12,
		GuildLeader              = 13,
		GuildNotFullGuardian     = 14,
		TargetCanExiledFromGuild = 15,
		CanExileFromGuild        = 16,
		TargetNotGuildLeader     = 17,
		MAX                      = 18
	};

	/**
	 * Enum TLScheme.ETLDynamicStatFormulaType
	 */
	enum class ETLDynamicStatFormulaType : uint8_t
	{
		kSimple   = 0,
		kCompound = 1,
		MAX       = 2
	};

	/**
	 * Enum TLScheme.ETLPolymorphEnchantType
	 */
	enum class ETLPolymorphEnchantType : uint8_t
	{
		kNone                    = 0,
		kPolymorphEnchantControl = 1,
		kPolymorphEnchantAttack  = 2,
		kPolymorphEnchantMove    = 3,
		kPolymorphEnchantDefense = 4,
		kPolymorphEnchantWeak    = 5,
		kPolymorphEnchantStr     = 6,
		kPolymorphEnchantDex     = 7,
		kPolymorphEnchantCon     = 8,
		kPolymorphEnchantInt     = 9,
		kPolymorphEnchantWis     = 10,
		kPolymorphEnchantCha     = 11,
		kEndOfEnum               = 12,
		MAX                      = 13
	};

	/**
	 * Enum TLScheme.ETLBMShopPanelType
	 */
	enum class ETLBMShopPanelType : uint8_t
	{
		None      = 0,
		Promotion = 1,
		GoodsList = 2,
		Warehouse = 3,
		MAX       = 4
	};

	/**
	 * Enum TLScheme.ETLBMShopGoodsCategory
	 */
	enum class ETLBMShopGoodsCategory : uint8_t
	{
		None             = 0,
		PackageSpecial   = 1,
		PackageCommon    = 2,
		GrowthEquip      = 3,
		GrowthUsable     = 4,
		EventSpecial     = 5,
		EventCommon      = 6,
		ContractCoin     = 7,
		GuildCoin        = 8,
		SocialCoin       = 9,
		FuncAdditional   = 10,
		FuncLimitary     = 11,
		FuncExpand       = 12,
		FuncSocial       = 13,
		CashCurrency     = 14,
		TicketSeasonPass = 15,
		TicketGrowthPass = 16,
		MAX              = 17
	};

	/**
	 * Enum TLScheme.ETLPurchaseSecondaryCategory
	 */
	enum class ETLPurchaseSecondaryCategory : uint8_t
	{
		None           = 0,
		PackageSpecial = 1,
		PackageCommon  = 2,
		GrowthEquip    = 3,
		GrowthUsable   = 4,
		EventSpecial   = 5,
		EventCommon    = 6,
		ContractCoin   = 7,
		GuildCoin      = 8,
		SocialCoin     = 9,
		FuncAdditional = 10,
		FuncLimitary   = 11,
		FuncExpand     = 12,
		FuncSocial     = 13,
		CashCurrency   = 14,
		CashPass       = 15,
		Max            = 16
	};

	/**
	 * Enum TLScheme.ETLPurchasePrimaryCategory
	 */
	enum class ETLPurchasePrimaryCategory : uint8_t
	{
		None      = 0,
		Package   = 1,
		Growth    = 2,
		Gacha     = 3,
		Event     = 4,
		Coin      = 5,
		Func      = 6,
		Cash      = 7,
		Warehouse = 8,
		Max       = 9
	};

	/**
	 * Enum TLScheme.ETLPVPHistoryMessageType
	 */
	enum class ETLPVPHistoryMessageType : uint8_t
	{
		Kill        = 0,
		Death       = 1,
		Taunt       = 2,
		Restoration = 3,
		Num         = 4,
		MAX         = 5
	};

	/**
	 * Enum TLScheme.FTLDynamicEventStoreValueType
	 */
	enum class EFTLDynamicEventStoreValueType : uint8_t
	{
		FTLDynamicEventStoreValueTypeMY_COUNT                          = 0,
		FTLDynamicEventStoreValueTypeMAX_COUNT                         = 1,
		FTLDynamicEventStoreValueTypeTOTAL_COUNT                       = 2,
		FTLDynamicEventStoreValueTypeTOP_COUNT                         = 3,
		FTLDynamicEventStoreValueTypeINFINITY_COUNT                    = 4,
		FTLDynamicEventStoreValueTypeACQUIREABLE_COUNT                 = 5,
		FTLDynamicEventStoreValueTypeFTLDynamicEventStoreValueType_MAX = 6
	};

	/**
	 * Enum TLScheme.EDynamicEventPointCountType
	 */
	enum class EDynamicEventPointCountType : uint8_t
	{
		RemainPoint  = 0,
		CurrentPoint = 1,
		MAX          = 2
	};

	/**
	 * Enum TLScheme.EStepProgressType
	 */
	enum class EStepProgressType : uint8_t
	{
		kNone     = 0,
		kPrepare  = 1,
		kProgress = 2,
		MAX       = 3
	};

	/**
	 * Enum TLScheme.ETLQuestType
	 */
	enum class ETLQuestType : uint8_t
	{
		DynamicEvent          = 0,
		InstanceMapGuideEvent = 1,
		InfinityDungeonEvent  = 2,
		MAX                   = 3
	};

	/**
	 * Enum TLScheme.EMenuItemSubGroupType
	 */
	enum class EMenuItemSubGroupType : uint8_t
	{
		None     = 0,
		Social   = 1,
		Party    = 2,
		Activity = 3,
		MAX      = 4
	};

	/**
	 * Enum TLScheme.EMenuItemConditionType
	 */
	enum class EMenuItemConditionType : uint8_t
	{
		None                       = 0,
		MyPc                       = 1,
		Online                     = 2,
		Alive                      = 3,
		MyPcIsPartyMember          = 4,
		MyPcIsMaster               = 5,
		TargetPcIsMaster           = 6,
		MyPcHasGuild               = 7,
		TargetIsMyGuildMember      = 8,
		TargetHasGuild             = 9,
		MyPcIsGuildManager         = 10,
		ValidObject                = 11,
		TargetMyParty              = 12,
		PcRelationshipFavorite     = 13,
		PcRelationshipUnfavorite   = 14,
		PcRelationshipFriend       = 15,
		PcRelationshipBlock        = 16,
		PcRelationshipNone         = 17,
		CanMakePartyMap            = 18,
		MyPcSendPcPostLevel        = 19,
		MyPcGroupChatManager       = 20,
		MyPcHasParty               = 21,
		PcRelationshipAddingFriend = 22,
		MAX                        = 23
	};

	/**
	 * Enum TLScheme.ESubMenuItemActionType
	 */
	enum class ESubMenuItemActionType : uint8_t
	{
		None              = 0,
		PartyPinAuthority = 1,
		MAX               = 2
	};

	/**
	 * Enum TLScheme.EMenuItemActionType
	 */
	enum class EMenuItemActionType : uint8_t
	{
		None               = 0,
		Whisper            = 1,
		Follow             = 2,
		InviteParty        = 3,
		PartyChangeMaster  = 4,
		PartyKick          = 5,
		PartyDraw          = 6,
		InviteGuild        = 7,
		ApplyGuild         = 8,
		AddFavorite        = 9,
		AddUnfavorite      = 10,
		RemoveFavorite     = 11,
		RemoveUnfavorite   = 12,
		AddFriend          = 13,
		RemoveFriend       = 14,
		AddBlock           = 15,
		RemoveBlock        = 16,
		SendPost           = 17,
		InviteGroupChat    = 18,
		CancelAddingFriend = 19,
		Report             = 20,
		MAX                = 21
	};

	/**
	 * Enum TLScheme.ERankingRewardType
	 */
	enum class ERankingRewardType : uint8_t
	{
		kExp         = 0,
		kPvp         = 1,
		kGuild       = 2,
		kActivePoint = 3,
		MAX          = 4
	};

	/**
	 * Enum TLScheme.EReportGameSource
	 */
	enum class EReportGameSource : uint8_t
	{
		kChat = 0,
		MAX   = 1
	};

	/**
	 * Enum TLScheme.EReportReasonCode
	 */
	enum class EReportReasonCode : uint8_t
	{
		kSwearWords = 0,
		kEndOfEnum  = 1,
		MAX         = 2
	};

	/**
	 * Enum TLScheme.ERotationEventContentRankingPointCategory
	 */
	enum class ERotationEventContentRankingPointCategory : uint8_t
	{
		kNone         = 0,
		kDynamicEvent = 1,
		EndOfEnum     = 2,
		MAX           = 3
	};

	/**
	 * Enum TLScheme.ERotationEventItemRankingCategory
	 */
	enum class ERotationEventItemRankingCategory : uint8_t
	{
		kNone      = 0,
		kWeapon    = 1,
		kArmor     = 2,
		kAccessory = 3,
		EndOfEnum  = 4,
		MAX        = 5
	};

	/**
	 * Enum TLScheme.ERotationEventItemRankingPointCategory
	 */
	enum class ERotationEventItemRankingPointCategory : uint8_t
	{
		kNone          = 0,
		kItemDecompose = 1,
		kItemEnchant   = 2,
		kItemCraft     = 3,
		EndOfEnum      = 4,
		MAX            = 5
	};

	/**
	 * Enum TLScheme.ERotationEventNpcRankingPointCategory
	 */
	enum class ERotationEventNpcRankingPointCategory : uint8_t
	{
		kNone     = 0,
		kHunting  = 1,
		EndOfEnum = 2,
		MAX       = 3
	};

	/**
	 * Enum TLScheme.ERotationEventRankingType
	 */
	enum class ERotationEventRankingType : uint8_t
	{
		kNone     = 0,
		kNpc      = 1,
		kItem     = 2,
		kContent  = 3,
		EndOfEnum = 4,
		MAX       = 5
	};

	/**
	 * Enum TLScheme.ETLScreenMsgExpire
	 */
	enum class ETLScreenMsgExpire : uint8_t
	{
		kNone      = 0,
		kLoading   = 1,
		kCounter   = 2,
		kEndOfEnum = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.ETLScreenMsgPriority
	 */
	enum class ETLScreenMsgPriority : uint8_t
	{
		kImmediateOnly = 0,
		kImmediate     = 1,
		kFront         = 2,
		kNormal        = 3,
		MAX            = 4
	};

	/**
	 * Enum TLScheme.ETLScreenMsgGroup
	 */
	enum class ETLScreenMsgGroup : uint8_t
	{
		kUI          = 0,
		kSystem      = 1,
		kNotice      = 2,
		kDialog      = 3,
		kContents    = 4,
		kBroadcast   = 5,
		kMap         = 6,
		kTopMost     = 7,
		kGuildNotice = 8,
		kChat        = 9,
		kEndOfEnum   = 10,
		MAX          = 11
	};

	/**
	 * Enum TLScheme.ETLCastingUIType
	 */
	enum class ETLCastingUIType : uint8_t
	{
		OnHud           = 0,
		PopupMessageBox = 1,
		MAX             = 2
	};

	/**
	 * Enum TLScheme.EEnvironmentalAffected
	 */
	enum class EEnvironmentalAffected : uint8_t
	{
		None  = 0,
		Wind  = 1,
		Night = 2,
		Rain  = 3,
		MAX   = 4
	};

	/**
	 * Enum TLScheme.ETLSkillBuffType
	 */
	enum class ETLSkillBuffType : uint8_t
	{
		LongBuff  = 0,
		ShortBuff = 1,
		Debuff    = 2,
		Normal    = 3,
		MAX       = 4
	};

	/**
	 * Enum TLScheme.EPassiveSkillType
	 */
	enum class EPassiveSkillType : uint8_t
	{
		kNone        = 0,
		kPolymorph   = 1,
		kEnvironment = 2,
		kCommon      = 3,
		MAX          = 4
	};

	/**
	 * Enum TLScheme.ETLChainSkillDirection
	 */
	enum class ETLChainSkillDirection : uint8_t
	{
		kForwardDirection = 0,
		kChangeDirection  = 1,
		kTowardTarget     = 2,
		MAX               = 3
	};

	/**
	 * Enum TLScheme.ETLTargetApproachType
	 */
	enum class ETLTargetApproachType : uint8_t
	{
		None           = 0,
		TargetApproach = 1,
		MAX            = 2
	};

	/**
	 * Enum TLScheme.ESkillAttackSide
	 */
	enum class ESkillAttackSide : uint8_t
	{
		kError         = 0,
		kMainHand      = 1,
		kOffHand       = 2,
		kBothHand      = 3,
		kInvisibleHand = 4,
		MAX            = 5
	};

	/**
	 * Enum TLScheme.ETLDefensibleSkillAttackType
	 */
	enum class ETLDefensibleSkillAttackType : uint8_t
	{
		kError        = 0,
		kNormal       = 1,
		kHeavy        = 2,
		kIndefensible = 3,
		MAX           = 4
	};

	/**
	 * Enum TLScheme.ESkillPcRotateFlag
	 */
	enum class ESkillPcRotateFlag : uint8_t
	{
		kError                   = 0,
		kDefault                 = 1,
		kTargetDir               = 2,
		kMyPcDir                 = 3,
		kInputDir                = 4,
		kCameraDir               = 5,
		kInputOrCameraDir        = 6,
		kInputOrCameraReverseDir = 7,
		MAX                      = 8
	};

	/**
	 * Enum TLScheme.ETargetValidType
	 */
	enum class ETargetValidType : uint8_t
	{
		kError       = 0,
		None         = 1,
		Need_Target  = 2,
		Smart_Target = 3,
		MAX          = 4
	};

	/**
	 * Enum TLScheme.ESkillPriority
	 */
	enum class ESkillPriority : uint8_t
	{
		kError      = 0,
		Trivial     = 1,
		Minor       = 2,
		Normal      = 3,
		Major       = 4,
		Independent = 5,
		MAX         = 6
	};

	/**
	 * Enum TLScheme.ESkillTargetBase
	 */
	enum class ESkillTargetBase : uint8_t
	{
		kError          = 0,
		kCaster         = 1,
		kTarget         = 2,
		kFriendlyTarget = 3,
		kPos            = 4,
		MAX             = 5
	};

	/**
	 * Enum TLScheme.ETLSkillTargetLivingStatus
	 */
	enum class ETLSkillTargetLivingStatus : uint8_t
	{
		kError       = 0,
		kAlive       = 1,
		kDead        = 2,
		kDeadOrAlive = 3,
		MAX          = 4
	};

	/**
	 * Enum TLScheme.ETLSkillRotate
	 */
	enum class ETLSkillRotate : uint8_t
	{
		kError              = 0,
		DontRotate          = 1,
		RotateWhenHit       = 2,
		KeepRotateBeforeHit = 3,
		KeepRotate          = 4,
		MAX                 = 5
	};

	/**
	 * Enum TLScheme.ETLSkillTargetRelation
	 */
	enum class ETLSkillTargetRelation : uint8_t
	{
		kError              = 0,
		kAll                = 1,
		kHostile            = 2,
		kFriendly           = 3,
		kFriendlyAndNeutral = 4,
		kHostileAndFriendly = 5,
		kParty              = 6,
		kFriendlyParty      = 7,
		kPartyAll           = 8,
		MAX                 = 9
	};

	/**
	 * Enum TLScheme.ETLSkillPropensity
	 */
	enum class ETLSkillPropensity : uint8_t
	{
		kError      = 0,
		kHarmful    = 1,
		kBeneficial = 2,
		kNeither    = 3,
		MAX         = 4
	};

	/**
	 * Enum TLScheme.ESkillMoveType
	 */
	enum class ESkillMoveType : uint8_t
	{
		kError      = 0,
		kNone       = 1,
		kFixedSpeed = 2,
		kFixedTime  = 3,
		kCanMove    = 4,
		MAX         = 5
	};

	/**
	 * Enum TLScheme.EProjectileInfo
	 */
	enum class EProjectileInfo : uint8_t
	{
		kError     = 0,
		None       = 1,
		Normal     = 2,
		Chain      = 3,
		Hover      = 4,
		kEndOfEnum = 5,
		MAX        = 6
	};

	/**
	 * Enum TLScheme.ESkillInputType
	 */
	enum class ESkillInputType : uint8_t
	{
		kError    = 0,
		General   = 1,
		Toggle    = 2,
		kTwoDepth = 3,
		MAX       = 4
	};

	/**
	 * Enum TLScheme.ESkillCategory
	 */
	enum class ESkillCategory : uint8_t
	{
		kError   = 0,
		kSkill   = 1,
		kItem    = 2,
		kPassive = 3,
		kFo      = 4,
		MAX      = 5
	};

	/**
	 * Enum TLScheme.EGlobalCooldownGroup
	 */
	enum class EGlobalCooldownGroup : uint8_t
	{
		kError                         = 0,
		kNone                          = 1,
		kSkillGlobal_01                = 2,
		kSkillGlobal_02                = 3,
		kSkillGlobal_03                = 4,
		kSkillGlobal_04                = 5,
		kItemGlobal_01                 = 6,
		kReserved_01                   = 7,
		kPenaltyGlobalStart            = 8,
		kPenaltyGlobal_Equip           = 9,
		kPenaltyGlobal_CombatPolymorph = 10,
		kPenaltyGlobal_MagicDoll       = 11,
		kPenaltyGlobalEnd              = 12,
		MAX                            = 13
	};

	/**
	 * Enum TLScheme.ESocialMotionPlayType
	 */
	enum class ESocialMotionPlayType : uint8_t
	{
		SingleMotion = 0,
		GroupMotion  = 1,
		SetMotion    = 2,
		SetPose      = 3,
		MAX          = 4
	};

	/**
	 * Enum TLScheme.ESocialMotionType
	 */
	enum class ESocialMotionType : uint8_t
	{
		Facial = 0,
		Motion = 1,
		MAX    = 2
	};

	/**
	 * Enum TLScheme.ENpcState
	 */
	enum class ENpcState : uint8_t
	{
		kNone          = 0,
		kSpawn         = 1,
		kIdle          = 2,
		kInteraction   = 3,
		kCombatStart   = 4,
		kCombatSupport = 5,
		kInCombat      = 6,
		kDie           = 7,
		kEndOfEnum     = 8,
		MAX            = 9
	};

	/**
	 * Enum TLScheme.ESpecialDungeonDayOfWeek
	 */
	enum class ESpecialDungeonDayOfWeek : uint8_t
	{
		None      = 0,
		Monday    = 1,
		Tuesday   = 2,
		Wednesday = 3,
		Thursday  = 4,
		Friday    = 5,
		Saturday  = 6,
		Sunday    = 7,
		ALL       = 8,
		MAX       = 9
	};

	/**
	 * Enum TLScheme.ESpecialDungeonType
	 */
	enum class ESpecialDungeonType : uint8_t
	{
		TimeLimit = 0,
		Infinity  = 1,
		Max       = 2
	};

	/**
	 * Enum TLScheme.EWeakness
	 */
	enum class EWeakness : uint8_t
	{
		kSilver    = 0,
		kHoly      = 1,
		kBurn      = 2,
		kEndOfEnum = 3,
		MAX        = 4
	};

	/**
	 * Enum TLScheme.EAdjustStatType
	 */
	enum class EAdjustStatType : uint8_t
	{
		kNone                         = 0,
		kSTRAndAddHp                  = 1,
		kHpMaxAndAddHp                = 2,
		kHpMaxModifierAndAddHp        = 3,
		kCostMaxAndAddCost            = 4,
		kSTR                          = 5,
		kDEX                          = 6,
		kINT                          = 7,
		kPER                          = 8,
		kAttackPowerMainHand          = 9,
		kAttackPowerOffHand           = 10,
		kBonusAttackPowerMainHand     = 11,
		kBonusAttackPowerOffHand      = 12,
		kAttackPowerModifier          = 13,
		kAttackSpeedModifier          = 14,
		kAttackSpeedModifierOffHand   = 15,
		kAttackRangeModifier          = 16,
		kHpMax                        = 17,
		kHpMaxModifier                = 18,
		kHpRegen                      = 19,
		kHpRegenModifier              = 20,
		kPotionHealModifier           = 21,
		kMagicDollHealModifier        = 22,
		kMeleeArmor                   = 23,
		kRangeArmor                   = 24,
		kMagicArmor                   = 25,
		kArmorModifier                = 26,
		kAttackRating                 = 27,
		kShieldBlockChance            = 28,
		kShieldBlockChancePenetration = 29,
		kShieldBlockEfficiency        = 30,
		kCostMax                      = 31,
		kCostRegen                    = 32,
		kCostRegenModifier            = 33,
		kCostSpend                    = 34,
		kCostConsumptionModifier      = 35,
		kMeleeCriticalAttack          = 36,
		kRangeCriticalAttack          = 37,
		kMagicCriticalAttack          = 38,
		kMeleeCriticalDefense         = 39,
		kRangeCriticalDefense         = 40,
		kMagicCriticalDefense         = 41,
		kMeleeDoubleAttack            = 42,
		kRangeDoubleAttack            = 43,
		kMagicDoubleAttack            = 44,
		kMeleeDoubleDefense           = 45,
		kRangeDoubleDefense           = 46,
		kMagicDoubleDefense           = 47,
		kMeleeAccuracy                = 48,
		kRangeAccuracy                = 49,
		kMagicAccuracy                = 50,
		kMeleeEvasion                 = 51,
		kRangeEvasion                 = 52,
		kMagicEvasion                 = 53,
		kBossBonusAttackPower         = 54,
		kBossDamageReduction          = 55,
		kBossMeleeCriticalAttack      = 56,
		kBossRangeCriticalAttack      = 57,
		kBossMagicCriticalAttack      = 58,
		kBossMeleeCriticalDefense     = 59,
		kBossRangeCriticalDefense     = 60,
		kBossMagicCriticalDefense     = 61,
		kBossMeleeDoubleAttack        = 62,
		kBossRangeDoubleAttack        = 63,
		kBossMagicDoubleAttack        = 64,
		kBossMeleeDoubleDefense       = 65,
		kBossRangeDoubleDefense       = 66,
		kBossMagicDoubleDefense       = 67,
		kBossMeleeAccuracy            = 68,
		kBossRangeAccuracy            = 69,
		kBossMagicAccuracy            = 70,
		kBossMeleeEvasion             = 71,
		kBossRangeEvasion             = 72,
		kBossMagicEvasion             = 73,
		kPvPMeleeCriticalAttack       = 74,
		kPvPRangeCriticalAttack       = 75,
		kPvPMagicCriticalAttack       = 76,
		kPvPMeleeCriticalDefense      = 77,
		kPvPRangeCriticalDefense      = 78,
		kPvPMagicCriticalDefense      = 79,
		kPvPMeleeDoubleAttack         = 80,
		kPvPRangeDoubleAttack         = 81,
		kPvPMagicDoubleAttack         = 82,
		kPvPMeleeDoubleDefense        = 83,
		kPvPRangeDoubleDefense        = 84,
		kPvPMagicDoubleDefense        = 85,
		kPvPMeleeAccuracy             = 86,
		kPvPRangeAccuracy             = 87,
		kPvPMagicAccuracy             = 88,
		kPvPMeleeEvasion              = 89,
		kPvPRangeEvasion              = 90,
		kPvPMagicEvasion              = 91,
		kMeleeDamageDealtModifier     = 92,
		kRangeDamageDealtModifier     = 93,
		kMagicDamageDealtModifier     = 94,
		kMeleeDamageTakenModifier     = 95,
		kRangeDamageTakenModifier     = 96,
		kMagicDamageTakenModifier     = 97,
		kCriticalDamageDealtModifier  = 98,
		kPvPDamageDealtModifier       = 99,
		kPvPDamageTakenModifier       = 100,
		kSkillPowerAmplification      = 101,
		kSkillPowerResistance         = 102,
		kBuffGivenDurationModifier    = 103,
		kDebuffTakenDurationModifier  = 104,
		kAuraEffectBoost              = 105,
		kAuraEffectBoostModifier      = 106,
		kAuraRadiusModifier           = 107,
		kDamageReduction              = 108,
		kGrankusDamageReduction       = 109,
		kEinardenDamageReduction      = 110,
		kDragonDamageReduction        = 111,
		kDemonDamageReduction         = 112,
		kUndeadDamageReduction        = 113,
		kCreationDamageReduction      = 114,
		kSpiritDamageReduction        = 115,
		kAnimalDamageReduction        = 116,
		kInsectDamageReduction        = 117,
		kPlantDamageReduction         = 118,
		kDamageReductionPenetration   = 119,
		kBonusGrankusAttackPower      = 120,
		kBonusEinardenAttackPower     = 121,
		kBonusDragonAttackPower       = 122,
		kBonusDemonAttackPower        = 123,
		kBonusUndeadAttackPower       = 124,
		kBonusCreationAttackPower     = 125,
		kBonusSpiritAttackPower       = 126,
		kBonusAnimalAttackPower       = 127,
		kBonusInsectAttackPower       = 128,
		kBonusPlantAttackPower        = 129,
		kWeakenAccuracy               = 130,
		kWeakenTolerance              = 131,
		kStunAccuracy                 = 132,
		kStunTolerance                = 133,
		kPetrificationAccuracy        = 134,
		kPetrificationTolerance       = 135,
		kSleepAccuracy                = 136,
		kSleepTolerance               = 137,
		kSilenceAccuracy              = 138,
		kSilenceTolerance             = 139,
		kBindAccuracy                 = 140,
		kBindTolerance                = 141,
		kBlindAccuracy                = 142,
		kBlindTolerance               = 143,
		kCollideAmplification         = 144,
		kCollideResistance            = 145,
		kWeakenCriticalAttack         = 146,
		kWeakenCriticalDefense        = 147,
		kStunCriticalAttack           = 148,
		kStunCriticalDefense          = 149,
		kPetrificationCriticalAttack  = 150,
		kPetrificationCriticalDefense = 151,
		kSleepCriticalAttack          = 152,
		kSleepCriticalDefense         = 153,
		kSilenceCriticalAttack        = 154,
		kSilenceCriticalDefense       = 155,
		kBindCriticalAttack           = 156,
		kBindCriticalDefense          = 157,
		kBlindCriticalAttack          = 158,
		kBlindCriticalDefense         = 159,
		kWeakenDoubleAttack           = 160,
		kWeakenDoubleDefense          = 161,
		kStunDoubleAttack             = 162,
		kStunDoubleDefense            = 163,
		kPetrificationDoubleAttack    = 164,
		kPetrificationDoubleDefense   = 165,
		kSleepDoubleAttack            = 166,
		kSleepDoubleDefense           = 167,
		kSilenceDoubleAttack          = 168,
		kSilenceDoubleDefense         = 169,
		kBindDoubleAttack             = 170,
		kBindDoubleDefense            = 171,
		kBlindDoubleAttack            = 172,
		kBlindDoubleDefense           = 173,
		kStunImmune                   = 174,
		kPetrificationImmune          = 175,
		kSleepImmune                  = 176,
		kSilenceImmune                = 177,
		kBindImmune                   = 178,
		kBlindImmune                  = 179,
		kCollideImmune                = 180,
		kMoveSpeed                    = 181,
		kMoveSpeedModifier            = 182,
		kBelongingWeightCap           = 183,
		kHealTakenModifier            = 184,
		kAdjustExpAcquired            = 185,
		kAdjustGoldAcquired           = 186,
		kAdjustItemDrop               = 187,
		kAdjustGoldDrop               = 188,
		kAdjustResourceDrop           = 189,
		kEarnWeaponMasteryExpModifier = 190,
		kEarnDungeonPointModifier     = 191,
		kSpendDungeonPointModifier    = 192,
		kGatheringSpeed               = 193,
		kGatheringSpeedModifier       = 194,
		kGatheringDoubleChance        = 195,
		kGatheringCriticalChance      = 196,
		kAggroModifier                = 197,
		kHealModifier                 = 198,
		kSkillHealTakenModifier       = 199,
		kSkillCooldownModifier        = 200,
		kGlobalSkillCooldownModifier  = 201,
		kStaminaMax                   = 202,
		kStaminaRegen                 = 203,
		kStaminaRegenModifier         = 204,
		kStaminaConsumption           = 205,
		kStaminaConsumptionModifier   = 206,
		kHittedStopDurationModifier   = 207,
		kHittedStopPreventChance      = 208,
		kHp                           = 209,
		kCost                         = 210,
		kStamina                      = 211,
		MAX                           = 212
	};

	/**
	 * Enum TLScheme.ETLTreasureBoxType
	 */
	enum class ETLTreasureBoxType : uint8_t
	{
		NORMAL   = 0,
		ADVANCED = 1,
		NONE     = 2,
		MAX      = 3
	};

	/**
	 * Enum TLScheme.ETLTutorialProgressStatus
	 */
	enum class ETLTutorialProgressStatus : uint8_t
	{
		kNone    = 0,
		kReady   = 1,
		kStart   = 2,
		kDisable = 3,
		MAX      = 4
	};

	/**
	 * Enum TLScheme.ETutorialCompleteType
	 */
	enum class ETutorialCompleteType : uint8_t
	{
		kMove                = 0,
		kJump                = 1,
		kControlCamera       = 2,
		kOpenInventory       = 3,
		kOpenSkillCustom     = 4,
		kUseSkill            = 5,
		kUseItem             = 6,
		kDie                 = 7,
		kDelayTime           = 8,
		kPlayCutscene        = 9,
		kServerOperation     = 10,
		kAutoUseQuickSlot    = 11,
		kOpenCharacterWindow = 12,
		MAX                  = 13
	};

	/**
	 * Enum TLScheme.ETutorialPreconditionType
	 */
	enum class ETutorialPreconditionType : uint8_t
	{
		kEnterRegion                = 0,
		kEnterContentsVolume        = 1,
		kCompleteTutorial           = 2,
		kAcquireItem                = 3,
		kLevelUp                    = 4,
		kServerOperation            = 5,
		kChangeSkillSetForSkillSlot = 6,
		MAX                         = 7
	};

	/**
	 * Enum TLScheme.ETLUIGroupActionType
	 */
	enum class ETLUIGroupActionType : uint8_t
	{
		None        = 0,
		ShowAndHide = 1,
		Show        = 2,
		Hide        = 3,
		AlwaysHide  = 4,
		Max         = 5
	};

	/**
	 * Enum TLScheme.ETLCameraUserOption
	 */
	enum class ETLCameraUserOption : uint8_t
	{
		MAX_ZOOM_DISTANCE   = 0,
		WORLD_TARGET_OFFSET = 1,
		PROJECTION_OFFSET   = 2,
		NONE                = 3,
		MAX                 = 4
	};

	/**
	 * Enum TLScheme.ETLUserCameraType
	 */
	enum class ETLUserCameraType : uint8_t
	{
		Center      = 0,
		Shoulder    = 1,
		QuarterView = 2,
		BackView    = 3,
		Gliding     = 4,
		Siege       = 5,
		EndOfEnum   = 6,
		MAX         = 7
	};

	/**
	 * Enum TLScheme.ETLWindGrade
	 */
	enum class ETLWindGrade : uint8_t
	{
		GRADE_ZERO  = 0,
		GRADE_ONE   = 1,
		GRADE_TWO   = 2,
		GRADE_THREE = 3,
		GRADE_COUNT = 4,
		GRADE_MAX   = 5
	};

	/**
	 * Enum TLScheme.ETLWindDirection
	 */
	enum class ETLWindDirection : uint8_t
	{
		DIR_NONE       = 0,
		DIR_NORTH      = 1,
		DIR_NORTH_WEST = 2,
		DIR_WEST       = 3,
		DIR_SOUTH_WEST = 4,
		DIR_SOUTH      = 5,
		DIR_SOUTH_EAST = 6,
		DIR_EAST       = 7,
		DIR_NORTH_EAST = 8,
		END_OF_ENUM    = 9,
		MAX            = 10
	};

	/**
	 * Enum TLScheme.ETLScreenMsgType
	 */
	enum class ETLScreenMsgType : uint8_t
	{
		kSystem                        = 0,
		kNotice                        = 1,
		kDynamicEvent                  = 2,
		kDynamicEvent_Begin            = 3,
		kDynamicEvent_Finished         = 4,
		kDynamicEvent_Success          = 5,
		kDynamicEvent_Failure          = 6,
		kLevel                         = 7,
		kSiege                         = 8,
		kSiegeSide                     = 9,
		kRegion                        = 10,
		kSkill                         = 11,
		kItemAcquireScreen             = 12,
		kGuildLevelUp                  = 13,
		kGuildLevelDown                = 14,
		kWorldEffect_Start             = 15,
		kWorldEffect_End               = 16,
		kItemCollection_Complete       = 17,
		kSystemFullScreen              = 18,
		kPVPTaunt                      = 19,
		kTerritoryFog                  = 20,
		kRegionStone                   = 21,
		kBossStone                     = 22,
		kGuildContractStart            = 23,
		kGuildContractComplete         = 24,
		kGuildNotice                   = 25,
		kCodexAdventureStart           = 26,
		kCodexAdventureComplete        = 27,
		kChallengeComplete             = 28,
		kWorldBossStart                = 29,
		kWorldBossSuccess              = 30,
		kWorldBossFail                 = 31,
		kTeamBattleMessage             = 32,
		kMemorial                      = 33,
		kDialogue                      = 34,
		kTaxDelibery                   = 35,
		kContentsOpen                  = 36,
		kWeaponMasteryOpenConfirm      = 37,
		kTreasureBox                   = 38,
		kCodexAdventureReward          = 39,
		kChallengeReward               = 40,
		kContractReward                = 41,
		kTimeLimitDungeon              = 42,
		kInteractionCameraTitle        = 43,
		kSiegeWarfareSuccess           = 44,
		kSiegeWarfareFailure           = 45,
		kDungeonWaypointOpen           = 46,
		kGuildContractReward           = 47,
		kInfinityDungeonComplete       = 48,
		kCodexCollectionBundleComplete = 49,
		kCodexCollectionBookComplete   = 50,
		kGroupChatInvite               = 51,
		kUndercoverReward              = 52,
		kReward                        = 53,
		kMagicDollCollection_Complete  = 54,
		kPolymorphCollection_Complete  = 55,
		kVowCollection_Complete        = 56,
		kGrowthPassApply               = 57,
		kRotationEventStart            = 58,
		kRotationEventComplete         = 59,
		kRotationEventReward           = 60,
		kEndOfEnum                     = 61,
		MAX                            = 62
	};

	// --------------------------------------------------
	// # Structs
	// --------------------------------------------------
	/**
	 * ScriptStruct TLScheme.TLTableRowBase
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTLTableRowBase : public FTableRowBase
	{
	public:
		class FName                                                RowName;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLDataTableRowHandle
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FTLDataTableRowHandle : public FDataTableRowHandle
	{	};

	/**
	 * ScriptStruct TLScheme.TLSchemePolymorphLevelSkillInfo
	 * Size -> 0x000C
	 */
	struct FTLSchemePolymorphLevelSkillInfo
	{
	public:
		class FName                                                SkillComplexId;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillLevel;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLUIStatsValueInfo
	 * Size -> 0x0058
	 */
	struct FTLUIStatsValueInfo
	{
	public:
		ETLUIStatsValueType                                        Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBold;                                                   // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPcStatsType                                               PcStatsType;                                             // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EP6G[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                StatText;                                                // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MJUR[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                FormatText;                                              // 0x0028(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ValueText;                                               // 0x0040(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePolymorphEnchancedSkill
	 * Size -> 0x000C
	 */
	struct FTLSchemePolymorphEnchancedSkill
	{
	public:
		class FName                                                SkillComplexId;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              EnhancingLevel;                                          // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D6PO[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLPolymorphVeiledInfo
	 * Size -> 0x0038
	 */
	struct FTLPolymorphVeiledInfo
	{
	public:
		struct FSoftObjectPath                                     Portrait;                                                // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     HiveEntity;                                              // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ChangeSct;                                               // 0x0020(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePolymorphGrowUpScts
	 * Size -> 0x0060
	 */
	struct FTLSchemePolymorphGrowUpScts
	{
	public:
		struct FSoftObjectPath                                     LevelUpMaxSct;                                           // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LevelUpSct;                                              // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     StartLevelUpSct;                                         // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LevelUnchangedSct;                                       // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePolymorphCamouflageData
	 * Size -> 0x0040
	 */
	struct FTLSchemePolymorphCamouflageData
	{
	public:
		bool                                                       bShowCamouflageData;                                     // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAggressive;                                             // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZQKE[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UICamouflageName;                                        // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                UICamouflageTribeTitle;                                  // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                    UICamouflageNpcId;                                       // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ODJG[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePolymorph
	 * Size -> 0x04C8 (FullSize[0x04D8] - InheritedSize[0x0010])
	 */
	struct FTLSchemePolymorph : public FTLTableRowBase
	{
	public:
		unsigned char                                              UnknownData_D6IL[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UID;                                                     // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPolymorphGrade                                            Grade;                                                   // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RF43[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UINameText;                                              // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               PolymorphEffectID;                                       // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               PolymorphStatID;                                         // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               SummonGuardianStatID;                                    // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemePolymorphLevelSkillInfo>            SkillInfos;                                              // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		ETLPolymorphLayer                                          PolymorphLayer;                                          // 0x0078(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PRM0[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UHiveEntityData*                                     HiveEntityForMale;                                       // 0x0080(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     HiveEntityForFemale;                                     // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            ModelRatationOffset;                                     // 0x0090(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8LQR[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     UIListSlotPortraitForMale;                               // 0x00A0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UIListSlotPortraitForFemale;                             // 0x00B8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UISelectChangeSctForMale;                                // 0x00D0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UISelectChangeSctForFemale;                              // 0x00E8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           OverwriteHeadUIOffset;                                   // 0x0100(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLUIStatsValueInfo>                         UIStats;                                                 // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      CastingDurationSec;                                      // 0x0118(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DCQN[0x4];                                   // 0x011C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     CastingSct;                                              // 0x0120(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                StoryDescription;                                        // 0x0138(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FName                                                CustomizePresetID_Male;                                  // 0x0150(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CustomizePresetID_Female;                                // 0x0158(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CustomizeLooksTableID_Male;                              // 0x0160(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CustomizeLooksTableID_Female;                            // 0x0168(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StaySeconds;                                             // 0x0170(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FightingRadius;                                          // 0x0174(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InteractionRadius;                                       // 0x0178(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionRadiusRatio;                                    // 0x017C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionRadiusRatioMin;                                 // 0x0180(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Height;                                                  // 0x0184(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseMyPcCustomMovementCapsule;                           // 0x0188(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_672G[0x3];                                   // 0x0189(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MyPcCustomMovementCapsuleMaxSlopeAngle;                  // 0x018C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MyPcCustomMovementCapsuleRadius;                         // 0x0190(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MyPcCustomMovementCapsuleHalfHeight;                     // 0x0194(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MyPcCustomMovementCapsuleZOffset;                        // 0x0198(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            MyPcCustomMovementCapsuleRotation;                       // 0x019C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       WeaponShow;                                              // 0x01A8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLBodyType                                                BodyType;                                                // 0x01A9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZUNG[0x6];                                   // 0x01AA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               Species;                                                 // 0x01B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               CoverTribe;                                              // 0x01C0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		ECooldownGroup                                             MountCooldownGroup;                                      // 0x01D0(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2UHP[0x3];                                   // 0x01D1(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FName                                                MountId;                                                 // 0x01D4(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WW56[0x4];                                   // 0x01DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     MyPcTransformLevelSequencePath;                          // 0x01E0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EntryTransformsInfoServerXmlPath;                        // 0x01F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OtherPcTransformLevelSequencePath;                       // 0x0208(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MyPcRestoreLevelSequencePath;                            // 0x0220(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OtherPcRestoreLevelSequencePath;                         // 0x0238(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanJumpInWater;                                          // 0x0250(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanExistOnGround;                                        // 0x0251(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanMountHorse;                                           // 0x0252(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanInteraction;                                          // 0x0253(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanDispelByUser;                                         // 0x0254(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanTransformOtherPolymorph;                              // 0x0255(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanDispelDuringPolymorphScenario;                        // 0x0256(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLBodySize                                                BodySize;                                                // 0x0257(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanJumpInGliding;                                        // 0x0258(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IOS0[0x3];                                   // 0x0259(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                EventEffectDropStyleId;                                  // 0x025C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LargeObjectAvoidOverlapRadRatio;                         // 0x0264(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLSpecialPolymorphType                                    SpecialPolymorphType;                                    // 0x0268(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       MagicdollVisibility;                                     // 0x0269(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLPolymorphMainWeaponType                                 MainWeaponType;                                          // 0x026A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1UUI[0x5];                                   // 0x026B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    AcquireCollectionEXP;                                    // 0x0270(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SkillSet;                                                // 0x0278(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        AdditionalSkillSets;                                     // 0x0280(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemePolymorphEnchancedSkill>            EnhancedSkillComplexes;                                  // 0x0290(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        SkillCustoms;                                            // 0x02A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                SctConditionName;                                        // 0x02B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DeathSct;                                                // 0x02B8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlidingTurnTimeSec;                                      // 0x02D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlidingJumpHeight;                                       // 0x02D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GlidingJumpStamina;                                      // 0x02D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                GlidingJumpEffectID;                                     // 0x02DC(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q9HO[0x4];                                   // 0x02E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               HittedSlowTimeCoefficient;                               // 0x02E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		ETLMobiltyType                                             MobilityType;                                            // 0x02F8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLPolymorphCategory                                       Category;                                                // 0x02F9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLPolymorphPictogramType                                  PictogramType;                                           // 0x02FA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLPolymorphUICategory                                     UIPolymorphBookCategory;                                 // 0x02FB(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UISortPriority;                                          // 0x02FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowOnList;                                             // 0x0300(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUnveiled;                                               // 0x0301(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N99W[0x6];                                   // 0x0302(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLPolymorphVeiledInfo                              VeiledInfo;                                              // 0x0308(0x0038) Edit, NativeAccessSpecifierPublic
		struct FTLSchemePolymorphGrowUpScts                        GrowUpScts;                                              // 0x0340(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PolymorphSceneEnterAT;                                   // 0x03A0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     VowSceneReleaseAT;                                       // 0x03B8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MaxLevelGrowUpLevelSequencePathForMale;                  // 0x03D0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MaxLevelGrowUpLevelSequencePathForFemale;                // 0x03E8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     VowIconSpritePath;                                       // 0x0400(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CustomSceneId;                                           // 0x0418(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UserCameraSetName;                                       // 0x0420(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowRemainTimeMessage;                                   // 0x0428(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9TAK[0x7];                                   // 0x0429(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLSchemePolymorphCamouflageData                    CamouflageData;                                          // 0x0430(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0470(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MusicPath;                                               // 0x0488(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AudioTag;                                                // 0x04A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsePickingValue;                                        // 0x04A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JLG6[0x3];                                   // 0x04A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PickingHeight;                                           // 0x04AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickingRadius;                                           // 0x04B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickingZOffset;                                          // 0x04B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DCV4[0x20];                                  // 0x04B8(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollLevelSetting
	 * Size -> 0x00D8
	 */
	struct FTLMagicDollLevelSetting
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YOM3[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayName;                                             // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       Broadcast;                                               // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OOW4[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                PassiveID;                                               // 0x0024(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SpeciesPassiveID;                                        // 0x002C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HealSkillID;                                             // 0x0034(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_14LG[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               MagicDollStatID;                                         // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                MagicDollExtraMaterialChanceID;                          // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               GrowthResourceID;                                        // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     HiveEntity;                                              // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            ModelRatationOffset;                                     // 0x0070(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AY0B[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     UIListSlotPortrait;                                      // 0x0080(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UIDialogPortrait;                                        // 0x0098(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UISelectChangeSct;                                       // 0x00B0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLUIStatsValueInfo>                         ExtraMaterialChanceByCondition;                          // 0x00C8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLConditionWeight
	 * Size -> 0x0004
	 */
	struct FTLConditionWeight
	{
	public:
		float                                                      Weight;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollWeightDialogue
	 * Size -> 0x001C (FullSize[0x0020] - InheritedSize[0x0004])
	 */
	struct FTLMagicDollWeightDialogue : public FTLConditionWeight
	{
	public:
		unsigned char                                              UnknownData_IAI6[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               MagicDollDialogueEvent;                                  // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       IsAllowPlayDialogSCT;                                    // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QOMW[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollReaction
	 * Size -> 0x0030
	 */
	struct FTLMagicDollReaction
	{
	public:
		ETLMagicDollReactionType                                   Type;                                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AFYJ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   Priority;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SceneContiPath;                                          // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLMagicDollWeightDialogue>                  WeightDialogues;                                         // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollSearchFo
	 * Size -> 0x0048
	 */
	struct FTLMagicDollSearchFo
	{
	public:
		struct FSoftObjectPath                                     FoundFoSceneConti;                                       // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                FoundFoReaction;                                         // 0x0018(0x0030) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollConditionalSubstance
	 * Size -> 0x000C
	 */
	struct FTLMagicDollConditionalSubstance
	{
	public:
		ETLConditionTimeOfDay                                      TimeOfDay;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLConditionWeather                                        Weather;                                                 // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ECRH[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                substance;                                               // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLConditionComplex
	 * Size -> 0x0028
	 */
	struct FTLConditionComplex
	{
	public:
		ETLConditionTimeOfDay                                      TimeOfDay;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLConditionWeather                                        Weather;                                                 // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLConditionAlignment                                      Alignment;                                               // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLConditionAnyYesNo                                       IsCastleOwnerGuildMaster;                                // 0x0003(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEquipmentCheck;                                         // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLConditionEquipment                                      Equipment;                                               // 0x0005(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemGrade                                                 EquipmentInclusiveLowerItemGrade;                        // 0x0006(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemGrade                                                 EquipmentInclusiveUpperItemGrade;                        // 0x0007(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AttainedCodexCodeGuid;                                   // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FInt32Range                                         MyPcLevel;                                               // 0x0018(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollWeightReaction
	 * Size -> 0x0034 (FullSize[0x0038] - InheritedSize[0x0004])
	 */
	struct FTLMagicDollWeightReaction : public FTLConditionWeight
	{
	public:
		ETLMagicDollReactionType                                   Type;                                                    // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y832[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   Priority;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TYNQ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     SceneContiPath;                                          // 0x0010(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLMagicDollWeightDialogue>                  WeightDialogues;                                         // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollConditionalReaction
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	struct FTLMagicDollConditionalReaction : public FTLConditionComplex
	{
	public:
		TArray<struct FTLMagicDollWeightReaction>                  WeightReactions;                                         // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMagicDollGrowUpScts
	 * Size -> 0x0060
	 */
	struct FTLSchemeMagicDollGrowUpScts
	{
	public:
		struct FSoftObjectPath                                     LevelUpMaxSct;                                           // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LevelUpSct;                                              // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     StartLevelUpSct;                                         // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LevelUnchangedSct;                                       // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLRowMagicDoll
	 * Size -> 0x0A50 (FullSize[0x0A58] - InheritedSize[0x0008])
	 */
	struct FTLRowMagicDoll : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_NFBD[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UID;                                                     // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D7CX[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLMagicDollLevelSetting                            DefaultLevelSetting;                                     // 0x0018(0x00D8) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		EMagicDollGrade                                            Grade;                                                   // 0x00F0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSystemOnly;                                            // 0x00F1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpeciesGroup                                              SpeciesGroup;                                            // 0x00F2(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MQEP[0x5];                                   // 0x00F3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               Dialog;                                                  // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       HiveEntityIsNullable;                                    // 0x0108(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NCJZ[0x3];                                   // 0x0109(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InitialOpacity;                                          // 0x010C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreOwnerOpacity;                                     // 0x0110(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCollision;                                              // 0x0111(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RFVC[0x2];                                   // 0x0112(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Scale;                                                   // 0x0114(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLMagicDollZOffsetApply                                   ZOffsetApply;                                            // 0x0118(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QO62[0x3];                                   // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ZOffset;                                                 // 0x011C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0120(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Height;                                                  // 0x0124(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            SkipLoadingHiveDataOnMapEntered;                         // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            SkipEnteringWorldSCTOnMapEntered;                        // 0x0138(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            SkipLoadingDialogOnMapEntered;                           // 0x0148(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      DefaultMoveSpeed;                                        // 0x0158(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimumMoveSpeedForRunning;                              // 0x015C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpHeight;                                              // 0x0160(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6GN3[0x4];                                   // 0x0164(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat*                                         MoveSpeedByDistanceToOwner;                              // 0x0168(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         MoveSpeedByDistanceToTarget;                             // 0x0170(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         FlySpeedByDistanceToOwner;                               // 0x0178(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat*                                         SwimSpeedByDistanceToOwner;                              // 0x0180(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwimmingTurnSpeed;                                       // 0x0188(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlidingTurnSpeed;                                        // 0x018C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GroundDistanceFromOwner;                                 // 0x0190(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GroundPositionDegreeRelativeToOwnerDirection;            // 0x0194(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GroundDirectionDegreeRelativeToOwnerDirection;           // 0x0198(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AirDistanceFromOwner;                                    // 0x019C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AirPositionDegreeRelativeToOwnerDirection;               // 0x01A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SearchingDropItemRadius;                                 // 0x01A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SearchingDropItemHeight;                                 // 0x01A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DroppedItemPickableRadius;                               // 0x01AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DiggingNewItemInterval;                                  // 0x01B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JIAA[0x4];                                   // 0x01B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     DiggingNewItemSceneContiPath;                            // 0x01B8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DiggingNewItemSceneContiDurationSec;                     // 0x01D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceToDropItemPickingAtOnce;                         // 0x01D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RetryPickingDropItemIntervalSeconds;                     // 0x01D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ULV6[0x4];                                   // 0x01DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLMagicDollReaction>                        PickingUpDropItemReactions;                              // 0x01E0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      SearchingFoRadius;                                       // 0x01F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SearchingFoHeight;                                       // 0x01F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, struct FTLMagicDollSearchFo>             SearchFosByTag;                                          // 0x01F8(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       SearchingFoRowHandles;                                   // 0x0248(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      SearchingFoLeadingDistance;                              // 0x0258(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SearchingFieldBossRadius;                                // 0x025C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SearchingFieldBossHeight;                                // 0x0260(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SearchingFieldBossCatchingUpDistance;                    // 0x0264(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SearchingFieldBossLeadingDistance;                       // 0x0268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SearchingFieldBossWatchingDistance;                      // 0x026C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLMagicDollConditionalSubstance>            OwnerConditionalNormalSubstances;                        // 0x0270(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                ObjectTagName;                                           // 0x0280(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     InformResourceSceneConti;                                // 0x0288(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                InformResourceReaction;                                  // 0x02A0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     InformWarningFieldBossSceneConti;                        // 0x02D0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EnteringWorldSceneContiPath;                             // 0x02E8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSkipEnteringWorldSctOnCutScene;                         // 0x0300(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CFBW[0x7];                                   // 0x0301(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     LeavingWorldSceneContiPath;                              // 0x0308(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, struct FTLMagicDollReaction>             OwnerSubstanceReactions;                                 // 0x0320(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<ESnMovementMode, struct FTLMagicDollReaction>         OwnerMovementModeReactions;                              // 0x0370(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<class FName, struct FTLMagicDollReaction>             OwnerAbnormalReactions;                                  // 0x03C0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                OwnerResourceAquiringReaction;                           // 0x0410(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<EEnchantResultType, struct FTLMagicDollReaction>      OwnerEnchantResultReactions;                             // 0x0440(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                OwnerCraftingSuccessReaction;                            // 0x0490(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<ETLCraftingResultType, struct FTLMagicDollReaction>   OwnerCraftingSuccessReactions;                           // 0x04C0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<EItemGrade, struct FTLMagicDollReaction>              AcquiringDropItemReactions;                              // 0x0510(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                OwnerGivingCriticalHitReaction;                          // 0x0560(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                OwnerReceivingCriticalHitReaction;                       // 0x0590(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                OwnerDeathReaction;                                      // 0x05C0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FFloatRange                                         IdleReactionTriggerTimeRangeInSeconds;                   // 0x05F0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLMagicDollConditionalReaction>             SafetyZoneIdleReactions;                                 // 0x0600(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLMagicDollConditionalReaction>             CombatZoneIdleReactions;                                 // 0x0610(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                EnterRegionStoneReaction;                                // 0x0620(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                LeaveRegionStoneReaction;                                // 0x0650(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                EnterBossStoneReaction;                                  // 0x0680(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                LeaveBossStoneReaction;                                  // 0x06B0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                EnterSiegeWarfareReaction;                               // 0x06E0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                LeaveSiegeWarfareReaction;                               // 0x0710(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                WeatherNormalReaction;                                   // 0x0740(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                WeatherRainReaction;                                     // 0x0770(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                WeatherEclipseReaction;                                  // 0x07A0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMagicDollReaction                                MagicPocketNormalReaction;                               // 0x07D0(0x0030) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<ETLMagicPortalDistance, struct FTLMagicDollReaction>  MagicPortalAdvancedReaction;                             // 0x0800(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<ETLMagicDollEmotion, struct FTLMagicDollReaction>     MagicDollEmotions;                                       // 0x0850(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<ETLMagicDollEmotion, struct FTLMagicDollReaction>     OtherPcMagicDollEmotions;                                // 0x08A0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<class FName, struct FTLMagicDollReaction>             MagicDollSkillReactions;                                 // 0x08F0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              HeadUIUserWidgetClass[0x28];                             // 0x0940(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class FName                                                CustomSceneId;                                           // 0x0968(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLSchemeMagicDollGrowUpScts                        GrowUpScts;                                              // 0x0970(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MaxLevelGrowUpLevelSequencePath;                         // 0x09D0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UISortPriority;                                          // 0x09E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUnveiled;                                               // 0x09EC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A52E[0x3];                                   // 0x09ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLPolymorphVeiledInfo                              VeiledInfo;                                              // 0x09F0(0x0038) Edit, NativeAccessSpecifierPublic
		bool                                                       bHideFromList;                                           // 0x0A28(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowStateIcon;                                          // 0x0A29(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowSummonMessage;                                      // 0x0A2A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowDismissMessage;                                     // 0x0A2B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UKK2[0x4];                                   // 0x0A2C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Description;                                             // 0x0A30(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               VoiceActor;                                              // 0x0A48(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoItem
	 * Size -> 0x0220 (FullSize[0x0228] - InheritedSize[0x0008])
	 */
	struct FTLInfoItem : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_7DPG[0x9];                                   // 0x0008(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EBool                                                      auto_pick;                                               // 0x0011(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      can_lay_down;                                            // 0x0012(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      decomposable;                                            // 0x0013(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      destructable;                                            // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              equip_category;                                          // 0x0015(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      exchangeable;                                            // 0x0016(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      overwrite_exchangeable;                                  // 0x0017(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemGrade                                                 item_grade;                                              // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETradeCategory                                             trade_category;                                          // 0x0019(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TVWD[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                trade_price_group_id;                                    // 0x001C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                weapon_unique_skill_set_id;                              // 0x0024(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                use_skill;                                               // 0x002C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                polymorph_id;                                            // 0x0034(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                polymorph_group_id;                                      // 0x003C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                magicdoll_id;                                            // 0x0044(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    max_stack_count;                                         // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              misc_category;                                           // 0x0050(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMoneyType                                                 money_type;                                              // 0x0051(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PS7D[0x2];                                   // 0x0052(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    price_gold;                                              // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      quick_slot;                                              // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9BNZ[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    required_level;                                          // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      sellable;                                                // 0x0060(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              usable_category;                                         // 0x0061(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              key_category;                                            // 0x0062(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MA1Z[0x1];                                   // 0x0063(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    use_level;                                               // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Num;                                                     // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Weight;                                                  // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                package_id;                                              // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dumping_price;                                           // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      storable;                                                // 0x007C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      screen_message;                                          // 0x007D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      Broadcast;                                               // 0x007E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V276[0x1];                                   // 0x007F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                skill_complex_id;                                        // 0x0080(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              ammo_category;                                           // 0x0088(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9FFB[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                item_passive_id;                                         // 0x008C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    broken_prob;                                             // 0x0094(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InteractionHeight;                                       // 0x0098(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                group_id;                                                // 0x009C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                item_stat_id;                                            // 0x00A4(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                elixine_id;                                              // 0x00AC(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weapon_mastery_point;                                    // 0x00B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                decompose_item_id;                                       // 0x00B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    decompose_gold;                                          // 0x00C0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                decompose_enchantable;                                   // 0x00C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                decompose_non_enchantable;                               // 0x00D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      lockable;                                                // 0x00D8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JVRH[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    dungeon_point;                                           // 0x00E0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    polymorph_level;                                         // 0x00E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magicdoll_level;                                         // 0x00EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    decreasing_lifetime_even_if_logout;                      // 0x00F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    decreasing_lifetime_only_if_login;                       // 0x00F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                expiration_time;                                         // 0x00F8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                polymorph_link_id;                                       // 0x0100(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    polymorph_link_exp;                                      // 0x0108(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              ItemCategory;                                            // 0x010C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponCategory                                            WeaponCategory;                                          // 0x010D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8HRD[0x11A];                                 // 0x010E(0x011A) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoTutorialPlatformInfo
	 * Size -> 0x0070
	 */
	struct FTLInfoTutorialPlatformInfo
	{
	public:
		ETLUIPlatform                                              UIPlatform;                                              // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JFNL[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Title;                                                   // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Message;                                                 // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<class FText>                                        HeaderKeyGuide;                                          // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TutorialImage;                                           // 0x0048(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               HelpTableName;                                           // 0x0060(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLTutorialMessageInfo
	 * Size -> 0x0028
	 */
	struct FTLTutorialMessageInfo
	{
	public:
		int32_t                                                    Weight;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VX8F[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               StringSystemTableRow;                                    // 0x0008(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       HyperLinkRefList;                                        // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLTutorialSystemMessage
	 * Size -> 0x0018
	 */
	struct FTLTutorialSystemMessage
	{
	public:
		ETLUIPlatform                                              UIPlatform;                                              // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_67NA[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLTutorialMessageInfo>                      MessageInfo;                                             // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoTutorial
	 * Size -> 0x00C8 (FullSize[0x00D0] - InheritedSize[0x0008])
	 */
	struct FTLInfoTutorial : public FTableRowBase
	{
	public:
		class FName                                                RowName;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLInfoTutorialPlatformInfo>                 PlatformInfo;                                            // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsSaveNPServer;                                          // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MWNS[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ServerSaveIndex;                                         // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DisableLevel;                                            // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsStackTutorial;                                         // 0x002C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EHYX[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               SubTutorialName;                                         // 0x0030(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              ConditionBPClass[0x28];                                  // 0x0040(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		int32_t                                                    DelayMs;                                                 // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InactivateIntervalMs;                                    // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CooldownSec;                                             // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                WidgetKey;                                               // 0x0074(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CompleteWidgetKeyOnHide;                                 // 0x007C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETutorialActiveType                                        TutorialActiveType;                                      // 0x0084(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YMXS[0x3];                                   // 0x0085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               MagicDollDialogActivateEvent;                            // 0x0088(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               MagicDollDialogCompleteEvent;                            // 0x0098(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLTutorialSystemMessage>                    SystemMessageInfo;                                       // 0x00A8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                Sound;                                                   // 0x00B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LogName;                                                 // 0x00C0(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGuid
	 * Size -> 0x0008
	 */
	struct FTLJsonGuid
	{
	public:
		uint64_t                                                   Value;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct TLScheme.TLGuidTableRowHandle
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FTLGuidTableRowHandle : public FDataTableRowHandle
	{
	public:
		uint64_t                                                   Guid;                                                    // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonCodexCollectionPage
	 * Size -> 0x000C
	 */
	struct FTLJsonCodexCollectionPage
	{
	public:
		int32_t                                                    UID;                                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonCodexCollectionBook
	 * Size -> 0x0020
	 */
	struct FTLJsonCodexCollectionBook
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonCodexCollectionPage>                  codex_page;                                              // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonCodexCollection
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLJsonCodexCollection : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonCodexCollectionBook>                  codex_book;                                              // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractFixedReward
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLJsonContractFixedReward : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T7CP[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractReward
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLJsonContractReward : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    cost_diamond;                                            // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    alignment_point;                                         // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gold;                                                    // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    contract_coin;                                           // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    activity_point;                                          // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EAWM[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonContractFixedReward>                  FixedReward;                                             // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractRefreshCost
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLJsonContractRefreshCost : public FTableRowBase
	{
	public:
		int32_t                                                    refresh_count;                                           // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMoneyType                                                 money_type;                                              // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8USD[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    refresh_cost;                                            // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2GB0[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractRefresh
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonContractRefresh : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractRefreshCost>                  Cost;                                                    // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractGroup
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLJsonContractGroup : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLJsonContractGroupType                                   contract_group_type;                                     // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GC4G[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               refresh_cost_table_id;                                   // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    max_refresh_count;                                       // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       avaliable_refresh;                                       // 0x002C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       avaliable_stop;                                          // 0x002D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QMHG[0x2];                                   // 0x002E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractNpcTypeTask
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonContractNpcTypeTask : public FTableRowBase
	{
	public:
		class FName                                                npc_table_id;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         target_area;                                             // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         content_guid;                                            // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractFoTypeTask
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonContractFoTypeTask : public FTableRowBase
	{
	public:
		class FName                                                fo_table_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         target_area;                                             // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         content_guid;                                            // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractNpcRaceTask
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonContractNpcRaceTask : public FTableRowBase
	{
	public:
		class FName                                                npc_race_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         target_area;                                             // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         content_guid;                                            // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractNpcSpawnTask
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLJsonContractNpcSpawnTask : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         npc_guid;                                                // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         world_map_object_id;                                     // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         target_area;                                             // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         content_guid;                                            // 0x0020(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractFoSpawnTask
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLJsonContractFoSpawnTask : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         fo_guid;                                                 // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         world_map_object_id;                                     // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         target_area;                                             // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         content_guid;                                            // 0x0020(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonVector
	 * Size -> 0x0000 (FullSize[0x000C] - InheritedSize[0x000C])
	 */
	struct FTLJsonVector : public FVector
	{	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractObjectiveArea
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonContractObjectiveArea : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0010(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractObjecitve
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FTLJsonContractObjecitve : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    goal_count;                                              // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             WorldMapIconPosition;                                    // 0x0014(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractNpcTypeTask>                  contract_npc_type_task;                                  // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractFoTypeTask>                   contract_fo_type_task;                                   // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractNpcRaceTask>                  contract_npc_race_task;                                  // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractNpcSpawnTask>                 contract_npc_spawn_task;                                 // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractFoSpawnTask>                  contract_fo_spawn_task;                                  // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractObjectiveArea>                objective_area;                                          // 0x0070(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContract
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FTLJsonContract : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLJsonContractType                                        Type;                                                    // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLJsonContractGrade                                       Grade;                                                   // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WPXH[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               ui_table_id;                                             // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               reward_table_id;                                         // 0x0028(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         waypoint;                                                // 0x0038(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         codex_objective;                                         // 0x0040(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractObjecitve>                    contract_objective;                                      // 0x0048(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               Territory;                                               // 0x0058(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractWorldMapIcon
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLJsonContractWorldMapIcon : public FTableRowBase
	{
	public:
		struct FVector                                             position;                                                // 0x0008(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8ME1[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonDropPointReward
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLJsonDropPointReward : public FTableRowBase
	{
	public:
		class FString                                              Name;                                                    // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLRewardDistribution                                      reward_distribution;                                     // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EIJZ[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Exp;                                                     // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    alignment_point;                                         // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    activity_point;                                          // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonDungeonWaypointRelatedInfo
	 * Size -> 0x0010
	 */
	struct FTLJsonDungeonWaypointRelatedInfo
	{
	public:
		int32_t                                                    UID;                                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9Z39[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   fee;                                                     // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonDungeonWaypoint
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonDungeonWaypoint : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5RN0[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonDungeonWaypointRelatedInfo>           related_dungeon_waypoint;                                // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonPolygonShape
	 * Size -> 0x0030
	 */
	struct FTLJsonPolygonShape
	{
	public:
		struct FTLDataTableRowHandle                               VolumeMaterialTableId;                                   // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      Z;                                                       // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RelativeMinZ;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RelativeMaxZ;                                            // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_12II[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector2D>                                   Position2D;                                              // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonWorldBoss
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FTLJsonWorldBoss : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UiTableId;                                               // 0x0010(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLJsonPolygonShape                                 EventArea;                                               // 0x0020(0x0030) Edit, NativeAccessSpecifierPublic
		struct FTLJsonPolygonShape                                 WarningArea;                                             // 0x0050(0x0030) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonTaxDeliveryEvent
	 * Size -> 0x0098 (FullSize[0x00A0] - InheritedSize[0x0008])
	 */
	struct FTLJsonTaxDeliveryEvent : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UiTableId;                                               // 0x0010(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               RewardTableId;                                           // 0x0020(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLJsonPolygonShape                                 EventArea;                                               // 0x0030(0x0030) Edit, NativeAccessSpecifierPublic
		struct FTLJsonPolygonShape                                 WarningArea;                                             // 0x0060(0x0030) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 world_map_spawn_icon_group;                              // 0x0090(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventSide
	 * Size -> 0x0060
	 */
	struct FTLJsonEventSide
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                tribe;                                                   // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    max_member;                                              // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       death_penalty_protection;                                // 0x0034(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V82D[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonGuid>                                 event_waypoint;                                          // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                ranked_reward_id;                                        // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                effort_reward_id;                                        // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventScore
	 * Size -> 0x0020
	 */
	struct FTLJsonEventScore
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ranked_reward_id;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                effort_reward_id;                                        // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                dynamic_event_score_table_id;                            // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventEffect
	 * Size -> 0x0058
	 */
	struct FTLJsonEventEffect
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                effect;                                                  // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                event_effect;                                            // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    max_count;                                               // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dropped_event_effect_disappear_delay;                    // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dropped_event_effect_stack_min;                          // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dropped_event_effect_stack_max;                          // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pc_drop_event_effect_stack_min;                          // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pc_drop_event_effect_stack_max;                          // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       consequently_update_score;                               // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QIMJ[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventEffectWarehouse
	 * Size -> 0x0018
	 */
	struct FTLJsonEventEffectWarehouse
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                event_effect;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    max_limit;                                               // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8OJK[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventDefinition
	 * Size -> 0x00D0
	 */
	struct FTLJsonEventDefinition
	{
	public:
		class FName                                                client_object_table_id;                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         prepare_quest;                                           // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonEventSide                                    dynamic_event_default_side;                              // 0x0010(0x0060) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLJsonEventSide>                            dynamic_event_side;                                      // 0x0070(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLJsonEventScore                                   default_event_score;                                     // 0x0080(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonEventScore>                           event_score;                                             // 0x00A0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonEventEffect>                          event_effect;                                            // 0x00B0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonEventEffectWarehouse>                 event_effect_warehouse;                                  // 0x00C0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonVector2D
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FTLJsonVector2D : public FVector2D
	{	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventQuestLocationShape
	 * Size -> 0x0030
	 */
	struct FTLJsonEventQuestLocationShape
	{
	public:
		struct FTLJsonGuid                                         Shape;                                                   // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                volume_material_table_id;                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Z;                                                       // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      relative_min_z;                                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      relative_max_z;                                          // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OQU2[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonVector2D>                             pos2D;                                                   // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventSideQuestUi
	 * Size -> 0x0030
	 */
	struct FTLJsonEventSideQuestUi
	{
	public:
		struct FTLJsonVector                                       position;                                                // 0x0000(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GZ2K[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuid                                         prepare_step_begin;                                      // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         prepare_step_end;                                        // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         progress_step_begin;                                     // 0x0020(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         progress_step_end;                                       // 0x0028(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventSideQuestProperties
	 * Size -> 0x0038
	 */
	struct FTLJsonEventSideQuestProperties
	{
	public:
		struct FTLJsonGuid                                         side;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonEventSideQuestUi                             dynamic_event_side_quest_ui;                             // 0x0008(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventSensorObjectEffect
	 * Size -> 0x0010
	 */
	struct FTLJsonEventSensorObjectEffect
	{
	public:
		class FName                                                effect;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                effect_looks_table_name;                                 // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventSensorObjectProperties
	 * Size -> 0x0010
	 */
	struct FTLJsonEventSensorObjectProperties
	{
	public:
		TArray<struct FTLJsonEventSensorObjectEffect>              sensor_object_effect;                                    // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventProgressObjective
	 * Size -> 0x0008
	 */
	struct FTLJsonEventProgressObjective
	{
	public:
		struct FTLJsonGuid                                         objective;                                               // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventProgress
	 * Size -> 0x0010
	 */
	struct FTLJsonEventProgress
	{
	public:
		TArray<struct FTLJsonEventProgressObjective>               event_progress_objective;                                // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventGoalPoint
	 * Size -> 0x0008
	 */
	struct FTLJsonEventGoalPoint
	{
	public:
		struct FTLJsonGuid                                         objective;                                               // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventShowPoint
	 * Size -> 0x0008
	 */
	struct FTLJsonEventShowPoint
	{
	public:
		struct FTLJsonEventGoalPoint                               goal_point;                                              // 0x0000(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventSideQuestStepUi
	 * Size -> 0x0028
	 */
	struct FTLJsonEventSideQuestStepUi
	{
	public:
		struct FTLJsonGuid                                         event_target;                                            // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonEventProgress                                event_progress;                                          // 0x0010(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonEventShowPoint                               show_point;                                              // 0x0020(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventObjective
	 * Size -> 0x0010
	 */
	struct FTLJsonEventObjective
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    goal_point;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_014B[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventStep
	 * Size -> 0x0040
	 */
	struct FTLJsonEventStep
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonEventSideQuestStepUi                         dynamic_event_side_quest_step_ui;                        // 0x0008(0x0028) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLJsonEventObjective>                       objective;                                               // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapSectionPolygonShape
	 * Size -> 0x0028
	 */
	struct FTLJsonMapSectionPolygonShape
	{
	public:
		class FName                                                volume_material_table_id;                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Z;                                                       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      relative_min_z;                                          // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      relative_max_z;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V6XO[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonVector2D>                             pos2D;                                                   // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEventQuest
	 * Size -> 0x00A0
	 */
	struct FTLJsonEventQuest
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonEventQuestLocationShape                      quest_location_shape;                                    // 0x0008(0x0030) Edit, NativeAccessSpecifierPublic
		struct FTLJsonEventSideQuestProperties                     dynamic_event_side_quest_properties;                     // 0x0038(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLJsonEventSensorObjectProperties                  sensor_object_properties;                                // 0x0070(0x0010) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLJsonEventStep>                            step;                                                    // 0x0080(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapSectionPolygonShape>               warning_shape;                                           // 0x0090(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonInstanceMapGuideEventObjective
	 * Size -> 0x0020
	 */
	struct FTLJsonInstanceMapGuideEventObjective
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    goal_point;                                              // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OJ6D[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuid                                         ui_referencing_codex_objective;                          // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonInstanceMapGuideEventStep
	 * Size -> 0x0020
	 */
	struct FTLJsonInstanceMapGuideEventStep
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonInstanceMapGuideEventObjective>       objective;                                               // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonInstanceMapGuideEventUnit
	 * Size -> 0x0030
	 */
	struct FTLJsonInstanceMapGuideEventUnit
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonEventSensorObjectEffect>              sensor_object_effect;                                    // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonInstanceMapGuideEventStep>            step;                                                    // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonEvent
	 * Size -> 0x0120 (FullSize[0x0128] - InheritedSize[0x0008])
	 */
	struct FTLJsonEvent : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id_guild;                                       // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id_peace;                                       // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonEventDefinition                              dynamic_event_definition;                                // 0x0028(0x00D0) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLJsonEventQuest>                           quest;                                                   // 0x00F8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonInstanceMapGuideEventUnit>            unit;                                                    // 0x0108(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 world_map_spawn_icon_group;                              // 0x0118(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonDynamicEvent
	 * Size -> 0x0010
	 */
	struct FTLJsonDynamicEvent
	{
	public:
		TArray<struct FTLJsonEvent>                                dynamic_event;                                           // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonFieldBoss
	 * Size -> 0x0088 (FullSize[0x0090] - InheritedSize[0x0008])
	 */
	struct FTLJsonFieldBoss : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UiTableId;                                               // 0x0010(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       FieldBossList;                                           // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLJsonPolygonShape                                 EventArea;                                               // 0x0030(0x0030) Edit, NativeAccessSpecifierPublic
		struct FTLJsonPolygonShape                                 WarningArea;                                             // 0x0060(0x0030) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGrowthMissionObjective
	 * Size -> 0x0004
	 */
	struct FTLJsonGrowthMissionObjective
	{
	public:
		int32_t                                                    GoalCount;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGrowthMission
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLJsonGrowthMission : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardTableId;                                           // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UiTableId;                                               // 0x001C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GK2R[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonGrowthMissionObjective>               MissionObjective;                                        // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGrowthPassRewardItemInfo
	 * Size -> 0x000C
	 */
	struct FTLJsonGrowthPassRewardItemInfo
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGrowthPassRewardItem
	 * Size -> 0x0020
	 */
	struct FTLJsonGrowthPassRewardItem
	{
	public:
		int32_t                                                    Exp;                                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gold;                                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bm_coin;                                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EK6T[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonGrowthPassRewardItemInfo>             Item;                                                    // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonLevelMissionReward
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLJsonLevelMissionReward : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGrowthPassRewardItem>                 default_reward;                                          // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGrowthPassRewardItem>                 pass_reward;                                             // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGrowthMissionReward
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonGrowthMissionReward : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGrowthPassRewardItem>                 default_reward;                                          // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGuildContractGuildResourceReward
	 * Size -> 0x0018
	 */
	struct FTLJsonGuildContractGuildResourceReward
	{
	public:
		struct FTLDataTableRowHandle                               GuildResource;                                           // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    GuildResourceCount;                                      // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H8IO[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGuildContractGuildReward
	 * Size -> 0x0018
	 */
	struct FTLJsonGuildContractGuildReward
	{
	public:
		int32_t                                                    GuildExp;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EHPT[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonGuildContractGuildResourceReward>     GuildResourceRewardList;                                 // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGuildContractRewardItem
	 * Size -> 0x000C
	 */
	struct FTLJsonGuildContractRewardItem
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGuildContractPlayerReward
	 * Size -> 0x0028
	 */
	struct FTLJsonGuildContractPlayerReward
	{
	public:
		int32_t                                                    Exp;                                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gold;                                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    activity_point;                                          // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    guild_coin;                                              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    reputation_point;                                        // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    lost_and_found_coin;                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuildContractRewardItem>              ItemReward;                                              // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGuildContractSpecialReward
	 * Size -> 0x000C
	 */
	struct FTLJsonGuildContractSpecialReward
	{
	public:
		class FName                                                item_id;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGuildContractReward
	 * Size -> 0x0088 (FullSize[0x0090] - InheritedSize[0x0008])
	 */
	struct FTLJsonGuildContractReward : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IntervalPoint;                                           // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9VV0[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuildContractGuildReward                     GuildReward;                                             // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		struct FTLJsonGuildContractPlayerReward                    DefaultReward;                                           // 0x0030(0x0028) Edit, NativeAccessSpecifierPublic
		struct FTLJsonGuildContractSpecialReward                   SpecialReward;                                           // 0x0058(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N50L[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuildContractPlayerReward                    EffortReward;                                            // 0x0068(0x0028) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonContractSpeciesTask
	 * Size -> 0x0018
	 */
	struct FTLJsonContractSpeciesTask
	{
	public:
		class FName                                                species_id;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         target_area;                                             // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         content_guid;                                            // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGuildContractObjecitve
	 * Size -> 0x0080
	 */
	struct FTLJsonGuildContractObjecitve
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    goal_count;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QE3P[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonContractNpcTypeTask>                  contract_npc_type_task;                                  // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractFoTypeTask>                   contract_fo_type_task;                                   // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractNpcRaceTask>                  contract_npc_race_task;                                  // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractNpcSpawnTask>                 contract_npc_spawn_task;                                 // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractFoSpawnTask>                  contract_fo_spawn_task;                                  // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractSpeciesTask>                  contract_species_task;                                   // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonContractObjectiveArea>                objective_area;                                          // 0x0070(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGuildContract
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLJsonGuildContract : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGuildContractType                                         Type;                                                    // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J8AR[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               ui_table_id;                                             // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               reward_table_id;                                         // 0x0028(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuildContractObjecitve>               contract_objective;                                      // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonGuildContractGroup
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLJsonGuildContractGroup : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGuildContractType                                         contract_type;                                           // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LIO5[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    unlock_level;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ui_table_id;                                             // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               refresh_cost_table_id;                                   // 0x0028(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    max_refresh_count;                                       // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8X17[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapPolygonShape
	 * Size -> 0x0010
	 */
	struct FTLJsonMapPolygonShape
	{
	public:
		TArray<struct FTLJsonVector2D>                             pos2D;                                                   // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapLiner
	 * Size -> 0x0040
	 */
	struct FTLJsonMapLiner
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Duration;                                                // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GFPJ[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuid                                         destination_landmark_point_guid;                         // 0x0030(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                liner_table_id;                                          // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapLinerAtlis
	 * Size -> 0x0010
	 */
	struct FTLJsonMapLinerAtlis
	{
	public:
		TArray<struct FTLJsonMapLiner>                             liner;                                                   // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapTownTaxStorage
	 * Size -> 0x0010
	 */
	struct FTLJsonMapTownTaxStorage
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapStronghold
	 * Size -> 0x0040
	 */
	struct FTLJsonMapStronghold
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         fo_spawn;                                                // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0018(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Direction;                                               // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                fo_table_id;                                             // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 dependent_stronghold;                                    // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapPlunderPoint
	 * Size -> 0x0020
	 */
	struct FTLJsonMapPlunderPoint
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0008(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QVF7[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapSiegeWarfareResurrectionPoint
	 * Size -> 0x0020
	 */
	struct FTLJsonMapSiegeWarfareResurrectionPoint
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0008(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6OL2[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapOutpost
	 * Size -> 0x0020
	 */
	struct FTLJsonMapOutpost
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0008(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L6X9[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapPolymorphFo
	 * Size -> 0x0020
	 */
	struct FTLJsonMapPolymorphFo
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0008(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_961L[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapSiegeWarfare
	 * Size -> 0x00B8
	 */
	struct FTLJsonMapSiegeWarfare
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         siege_area_shape_guid;                                   // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         castle_owner_resurrection_point;                         // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapPlunderPoint>                      siege_warfare_throne;                                    // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapPlunderPoint>                      siege_warfare_plunder_point;                             // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapSiegeWarfareResurrectionPoint>     siege_warfare_resurrection_point;                        // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapOutpost>                           siege_warfare_outpost;                                   // 0x0048(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapPolymorphFo>                       siege_warfare_polymorph_fo;                              // 0x0058(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLJsonMapSectionPolygonShape                       siege_area_shape;                                        // 0x0068(0x0028) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapSectionPolygonShape                       warning_shape;                                           // 0x0090(0x0028) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapCastle
	 * Size -> 0x00F0
	 */
	struct FTLJsonMapCastle
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    guild_point;                                             // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_USQK[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonMapTownTaxStorage>                    town_tax_storage;                                        // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapStronghold>                        stronghold;                                              // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLJsonMapSiegeWarfare                              siege_warfare;                                           // 0x0038(0x00B8) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapRegionStone
	 * Size -> 0x00A8
	 */
	struct FTLJsonMapRegionStone
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         territory_guid;                                          // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         effect_table_id;                                         // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         territory_effect_table_id;                               // 0x0020(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         related_waypoint_guid;                                   // 0x0028(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    guild_point;                                             // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UXH1[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuid                                         fo_guid;                                                 // 0x0038(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0040(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x004C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NCSQ[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonMapSectionPolygonShape                       warfare_area;                                            // 0x0058(0x0028) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapSectionPolygonShape                       warning_area;                                            // 0x0080(0x0028) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapBossStone
	 * Size -> 0x00D0
	 */
	struct FTLJsonMapBossStone
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         territory_guid;                                          // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         effect_table_id;                                         // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    max_point;                                               // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZQM0[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuid                                         related_waypoint_guid;                                   // 0x0028(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    guild_point;                                             // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XYN4[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuid                                         fo_guid;                                                 // 0x0038(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0040(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x004C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ASUA[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonMapSectionPolygonShape                       warfare_area;                                            // 0x0058(0x0028) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapSectionPolygonShape                       warning_area;                                            // 0x0080(0x0028) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapSectionPolygonShape                       usurping_area;                                           // 0x00A8(0x0028) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapServerFo
	 * Size -> 0x0020
	 */
	struct FTLJsonMapServerFo
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0008(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2KIN[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapBossStoneWarfare
	 * Size -> 0x0030
	 */
	struct FTLJsonMapBossStoneWarfare
	{
	public:
		struct FTLJsonGuid                                         boss_stone_guid;                                         // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonMapServerFo                                  leave_fo;                                                // 0x0010(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapDungeonWayPoint
	 * Size -> 0x0030
	 */
	struct FTLJsonMapDungeonWayPoint
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dungeon_waypoint_uid;                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GCXN[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuid                                         region_group_guid;                                       // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0018(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Direction;                                               // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapNpcSpawn
	 * Size -> 0x0020
	 */
	struct FTLJsonMapNpcSpawn
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0010(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       world_map_icon;                                          // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FYYT[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapFoSpawn
	 * Size -> 0x0020
	 */
	struct FTLJsonMapFoSpawn
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0010(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LNBK[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapHiveFoSpawn
	 * Size -> 0x0028
	 */
	struct FTLJsonMapHiveFoSpawn
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         actor_guid;                                              // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0018(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LVWE[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapWaypoint
	 * Size -> 0x0030
	 */
	struct FTLJsonMapWaypoint
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0010(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Direction;                                               // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    base_price;                                              // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapGuildRaid
	 * Size -> 0x0028
	 */
	struct FTLJsonMapGuildRaid
	{
	public:
		struct FTLJsonGuid                                         GuildRaidGateFoGuid;                                     // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               GuildRaidGateFo;                                         // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             GuildRaidGateFoPosition;                                 // 0x0018(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EGRN[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapZoneArtifact
	 * Size -> 0x00F8
	 */
	struct FTLJsonMapZoneArtifact
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                manor_name;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QDGN[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuid                                         climate;                                                 // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         tax_castle;                                              // 0x0020(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonMapSectionPolygonShape                       polygon_shape;                                           // 0x0030(0x0028) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapCastle>                            castle;                                                  // 0x0058(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapRegionStone>                       region_stone;                                            // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapBossStone>                         boss_stone;                                              // 0x0078(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapBossStoneWarfare>                  boss_stone_warfare;                                      // 0x0088(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapDungeonWayPoint>                   dungeon_waypoint_fo;                                     // 0x0098(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapNpcSpawn>                          npc_spawn;                                               // 0x00A8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapFoSpawn>                           fo_spawn;                                                // 0x00B8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapHiveFoSpawn>                       map_hive_fo_spawn;                                       // 0x00C8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapWaypoint>                          waypoint;                                                // 0x00D8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapGuildRaid>                         GuildRaidFoList;                                         // 0x00E8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapZoneAtlas
	 * Size -> 0x0010
	 */
	struct FTLJsonMapZoneAtlas
	{
	public:
		TArray<struct FTLJsonMapZoneArtifact>                      zone_artifact;                                           // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapRegion
	 * Size -> 0x0040
	 */
	struct FTLJsonMapRegion
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                region_name;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLJsonMapRegionType                                       Type;                                                    // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_443J[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Priority;                                                // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonMapSectionPolygonShape                       polygon_shape;                                           // 0x0018(0x0028) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapRegionAtlas
	 * Size -> 0x0010
	 */
	struct FTLJsonMapRegionAtlas
	{
	public:
		TArray<struct FTLJsonMapRegion>                            Region;                                                  // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapClimate
	 * Size -> 0x0038
	 */
	struct FTLJsonMapClimate
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                weather_name;                                            // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                wind_name;                                               // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              weather_env_hive_entity;                                 // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapWeatherAtlas
	 * Size -> 0x0010
	 */
	struct FTLJsonMapWeatherAtlas
	{
	public:
		TArray<struct FTLJsonMapClimate>                           climate;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapFishingShape
	 * Size -> 0x0028
	 */
	struct FTLJsonMapFishingShape
	{
	public:
		class FName                                                volume_material_table_id;                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Z;                                                       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      relative_min_z;                                          // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      relative_max_z;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2MSB[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonVector2D>                             pos2D;                                                   // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapWaterTopography
	 * Size -> 0x0030
	 */
	struct FTLJsonMapWaterTopography
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              water_env_hive_entity;                                   // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMapFishingShape>                      FishingShapeList;                                        // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapTopographyAtlas
	 * Size -> 0x0010
	 */
	struct FTLJsonMapTopographyAtlas
	{
	public:
		TArray<struct FTLJsonMapWaterTopography>                   water_topography;                                        // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapResurrectionPoint
	 * Size -> 0x0020
	 */
	struct FTLJsonMapResurrectionPoint
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLJsonMapResurrectionPointType                            Type;                                                    // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X2XY[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ui_table_id;                                             // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0014(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapResurrectionPointAtlas
	 * Size -> 0x0010
	 */
	struct FTLJsonMapResurrectionPointAtlas
	{
	public:
		TArray<struct FTLJsonMapResurrectionPoint>                 resurrection_point;                                      // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapSiegeWarfareResurrectionPointAtlas
	 * Size -> 0x0010
	 */
	struct FTLJsonMapSiegeWarfareResurrectionPointAtlas
	{
	public:
		TArray<struct FTLJsonMapSiegeWarfareResurrectionPoint>     siege_warfare_resurrection_point;                        // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapPlunderPointAtlas
	 * Size -> 0x0010
	 */
	struct FTLJsonMapPlunderPointAtlas
	{
	public:
		TArray<struct FTLJsonMapPlunderPoint>                      plunder_point;                                           // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapOutpostAtlas
	 * Size -> 0x0010
	 */
	struct FTLJsonMapOutpostAtlas
	{
	public:
		TArray<struct FTLJsonMapOutpost>                           outpost;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapPolymorphFoAtlas
	 * Size -> 0x0010
	 */
	struct FTLJsonMapPolymorphFoAtlas
	{
	public:
		TArray<struct FTLJsonMapPolymorphFo>                       polymorph_fo;                                            // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapCircleShape
	 * Size -> 0x0018
	 */
	struct FTLJsonMapCircleShape
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0008(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapGuildFlag
	 * Size -> 0x0040
	 */
	struct FTLJsonMapGuildFlag
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0008(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x001C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3XY5[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonMapCircleShape                               circle_shape;                                            // 0x0028(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapGuildFlagAtlas
	 * Size -> 0x0010
	 */
	struct FTLJsonMapGuildFlagAtlas
	{
	public:
		TArray<struct FTLJsonMapGuildFlag>                         guild_flag;                                              // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapEventWaypointAtlas
	 * Size -> 0x0010
	 */
	struct FTLJsonMapEventWaypointAtlas
	{
	public:
		TArray<struct FTLJsonMapWaypoint>                          event_waypoint;                                          // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapViewpoint
	 * Size -> 0x0030
	 */
	struct FTLJsonMapViewpoint
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         fo;                                                      // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                cutscene_table_id;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                map_icon_table_id;                                       // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0020(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SGMT[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapViewpointAtlas
	 * Size -> 0x0010
	 */
	struct FTLJsonMapViewpointAtlas
	{
	public:
		TArray<struct FTLJsonMapViewpoint>                         view_point;                                              // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapSPolygonAnchor
	 * Size -> 0x0008
	 */
	struct FTLJsonMapSPolygonAnchor
	{
	public:
		struct FTLJsonVector2D                                     pos2D;                                                   // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapRestrictAreaShape
	 * Size -> 0x0020
	 */
	struct FTLJsonMapRestrictAreaShape
	{
	public:
		float                                                      Z;                                                       // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      relative_min_z;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      relative_max_z;                                          // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0DH7[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonMapSPolygonAnchor>                    polygon_anchor;                                          // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapRestrictArea
	 * Size -> 0x0030
	 */
	struct FTLJsonMapRestrictArea
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonMapRestrictAreaShape                         polygon_shape;                                           // 0x0010(0x0020) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapRestrictAtlas
	 * Size -> 0x0010
	 */
	struct FTLJsonMapRestrictAtlas
	{
	public:
		TArray<struct FTLJsonMapRestrictArea>                      restricted_area;                                         // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMap
	 * Size -> 0x0110 (FullSize[0x0118] - InheritedSize[0x0008])
	 */
	struct FTLJsonMap : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UID;                                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0U3J[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuid                                         contents_or_dungeon_definition;                          // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLJsonMapResurrectionType                                 resurrection_type;                                       // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       can_make_party;                                          // 0x0021(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ITHF[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonMapPolygonShape                              polygon_shape;                                           // 0x0028(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapLinerAtlis                                liner_atlas;                                             // 0x0038(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapZoneAtlas                                 zone_atlas;                                              // 0x0048(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapRegionAtlas                               region_atlas;                                            // 0x0058(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapWeatherAtlas                              weather_atlas;                                           // 0x0068(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapTopographyAtlas                           topography_atlas;                                        // 0x0078(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapResurrectionPointAtlas                    resurrection_point_atlas;                                // 0x0088(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapSiegeWarfareResurrectionPointAtlas        siege_warfare_resurrection_point_atlas;                  // 0x0098(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapPlunderPointAtlas                         plunder_point_atlas;                                     // 0x00A8(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapOutpostAtlas                              outpost_atlas;                                           // 0x00B8(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapPolymorphFoAtlas                          polymorph_fo_atlas;                                      // 0x00C8(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapGuildFlagAtlas                            guild_flag_atlas;                                        // 0x00D8(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapEventWaypointAtlas                        event_waypoint_atlas;                                    // 0x00E8(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapViewpointAtlas                            view_point_atlas;                                        // 0x00F8(0x0010) Edit, NativeAccessSpecifierPublic
		struct FTLJsonMapRestrictAtlas                             restricted_area_folder;                                  // 0x0108(0x0010) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMapRoot
	 * Size -> 0x0010
	 */
	struct FTLJsonMapRoot
	{
	public:
		TArray<struct FTLJsonMap>                                  Map;                                                     // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMMemorialRewardItem
	 * Size -> 0x000C
	 */
	struct FTLJsonMMemorialRewardItem
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMRewardMemorialAchieve
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonMRewardMemorialAchieve : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMMemorialRewardItem>                  Item;                                                    // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMRewardMemorialRanking
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonMRewardMemorialRanking : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMMemorialRewardItem>                  Item;                                                    // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMemorialRankingRewardStep
	 * Size -> 0x0010
	 */
	struct FTLJsonMemorialRankingRewardStep
	{
	public:
		class FName                                                reward_id;                                               // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    min_rank;                                                // 0x0008(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    max_rank;                                                // 0x000C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMemorialRankingRewardGroup
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonMemorialRankingRewardGroup : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMemorialRankingRewardStep>            step;                                                    // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMemorialRecord
	 * Size -> 0x0040
	 */
	struct FTLJsonMemorialRecord
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLMemorialRecordType                                      record_type;                                             // 0x0008(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLMemorialRankingType                                     ranking_type;                                            // 0x0009(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       timeout_type;                                            // 0x000A(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HJY3[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    goal_count;                                              // 0x000C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    goal_rank;                                               // 0x0010(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_76GJ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int64_t>                                            goal_count_list;                                         // 0x0018(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0028(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                achieve_reward_table_id;                                 // 0x0030(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ranking_reward_group_table_id;                           // 0x0038(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonMemorialChapter
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLJsonMemorialChapter : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                string_ui_table_id;                                      // 0x0010(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonMemorialRecord>                       memorial_record;                                         // 0x0018(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLPCInvenItemInitInfo
	 * Size -> 0x0008
	 */
	struct FTLPCInvenItemInitInfo
	{
	public:
		int32_t                                                    Num;                                                     // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemePCInitInfo
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLJsonSchemePCInitInfo : public FTableRowBase
	{
	public:
		class FString                                              Name;                                                    // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    main_hand;                                               // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    off_hand;                                                // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    head;                                                    // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    back;                                                    // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    chest;                                                   // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    legs;                                                    // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hands;                                                   // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    feet;                                                    // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLPCInvenItemInitInfo                              inven_item1;                                             // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTLPCInvenItemInitInfo                              inven_item2;                                             // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTLPCInvenItemInitInfo                              inven_item3;                                             // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonDynamicEventGuildRankedRewardItem
	 * Size -> 0x000C
	 */
	struct FTLJsonDynamicEventGuildRankedRewardItem
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonDynamicEventGuildRankedReward
	 * Size -> 0x0020
	 */
	struct FTLJsonDynamicEventGuildRankedReward
	{
	public:
		ETLJsonGuildRankedRewardGroup                              reward_type;                                             // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9X8Q[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    max_guild_count;                                         // 0x0004(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    guild_reward_box_point;                                  // 0x0008(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UBE4[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonDynamicEventGuildRankedRewardItem>    Item;                                                    // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemeDynamicEventGuildRankedReward
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonSchemeDynamicEventGuildRankedReward : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonDynamicEventGuildRankedReward>        Group;                                                   // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonDynamicEventRankedRewardItem
	 * Size -> 0x000C
	 */
	struct FTLJsonDynamicEventRankedRewardItem
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonDynamicEventRankedReward
	 * Size -> 0x0030
	 */
	struct FTLJsonDynamicEventRankedReward
	{
	public:
		ETLJsonRankedRewardGroup                                   reward_type;                                             // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2UPC[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    gold;                                                    // 0x0004(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                package_category_id;                                     // 0x000C(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HF77[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonDynamicEventRankedRewardItem>         Item;                                                    // 0x0018(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		int32_t                                                    max_user_count;                                          // 0x0028(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    activity_point;                                          // 0x002C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemeDynamicEventRankedReward
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonSchemeDynamicEventRankedReward : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonDynamicEventRankedReward>             Group;                                                   // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemeItemContract
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonSchemeItemContract : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        ItemIds;                                                 // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemDropItem
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLItemDropItem : public FTableRowBase
	{
	public:
		class FName                                                ItemId;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quantity;                                                // 0x0010(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnchantLevel;                                            // 0x0014(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RSF2[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemeItemDropItems
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLJsonSchemeItemDropItems : public FTableRowBase
	{
	public:
		TArray<struct FTLItemDropItem>                             Item;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemeItemDrop
	 * Size -> 0x00B8 (FullSize[0x00C0] - InheritedSize[0x0008])
	 */
	struct FTLJsonSchemeItemDrop : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        ItemIds;                                                 // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		TArray<class FName>                                        DungeonPointItemIds;                                     // 0x0020(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		struct FTLJsonSchemeItemDropItems                          NormalDropItems;                                         // 0x0030(0x0018) Edit, EditConst, NativeAccessSpecifierPublic
		struct FTLJsonSchemeItemDropItems                          RainDropItems;                                           // 0x0048(0x0018) Edit, EditConst, NativeAccessSpecifierPublic
		struct FTLJsonSchemeItemDropItems                          SnowDropItems;                                           // 0x0060(0x0018) Edit, EditConst, NativeAccessSpecifierPublic
		struct FTLJsonSchemeItemDropItems                          NightDropItems;                                          // 0x0078(0x0018) Edit, EditConst, NativeAccessSpecifierPublic
		struct FTLJsonSchemeItemDropItems                          SectorDropItems;                                         // 0x0090(0x0018) Edit, EditConst, NativeAccessSpecifierPublic
		struct FTLJsonSchemeItemDropItems                          DungeonPointDropItems;                                   // 0x00A8(0x0018) Edit, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemeItemShopSelling
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLJsonSchemeItemShopSelling : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       is_guild_shop;                                           // 0x0010(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6F32[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        ItemIds;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemeStage
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonSchemeStage : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        NpcIdList;                                               // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSeasonPassTaskStep
	 * Size -> 0x0008
	 */
	struct FTLJsonSeasonPassTaskStep
	{
	public:
		int32_t                                                    goal_count;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    reward_pass_point;                                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSeasonPassTask
	 * Size -> 0x0020
	 */
	struct FTLJsonSeasonPassTask
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonSeasonPassTaskStep>                   pass_task_step;                                          // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSeasonPassTaskGroup
	 * Size -> 0x0020
	 */
	struct FTLJsonSeasonPassTaskGroup
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonSeasonPassTask>                       pass_task;                                               // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSeasonPassRandomDailiyTaskPool
	 * Size -> 0x0028
	 */
	struct FTLJsonSeasonPassRandomDailiyTaskPool
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    daily_random_pick_count;                                 // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W5I1[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonSeasonPassTask>                       pass_task;                                               // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSeasonPass
	 * Size -> 0x00B8 (FullSize[0x00C0] - InheritedSize[0x0008])
	 */
	struct FTLJsonSeasonPass : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ui_table_id;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                pass_reward_id;                                          // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    free_pass_period_days;                                   // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ticket_pass_period_days;                                 // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    purchasable_point_unit;                                  // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    point_unit_price;                                        // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMoneyType                                                 point_purchasing_money_type;                             // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LHUV[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    max_purchasable_point;                                   // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    season_point_ticket_multiplication;                      // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    week_task_pass_ticket_multiplication;                    // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    day_task_pass_ticket_multiplication;                     // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UPYF[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonSeasonPassTaskGroup                          season_task_group;                                       // 0x0048(0x0020) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLJsonSeasonPassTaskGroup>                  weekly_task_group;                                       // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLJsonSeasonPassTaskGroup                          fix_daily_task_group;                                    // 0x0078(0x0020) Edit, NativeAccessSpecifierPublic
		struct FTLJsonSeasonPassRandomDailiyTaskPool               random_daily_task_pool;                                  // 0x0098(0x0028) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSeasonPassRewardItem
	 * Size -> 0x0010
	 */
	struct FTLJsonSeasonPassRewardItem
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      is_display_item;                                         // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DSCH[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSeasonPassLevelInfo
	 * Size -> 0x0028
	 */
	struct FTLJsonSeasonPassLevelInfo
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pass_level_point_threshold;                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonSeasonPassRewardItem>                 pass_default_reward_item;                                // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonSeasonPassRewardItem>                 pass_ticket_reward_item;                                 // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSeasonPassLevelReward
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonSeasonPassLevelReward : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonSeasonPassLevelInfo>                  PassLevel;                                               // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSeasonPassReward
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLJsonSeasonPassReward : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                level_table_id;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pass_extra_reward_cost_point;                            // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_49R1[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonSeasonPassRewardItem>                 pass_extra_reward_item;                                  // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonTerritoryRegionGroup
	 * Size -> 0x00D0
	 */
	struct FTLJsonTerritoryRegionGroup
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         related_resurrection_point;                              // 0x0010(0x0008) Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         related_return_point;                                    // 0x0018(0x0008) Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 territory_region;                                        // 0x0020(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 territory_stage;                                         // 0x0030(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		TArray<class FName>                                        territory_npc;                                           // 0x0040(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 territory_npc_spawn;                                     // 0x0050(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 region_group_dynamic_event;                              // 0x0060(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 region_group_tax_delivery;                               // 0x0070(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 region_group_world_boss;                                 // 0x0080(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 region_group_field_boss;                                 // 0x0090(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 region_group_siege_warfare;                              // 0x00A0(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 region_group_region_stone;                               // 0x00B0(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 region_group_boss_stone;                                 // 0x00C0(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonTerritory
	 * Size -> 0x0048
	 */
	struct FTLJsonTerritory
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0018(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         related_resurrection_point;                              // 0x0020(0x0008) Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         related_return_point;                                    // 0x0028(0x0008) Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLJsonTerrirtoryAbyssType                                 abyss_point;                                             // 0x0030(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PGNH[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonTerritoryRegionGroup>                 region_group;                                            // 0x0038(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonTerritoryZone
	 * Size -> 0x0020
	 */
	struct FTLJsonTerritoryZone
	{
	public:
		struct FTLJsonGuid                                         zone;                                                    // 0x0000(0x0008) Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                table_id;                                                // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonTerritory>                            Territory;                                               // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemeTerritory
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonSchemeTerritory : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Map;                                                     // 0x0008(0x0008) Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonTerritoryZone>                        territory_zone;                                          // 0x0010(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonTerritoryRegion
	 * Size -> 0x0008
	 */
	struct FTLJsonTerritoryRegion
	{
	public:
		struct FTLJsonGuid                                         Region;                                                  // 0x0000(0x0008) Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemLotteryUnitEntry
	 * Size -> 0x0010
	 */
	struct FTLItemLotteryUnitEntry
	{
	public:
		class FName                                                Item;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quantity;                                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    prob;                                                    // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonItemLotteryUnitEntry
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonItemLotteryUnitEntry : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLItemLotteryUnitEntry>                     ItemLotteryUnitEntry;                                    // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemLotteryGroupEntry
	 * Size -> 0x0010
	 */
	struct FTLItemLotteryGroupEntry
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    prob;                                                    // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonItemLotteryPrivateGroupEntry
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonItemLotteryPrivateGroupEntry : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLItemLotteryGroupEntry>                    ItemLotteryPrivateGroupEntry;                            // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonItemDecompNonEnchant
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLJsonItemDecompNonEnchant : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Result;                                                  // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonItemDecompEnchant
	 * Size -> 0x00C0 (FullSize[0x00C8] - InheritedSize[0x0008])
	 */
	struct FTLJsonItemDecompEnchant : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_00;                                        // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_01;                                        // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_02;                                        // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_03;                                        // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_04;                                        // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_05;                                        // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_06;                                        // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_07;                                        // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_08;                                        // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_09;                                        // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_11;                                        // 0x0060(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_12;                                        // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_13;                                        // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_14;                                        // 0x0078(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_15;                                        // 0x0080(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_16;                                        // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_17;                                        // 0x0090(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_18;                                        // 0x0098(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_19;                                        // 0x00A0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_20;                                        // 0x00A8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_level_21;                                        // 0x00B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AOX9[0x10];                                  // 0x00B8(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLJsonWaypointProgressiveBilling
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLJsonWaypointProgressiveBilling : public FTableRowBase
	{
	public:
		int32_t                                                    Name;                                                    // 0x0008(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    max_distance;                                            // 0x000C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    unit_distance;                                           // 0x0010(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    unit_cost;                                               // 0x0014(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoAbnormalContentsGroup
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FTLInfoAbnormalContentsGroup : public FTableRowBase
	{	};

	/**
	 * ScriptStruct TLScheme.TLInfoAbnormalLooksGroup
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLInfoAbnormalLooksGroup : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_0GP7[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLDataTableRowHandle>                       LooksRowList;                                            // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoAbnormal
	 * Size -> 0x0058 (FullSize[0x0068] - InheritedSize[0x0010])
	 */
	struct FTLInfoAbnormal : public FTLTableRowBase
	{
	public:
		unsigned char                                              UnknownData_6HFT[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EModifyGroup                                               ModifyGroup;                                             // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDurationModifyGroup                                       DurationModifyGroup;                                     // 0x0019(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2D09[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EAbnormalDispelTag>                                 DispelTag;                                               // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		uint32_t                                                   StackCap;                                                // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAbnormalGoodOrBad                                         GoodOrBad;                                               // 0x0034(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      CombatAlert;                                             // 0x0035(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      DisableSkillMelee;                                       // 0x0036(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      DisableSkillRange;                                       // 0x0037(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      DisableSkillMagic;                                       // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DisableAuraSkill;                                        // 0x0039(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      DisableMovement;                                         // 0x003A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      DisableJump;                                             // 0x003B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      DisableEquip;                                            // 0x003C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      DisableInteraction;                                      // 0x003D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DisableInteractionMe;                                    // 0x003E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      DisablePickUpItem;                                       // 0x003F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      DisableUseItem;                                          // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      Stealth;                                                 // 0x0041(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      PreventDetectionByObject;                                // 0x0042(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      GMMode;                                                  // 0x0043(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      DisableRun;                                              // 0x0044(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DisableTurnDir;                                          // 0x0045(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableMount;                                             // 0x0046(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HideHpGauge;                                             // 0x0047(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ForceUseAutoPotion;                                      // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      PreventForcedMovement;                                   // 0x0049(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      PreventNpcSectorHitted;                                  // 0x004A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      PreventHarmfulSkillBetweenPC;                            // 0x004B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      PreventTargeting;                                        // 0x004C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PreventChangeTargeting;                                  // 0x004D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PreventConsumeSkillCost;                                 // 0x004E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PreventFromOtherBeneficialSkillEffect;                   // 0x004F(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESkillElementType                                          Element;                                                 // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLCollisionDisableType                                    CollisionDisableType;                                    // 0x0051(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      BlockAllPenetrationSkill;                                // 0x0052(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y2KX[0x1];                                   // 0x0053(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       ShowParty;                                               // 0x0054(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      DisableMobilityPolymorph;                                // 0x0055(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      ExcludeFromTargetGathering;                              // 0x0056(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ForceOpponentPcTargetingSkill;                           // 0x0057(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      DisablePcInputMovement;                                  // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BA4I[0xF];                                   // 0x0059(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoAbnormalLooks
	 * Size -> 0x0140 (FullSize[0x0148] - InheritedSize[0x0008])
	 */
	struct FTLInfoAbnormalLooks : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_H3HY[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIName;                                                  // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                UIDescription;                                           // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     IconPath;                                                // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowOverlapCount;                                        // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowExpireTime;                                          // 0x0059(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowExpireAnimation;                                     // 0x005A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowSelf;                                                // 0x005B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowTargetUI;                                            // 0x005C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowCasterAndPartyOnly;                                  // 0x005D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HideAllUI;                                               // 0x005E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JR23[0x1];                                   // 0x005F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UISortPriority;                                          // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBlockInput;                                             // 0x0064(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PreventFromNormalTargetingMe;                            // 0x0065(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PreventFromFriendlyTargetingMe;                          // 0x0066(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T4WU[0x1];                                   // 0x0067(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     Sct;                                                     // 0x0068(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ForceFeedbackPath;                                       // 0x0080(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLAbnormalSctShowOption                                   SctShowOption;                                           // 0x0098(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_49TK[0x3];                                   // 0x0099(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SctShowOptionSpecies;                                    // 0x009C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpeciesGroup                                              SctShowOptionSpeciesGroup;                               // 0x00A4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DMDV[0x3];                                   // 0x00A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     SctForCombatSubStance;                                   // 0x00A8(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SctPriority;                                             // 0x00C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLAbnormalSctCategory                                     SctCategory;                                             // 0x00C4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C4ZX[0x3];                                   // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                substance;                                               // 0x00C8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SkillSctCondition;                                       // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHpAbnormalStatus                                          HpAbnormalStatus;                                        // 0x00D8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSystemBuff;                                             // 0x00D9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PreventScan;                                             // 0x00DA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideInCamouflage;                                       // 0x00DB(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemainAbnormalSctWhenDie;                               // 0x00DC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4URN[0x3];                                   // 0x00DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               UserCameraPreset;                                        // 0x00E0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6RGK[0x8];                                   // 0x00F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ETLSkillOptionRank, class FText>                      RankDescription;                                         // 0x00F8(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeAchievement
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLSchemeAchievement : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DebugName;                                               // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0020(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Type;                                                    // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UiTableId;                                               // 0x0040(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeAchievementLooks
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeAchievementLooks : public FTableRowBase
	{
	public:
		class FText                                                TitleText;                                               // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeAchievementMapping
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLSchemeAchievementMapping : public FTableRowBase
	{
	public:
		class FText                                                TitleText;                                               // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                HintText;                                                // 0x0020(0x0018) Edit, NativeAccessSpecifierPublic
		class FString                                              UniqueId;                                                // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGuidTableRowHandle                               ServerAchievementGUID;                                   // 0x0048(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeActionGuide
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSchemeActionGuide : public FTableRowBase
	{
	public:
		TArray<class FText>                                        ActionNameList;                                          // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                KeyGuideMarkup;                                          // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		bool                                                       bAutoAdd;                                                // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGuideToTooltip;                                         // 0x0031(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XPQQ[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Priority;                                                // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLImageSpecification
	 * Size -> 0x0014
	 */
	struct FTLImageSpecification
	{
	public:
		ETLSlateImageType                                          IconImageType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ACXG[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           ImageSize;                                               // 0x0004(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           SlateAtlasSourceDimension;                               // 0x000C(0x0008) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLWeaponsAttackPower
	 * Size -> 0x002C
	 */
	struct FTLWeaponsAttackPower
	{
	public:
		int32_t                                                    NoneAttackPower;                                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DaggerAttackPower;                                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SwordAttackPower;                                        // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShieldAttackPower;                                       // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GrimoireAttackPower;                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CrossbowAttackPower;                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Sword2hAttackPower;                                      // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StaffAttackPower;                                        // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BowAttackPower;                                          // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WandAttackPower;                                         // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScrollAttackPower;                                       // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLBaseMainStat
	 * Size -> 0x00DC
	 */
	struct FTLBaseMainStat
	{
	public:
		struct FTLWeaponsAttackPower                               AttackPowers;                                            // 0x0000(0x002C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLWeaponsAttackPower                               BonusAttackPowers;                                       // 0x002C(0x002C) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AttackSpeedModifier;                                     // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttackSpeedMainHand;                                     // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttackSpeedOffHand;                                      // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MeleeAccuracy;                                           // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RangeAccuracy;                                           // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MagicAccuracy;                                           // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MeleeEvasion;                                            // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RangeEvasion;                                            // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MagicEvasion;                                            // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HealthPointMax;                                          // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HealthPointRegen;                                        // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HpMax;                                                   // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HpRegen;                                                 // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CostMax;                                                 // 0x008C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CostRegen;                                               // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeakenAccuracy;                                          // 0x0094(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StunAccuracy;                                            // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PetrificationAccuracy;                                   // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SleepAccuracy;                                           // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SilenceAccuracy;                                         // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BindAccuracy;                                            // 0x00A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BlindAccuracy;                                           // 0x00AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CollideAmplification;                                    // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CriticalAttack;                                          // 0x00B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MeleeCriticalAttack;                                     // 0x00B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RangeCriticalAttack;                                     // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MagicCriticalAttack;                                     // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ArmorClass;                                              // 0x00C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MeleeArmor;                                              // 0x00C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RangeArmor;                                              // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MagicArmor;                                              // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillCooldownModifier;                                   // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuffGivenDurationModifier;                               // 0x00D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLBaseMainStatGroup
	 * Size -> 0x00E8 (FullSize[0x00F0] - InheritedSize[0x0008])
	 */
	struct FTLBaseMainStatGroup : public FTableRowBase
	{
	public:
		int32_t                                                    Point;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPcStatsType                                               Type;                                                    // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_17O5[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLBaseMainStat                                     Stat;                                                    // 0x0010(0x00DC) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YUXC[0x4];                                   // 0x00EC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLCarrier
	 * Size -> 0x0108 (FullSize[0x0110] - InheritedSize[0x0008])
	 */
	struct FTLCarrier : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8VAW[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIName;                                                  // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GQME[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UHiveEntityData*                                     HiveEntity;                                              // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   Level;                                                   // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLBodyType                                                BodyType;                                                // 0x003C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLCreatureRank                                            CreatureRank;                                            // 0x003D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_48IG[0x2];                                   // 0x003E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      InteractionDistance;                                     // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InteractionHeightTop;                                    // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InteractionHeightBottom;                                 // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FightingRadius;                                          // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionRadiusRatio;                                    // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Height;                                                  // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttackSpeed;                                             // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CreatureStatId;                                          // 0x005C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CreatureStatCollideId;                                   // 0x0064(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CreatureStatResistanceId;                                // 0x006C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RespawnTime;                                             // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CorpseDuration;                                          // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_331R[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               tribe;                                                   // 0x0080(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       ViewableFromDistance;                                    // 0x0090(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       TargetableBySkill;                                       // 0x0091(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InteractableByHostile;                                   // 0x0092(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InteractableByFriendly;                                  // 0x0093(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InteractableByNeutral;                                   // 0x0094(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Undying;                                                 // 0x0095(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsLocalCarrier;                                          // 0x0096(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4CN9[0x1];                                   // 0x0097(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PassiveID;                                               // 0x0098(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               InitState;                                               // 0x00A8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     StateSct;                                                // 0x00B8(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DeathSct;                                                // 0x00D0(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               DeathApplyEffect;                                        // 0x00E8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              DescriptionHelper;                                       // 0x00F8(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLCarrierType                                             CarrierType;                                             // 0x0108(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseCameraLocalRotate;                                    // 0x0109(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L2O1[0x6];                                   // 0x010A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLCarrierServerEffect
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLCarrierServerEffect : public FTableRowBase
	{
	public:
		ETLServerSequenceEffect                                    CarrierServerEffect;                                     // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W3UI[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               EffectPropId;                                            // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSkillTargetSelectionRule
	 * Size -> 0x0060
	 */
	struct FTLSkillTargetSelectionRule
	{
	public:
		ETLSkillTargetRelation                                     SkillTargetRelation;                                     // 0x0000(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PNCH[0x3];                                   // 0x0001(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ETLSkillTargetExceptionalRule                              SkillTargetExceptionalRule;                              // 0x0004(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GX42[0x3];                                   // 0x0005(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ETLSkillTargetLivingStatus                                 SkillTargetLivingStatus;                                 // 0x0008(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TX1S[0x3];                                   // 0x0009(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_AL4M[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              SkillTargetObjectTypes[0x50];                            // 0x0010(0x0050) UNKNOWN PROPERTY: SetProperty
	};

	/**
	 * ScriptStruct TLScheme.TLCarrierSkillHitTimeFilter
	 * Size -> 0x0078
	 */
	struct FTLCarrierSkillHitTimeFilter
	{
	public:
		struct FTLDataTableRowHandle                               FilterEffectPropId;                                      // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                GatherVolumeName;                                        // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLSkillTargetSelectionRule                         TargetSelectionRule;                                     // 0x0018(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCarrierSkill
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FTLSchemeCarrierSkill : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_RT5K[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UID;                                                     // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PU3M[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     ActionTree;                                              // 0x0018(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESkillAttackSide                                           AttackSide;                                              // 0x0030(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8M9B[0x3];                                   // 0x0031(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       AttackSpeedPrime;                                        // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N0PK[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FixedAttackSpeed;                                        // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SkillDelay;                                              // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HitDelay;                                                // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HitTimeRepeatCount;                                      // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HitTimeRepeatDelay;                                      // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_55UC[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UHiveEntityData*                                     CarrierModelHiveEntity;                                  // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EUseSkillEventSendTime                                     UseSkillEventSendTime;                                   // 0x0058(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TNVL[0x3];                                   // 0x0059(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_UYJA[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               UseSkillEventTag;                                        // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLCarrierSkillHitTimeFilter>                HitTimeSkillFilters;                                     // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCarrierStateTransitionData
	 * Size -> 0x0001
	 */
	struct FTLCarrierStateTransitionData
	{
	public:
		unsigned char                                              UnknownData_3X5J[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoCarrierState
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLInfoCarrierState : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_G6HP[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SCTCondition;                                            // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLCarrierStateTransitionData>               TransitionList;                                          // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                RoomCollisionTag;                                        // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HitVolumeTag;                                            // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsEntryCondition;                                        // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JB5L[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLMapProductInfo
	 * Size -> 0x0008
	 */
	struct FTLMapProductInfo
	{
	public:
		int32_t                                                    ItemId;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProducePerHour;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLRowCastle
	 * Size -> 0x00E8 (FullSize[0x00F0] - InheritedSize[0x0008])
	 */
	struct FTLRowCastle : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_E17Y[0xC];                                   // 0x0008(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ECastleType                                                CastleType;                                              // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F7VS[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayName;                                             // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                SiegeName;                                               // 0x0030(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FName                                                GuildFlagGroupTag;                                       // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TitleBG;                                                 // 0x0050(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SlotImage;                                               // 0x0068(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SlotBigImage;                                            // 0x0080(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FText>                                        StatUpEffectList;                                        // 0x0098(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FText>                                        LocationEffectList;                                      // 0x00A8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLMapProductInfo>                           ProductInfo;                                             // 0x00B8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               LinkedResourceProduct;                                   // 0x00C8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       IsShowGuildFrame;                                        // 0x00D8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UHCS[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               UnlockMemorialRecordRow;                                 // 0x00E0(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexObjectiveArea
	 * Size -> 0x0018
	 */
	struct FTLSchemeCodexObjectiveArea
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       Pos;                                                     // 0x0008(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexNpcRaceTask
	 * Size -> 0x0010
	 */
	struct FTLSchemeCodexNpcRaceTask
	{
	public:
		class FName                                                npc_race;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         target_area;                                             // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexNpcTypeTask
	 * Size -> 0x0010
	 */
	struct FTLSchemeCodexNpcTypeTask
	{
	public:
		class FName                                                npc_id;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         target_area;                                             // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexNpcSpawnTask
	 * Size -> 0x0010
	 */
	struct FTLSchemeCodexNpcSpawnTask
	{
	public:
		struct FTLJsonGuid                                         NPC;                                                     // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         target_area;                                             // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexFoTypeTask
	 * Size -> 0x0010
	 */
	struct FTLSchemeCodexFoTypeTask
	{
	public:
		class FName                                                fo_id;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         target_area;                                             // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexFoSpawnTask
	 * Size -> 0x0010
	 */
	struct FTLSchemeCodexFoSpawnTask
	{
	public:
		struct FTLJsonGuid                                         fo;                                                      // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         target_area;                                             // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWorldTargetNpc
	 * Size -> 0x0028
	 */
	struct FTLSchemeWorldTargetNpc
	{
	public:
		struct FTLJsonGuid                                         SpawnGuid;                                               // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             position;                                                // 0x0008(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J4LN[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               TableId;                                                 // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWorldTargetFo
	 * Size -> 0x0028
	 */
	struct FTLSchemeWorldTargetFo
	{
	public:
		struct FTLJsonGuid                                         SpawnGuid;                                               // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             position;                                                // 0x0008(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DEIK[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               TableId;                                                 // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWorldTargetMapIcon
	 * Size -> 0x0008
	 */
	struct FTLSchemeWorldTargetMapIcon
	{
	public:
		struct FTLJsonGuid                                         MapContentGuid;                                          // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeChallengeObjective
	 * Size -> 0x00D8
	 */
	struct FTLSchemeChallengeObjective
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    GoalCount;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UiTableId;                                               // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardTableId;                                           // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexObjectiveArea>                 objective_area;                                          // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexNpcRaceTask>                   target_npc_race;                                         // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexNpcTypeTask>                   target_npc_id;                                           // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexNpcSpawnTask>                  target_npc;                                              // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexFoTypeTask>                    target_fo_id;                                            // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexFoSpawnTask>                   target_fo;                                               // 0x0070(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZEN1[0x10];                                  // 0x0080(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeWorldTargetNpc>                     WorldTargetNpc;                                          // 0x0090(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeWorldTargetFo>                      WorldTargetFo;                                           // 0x00A0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeWorldTargetMapIcon>                 WorldTargetMapIcon;                                      // 0x00B0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NLA9[0x18];                                  // 0x00C0(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeChallengeCode
	 * Size -> 0x0058
	 */
	struct FTLSchemeChallengeCode
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UiTableId;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLChallengeCodeCategory                                   Category;                                                // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KPCH[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeChallengeObjective>                 ChallengeObjectiveList;                                  // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JOOE[0x30];                                  // 0x0028(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeChallengeGroup
	 * Size -> 0x0070
	 */
	struct FTLSchemeChallengeGroup
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UiTableId;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         RelatedTerritory;                                        // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardTableId;                                           // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeChallengeCode>                      ChallengeCodeList;                                       // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RFFF[0x40];                                  // 0x0030(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeChallenge
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLSchemeChallenge : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UiTableId;                                               // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         RelatedZone;                                             // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeChallengeGroup>                     ChallengeCodeGroupList;                                  // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeChallengeRewardItem
	 * Size -> 0x0010
	 */
	struct FTLSchemeChallengeRewardItem
	{
	public:
		class FName                                                ID;                                                      // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    Count;                                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeChallengeReward
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSchemeChallengeReward : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Description;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                pc_subtitle_id;                                          // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeChallengeRewardItem>                Item;                                                    // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int64_t                                                    gold;                                                    // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCharacterEtcStatCategory
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLSchemeCharacterEtcStatCategory : public FTableRowBase
	{
	public:
		class FText                                                CategoryName;                                            // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<EPcStatsType>                                       FirstStatList;                                           // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EPcStatsType>                                       SecondStatList;                                          // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    UISortIndex;                                             // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_542T[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLChatMessageCategoryInfo
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLChatMessageCategoryInfo : public FTableRowBase
	{
	public:
		EChatMessageCategory                                       Category;                                                // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EChatMessageFilterGroup                                    FilterGroup;                                             // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EChatPortraitType                                          PortraitType;                                            // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HMP0[0x5];                                   // 0x000B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                CategoryName;                                            // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       VisibleSender;                                           // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LDTZ[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     CategoryIconPath;                                        // 0x0030(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ColorRef;                                                // 0x0048(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       VisibleChatBalloon;                                      // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DW8S[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLChatInputMode
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLChatInputMode : public FTableRowBase
	{
	public:
		EChatInputMode                                             Mode;                                                    // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7TM2[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ButtonText;                                              // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ContextMenuText;                                         // 0x0028(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ColorRef;                                                // 0x0040(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLChatFilterCategory
	 * Size -> 0x0002
	 */
	struct FTLChatFilterCategory
	{
	public:
		EChatMessageCategory                                       Category;                                                // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DefaultOn;                                               // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLChatTabInfo
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLChatTabInfo : public FTableRowBase
	{
	public:
		ETLChatTabType                                             ChatTabType;                                             // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SSUA[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TabName;                                                 // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLChatFilterCategory>                       Filter;                                                  // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EChatInputMode>                                     ChatInputMode;                                           // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ColorRef;                                                // 0x0048(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bFunctionalTab;                                          // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D17E[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLChatCommand
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLChatCommand : public FTableRowBase
	{
	public:
		TArray<class FText>                                        Commands;                                                // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		EChatCommandCategory                                       Category;                                                // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RGWY[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                HelpText;                                                // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.CinematicInputActionData
	 * Size -> 0x0020
	 */
	struct FCinematicInputActionData
	{
	public:
		TArray<class FName>                                        ModifierKeyNames;                                        // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              GuideTextKey;                                            // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoCinematicDialogSelectList
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLInfoCinematicDialogSelectList : public FTableRowBase
	{
	public:
		TArray<class FText>                                        SelectList;                                              // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCinematicDialogEndTransform
	 * Size -> 0x0018
	 */
	struct FTLCinematicDialogEndTransform
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoCinematicDialog
	 * Size -> 0x0080 (FullSize[0x0088] - InheritedSize[0x0008])
	 */
	struct FTLInfoCinematicDialog : public FTableRowBase
	{
	public:
		unsigned char                                              TLUserWidgetCinematicDialogBPClass[0x28];                // 0x0008(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		bool                                                       bStopMove;                                               // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideCursor;                                             // 0x0031(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsApplyEffect;                                           // 0x0032(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WH8Z[0x5];                                   // 0x0033(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EEndTakeType, struct FTLCinematicDialogEndTransform>  EndTakePcTransformMap;                                   // 0x0038(0x0050) Edit, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeClientObject
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLSchemeClientObject : public FTableRowBase
	{
	public:
		ETLClientObjectType                                        ObjectType;                                              // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A33S[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     DefaultSceneConti;                                       // 0x0010(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DefaultSceneContiConditionKey;                           // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DefaultSceneContiRemoveKey;                              // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EinhasadSceneConti;                                      // 0x0038(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EinhasadSceneContiConditionKey;                          // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EinhasadSceneContiRemoveKey;                             // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLClientUITable
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTLClientUITable : public FTableRowBase
	{
	public:
		class UDataTable*                                          DataTable;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLClientStringTable
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLClientStringTable : public FTableRowBase
	{
	public:
		class UStringTable*                                        StringTable;                                             // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDeprecated;                                             // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YAS6[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLClientDataTable
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLClientDataTable : public FTableRowBase
	{
	public:
		class UDataTable*                                          DataTable;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       TableEditor;                                             // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       JsonImport;                                              // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A3JR[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              XmlExport;                                               // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UDataTable*>                                  ExtDataTables;                                           // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoCodexTraceLooks
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLInfoCodexTraceLooks : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     Sct;                                                     // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SCTCondition;                                            // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SCTConditionRemove;                                      // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePrecedingCode
	 * Size -> 0x0008
	 */
	struct FTLSchemePrecedingCode
	{
	public:
		struct FTLJsonGuid                                         PrecedingCode;                                           // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeTargetTraceEffect
	 * Size -> 0x0050
	 */
	struct FTLSchemeTargetTraceEffect
	{
	public:
		class FName                                                TraceEffectTableId;                                      // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLTraceEffectType                                         TraceEffectType;                                         // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsFoStateSct;                                            // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0CMJ[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeCodexNpcSpawnTask>                  target_npc;                                              // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexNpcTypeTask>                   target_npc_id;                                           // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexFoSpawnTask>                   target_fo;                                               // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexFoTypeTask>                    target_fo_id;                                            // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePrecedingObjective
	 * Size -> 0x0008
	 */
	struct FTLSchemePrecedingObjective
	{
	public:
		struct FTLJsonGuid                                         AdditionalPrecedingCodexObjective;                       // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexObjective
	 * Size -> 0x0150
	 */
	struct FTLSchemeCodexObjective
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    GoalCount;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UiTableId;                                               // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardTableId;                                           // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InspectionTraceCount;                                    // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RE0N[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeTargetTraceEffect>                  TargetTraceEffect;                                       // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemePrecedingObjective>                 AdditionalCodexObjectivePrecedingList;                   // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexObjectiveArea>                 objective_area;                                          // 0x0048(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexNpcRaceTask>                   target_npc_race;                                         // 0x0058(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexNpcTypeTask>                   target_npc_id;                                           // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexNpcSpawnTask>                  target_npc;                                              // 0x0078(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexFoTypeTask>                    target_fo_id;                                            // 0x0088(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexFoSpawnTask>                   target_fo;                                               // 0x0098(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeWorldTargetNpc>                     WorldTargetNpc;                                          // 0x00A8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeWorldTargetFo>                      WorldTargetFo;                                           // 0x00B8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeWorldTargetMapIcon>                 WorldTargetMapIcon;                                      // 0x00C8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C4XK[0x78];                                  // 0x00D8(0x0078) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexCode
	 * Size -> 0x0070
	 */
	struct FTLSchemeCodexCode
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UiTableId;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsFinal;                                                 // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECodexCodeType                                             CodeType;                                                // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSubCode;                                               // 0x0012(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_63R4[0x5];                                   // 0x0013(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemePrecedingCode>                      CodexCodePrecedingList;                                  // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexObjective>                     CodexObjectiveList;                                      // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z6BC[0x38];                                  // 0x0038(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeFilterObjective
	 * Size -> 0x0008
	 */
	struct FTLSchemeFilterObjective
	{
	public:
		struct FTLJsonGuid                                         CodexObjective;                                          // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeFilterObjectState
	 * Size -> 0x0020
	 */
	struct FTLSchemeFilterObjectState
	{
	public:
		TArray<struct FTLSchemeFilterObjective>                    AcquireObjective;                                        // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeFilterObjective>                    NotAcquireObjective;                                     // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexFilterObjectArray
	 * Size -> 0x0058
	 */
	struct FTLSchemeCodexFilterObjectArray
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeTargetTraceEffect>                  TargetTraceEffect;                                       // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLSchemeFilterObjectState                          EnableSituation;                                         // 0x0018(0x0020) Edit, NativeAccessSpecifierPublic
		struct FTLSchemeFilterObjectState                          DisableSituation;                                        // 0x0038(0x0020) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexGroup
	 * Size -> 0x00A0
	 */
	struct FTLSchemeCodexGroup
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UiTableId;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsInvisible;                                             // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YHOD[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuid                                         RelatedTerritory;                                        // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RewardTableId;                                           // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         PrecedingCodeGroup;                                      // 0x0028(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StartLevel;                                              // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4SLM[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeCodexCode>                          CodexCodeList;                                           // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexFilterObjectArray>             CodexFilterObjectArray;                                  // 0x0048(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L66T[0x48];                                  // 0x0058(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexUnit
	 * Size -> 0x0040
	 */
	struct FTLSchemeCodexUnit
	{
	public:
		struct FTLJsonGuid                                         Guid;                                                    // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UiTableId;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsVisible;                                               // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8SZ1[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuid                                         RelatedZone;                                             // 0x0018(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexGroup>                         CodexCodeGroupList;                                      // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H37R[0x10];                                  // 0x0030(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodex
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeCodex : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECodexCategoryType                                         CategoryType;                                            // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5Q5G[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeCodexUnit>                          CodexUnitList;                                           // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexCodeLooks
	 * Size -> 0x00F0 (FullSize[0x00F8] - InheritedSize[0x0008])
	 */
	struct FTLSchemeCodexCodeLooks : public FTableRowBase
	{
	public:
		ECodexCategoryType                                         CategoryType;                                            // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9WBG[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TitleText;                                               // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                PrologueText;                                            // 0x0028(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                FragmentKnowledgeText;                                   // 0x0040(0x0018) Edit, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     VoiceEvent;                                              // 0x0058(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     NarrativeImagePath;                                      // 0x0070(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     FragmentKnowledgePortraitImagePath;                      // 0x0088(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     NudgePortraitImagePath;                                  // 0x00A0(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           CodeUIPos;                                               // 0x00B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECodeDrawLineDirectionType                                 CodeUILineDirectionType;                                 // 0x00C0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WWOH[0x7];                                   // 0x00C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     PCSctId;                                                 // 0x00C8(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLCodexAchievementActionType                              AchievementActionType;                                   // 0x00E0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7ILM[0x7];                                   // 0x00E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LogName;                                                 // 0x00E8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexCollection
	 * Size -> 0x00B0 (FullSize[0x00B8] - InheritedSize[0x0008])
	 */
	struct FTLSchemeCodexCollection : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLCodexCollectionType                                     Type;                                                    // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7AKT[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UnitTitleText;                                           // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                TitleText;                                               // 0x0038(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BookImage;                                               // 0x0050(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLCodexCollectionPageType                                 PageType;                                                // 0x0068(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZR1V[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                PageText01;                                              // 0x0070(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                PageText02;                                              // 0x0088(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PageImage;                                               // 0x00A0(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexGroupCutSceneInfo
	 * Size -> 0x0028
	 */
	struct FTLSchemeCodexGroupCutSceneInfo
	{
	public:
		class FText                                                CutSceneText;                                            // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               CutScenePath;                                            // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexGroupLooks
	 * Size -> 0x0098 (FullSize[0x00A0] - InheritedSize[0x0008])
	 */
	struct FTLSchemeCodexGroupLooks : public FTableRowBase
	{
	public:
		class FText                                                TitleText;                                               // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                FragmentKnowledgeText;                                   // 0x0020(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                CompleteKnowledgeText;                                   // 0x0038(0x0018) Edit, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BackgroundImage;                                         // 0x0050(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PCSctId;                                                 // 0x0068(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StartScreenMessageId;                                    // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CompleteScreenMessageId;                                 // 0x0088(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexGroupCutSceneInfo>             CutSceneInfos;                                           // 0x0090(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexNpcManageCondition
	 * Size -> 0x0020
	 */
	struct FTLSchemeCodexNpcManageCondition
	{
	public:
		TArray<struct FTLGuidTableRowHandle>                       CompletedCodexObjectiveGuid;                             // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLGuidTableRowHandle>                       IncompletedCodexObjectiveGuid;                           // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexNpcManageConditionEntry
	 * Size -> 0x0010 (FullSize[0x0030] - InheritedSize[0x0020])
	 */
	struct FTLSchemeCodexNpcManageConditionEntry : public FTLSchemeCodexNpcManageCondition
	{
	public:
		struct FTLDataTableRowHandle                               NpcEntryMotionTableIdRow;                                // 0x0020(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexNpcManageConditionLeave
	 * Size -> 0x0010 (FullSize[0x0030] - InheritedSize[0x0020])
	 */
	struct FTLSchemeCodexNpcManageConditionLeave : public FTLSchemeCodexNpcManageCondition
	{
	public:
		struct FTLDataTableRowHandle                               NpcMotionTableIdRow;                                     // 0x0020(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexNpcManage
	 * Size -> 0x0080 (FullSize[0x0088] - InheritedSize[0x0008])
	 */
	struct FTLSchemeCodexNpcManage : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               NpcTableRow;                                             // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLSchemeCodexNpcManageConditionEntry               CodexNpcManageConditionEntry;                            // 0x0028(0x0030) Edit, NativeAccessSpecifierPublic
		struct FTLSchemeCodexNpcManageConditionLeave               CodexNpcManageConditionLeave;                            // 0x0058(0x0030) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInspectionStepAnswer
	 * Size -> 0x0020
	 */
	struct FTLSchemeInspectionStepAnswer
	{
	public:
		class FName                                                AnswerRoomPartName;                                      // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ATNextStepCondition;                                     // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ATStatusCondition;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLCursorType                                              CursorType;                                              // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZKAI[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlockingInputDuringSeconds;                              // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInspectionStepHint
	 * Size -> 0x0060
	 */
	struct FTLSchemeInspectionStepHint
	{
	public:
		class FName                                                HintRoomPartName;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                HintDescription;                                         // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		class FName                                                ATCondition;                                             // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLCursorType                                              CursorType;                                              // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_THE0[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlockingInputDuringSeconds;                              // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLongPressdClickMode;                                    // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZMFF[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                LongPressHintDescription;                                // 0x0038(0x0018) Edit, NativeAccessSpecifierPublic
		class FName                                                LongPressATCondition;                                    // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLCursorType                                              LongPressCursorType;                                     // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2JTH[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LongPressBlockingInputDuringSeconds;                     // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInspectionStep
	 * Size -> 0x0048
	 */
	struct FTLSchemeInspectionStep
	{
	public:
		class FString                                              Comment;                                                 // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                StepDescription;                                         // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeInspectionStepAnswer>               StepAnswerList;                                          // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeInspectionStepHint>                 StepHintList;                                            // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInspection
	 * Size -> 0x0090
	 */
	struct FTLSchemeInspection
	{
	public:
		class FText                                                UIName;                                                  // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     HiveEntity;                                              // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            InitializeRotationOffset;                                // 0x0020(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U7G4[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     ActionTree;                                              // 0x0030(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                CompleteDescription;                                     // 0x0048(0x0018) Edit, NativeAccessSpecifierPublic
		class FName                                                ATCompleteStatusCondition;                               // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeInspectionStep>                     StepList;                                                // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                StartScreenMessageText;                                  // 0x0078(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexObjectiveLooks
	 * Size -> 0x0120 (FullSize[0x0128] - InheritedSize[0x0008])
	 */
	struct FTLSchemeCodexObjectiveLooks : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                ActionText;                                              // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		ETLCodexObjectiveActionType                                ObjectiveActionType;                                     // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FHWO[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLDataTableRowHandle>                       HyperLinkRefList;                                        // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       UseCount;                                                // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ApplyAudioTag;                                           // 0x0049(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2HWM[0x6];                                   // 0x004A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               MapIconTableKey;                                         // 0x0050(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    MapIconPriority;                                         // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SKDV[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               InstanceMap;                                             // 0x0068(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                InstanceMapGuideText;                                    // 0x0078(0x0018) Edit, NativeAccessSpecifierPublic
		bool                                                       bInstacneMapPlay;                                        // 0x0090(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RTSB[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLSchemeInspection                                 InspectionInfo;                                          // 0x0098(0x0090) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexRewardItem
	 * Size -> 0x0010
	 */
	struct FTLSchemeCodexRewardItem
	{
	public:
		int64_t                                                    Count;                                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexGroupReward
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeCodexGroupReward : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexRewardItem>                    select_item;                                             // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCodexReward
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLSchemeCodexReward : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                pc_subtitle_id;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeCodexRewardItem>                    Item;                                                    // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int64_t                                                    gold;                                                    // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCollisionSizeInfo
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLCollisionSizeInfo : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_F0DN[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FightRadius;                                             // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionRadiusRatio;                                    // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionRadiusRatioMin;                                 // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Height;                                                  // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickingRadiusRatio;                                      // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BoxWHRatio;                                              // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickingBoxHeightRatio;                                   // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickingBoxZPosOffset;                                    // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoColor
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLInfoColor : public FTableRowBase
	{
	public:
		struct FLinearColor                                        ColorAndOpacity;                                         // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLClientDataTablePath
	 * Size -> 0x0020
	 */
	struct FTLClientDataTablePath
	{
	public:
		class FString                                              Filename;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FilePath;                                                // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLFNameArrayData
	 * Size -> 0x0010
	 */
	struct FTLFNameArrayData
	{
	public:
		TArray<class FName>                                        Datas;                                                   // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInt32ArrayData
	 * Size -> 0x0010
	 */
	struct FTLInt32ArrayData
	{
	public:
		TArray<int32_t>                                            Datas;                                                   // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSectionBase
	 * Size -> 0x0008
	 */
	struct FTLSectionBase
	{
	public:
		unsigned char                                              UnknownData_ZF7F[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSectionPolygon
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSectionPolygon : public FTLSectionBase
	{
	public:
		unsigned char                                              UnknownData_JTOT[0x30];                                  // 0x0008(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSectionCircle
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSectionCircle : public FTLSectionBase
	{
	public:
		unsigned char                                              UnknownData_CCUY[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCommonIcon
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLSchemeCommonIcon : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     SpriteIconPath;                                          // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TextureIconPath;                                         // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoReward
	 * Size -> 0x0020
	 */
	struct FTLInfoReward
	{
	public:
		unsigned char                                              UnknownData_2270[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLConditionalBaseCondition
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	struct FTLConditionalBaseCondition : public FTLConditionComplex
	{
	public:
		unsigned char                                              UnknownData_9IND[0x10];                                  // 0x0028(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLConditionalBaseWeightDescription
	 * Size -> 0x0014 (FullSize[0x0018] - InheritedSize[0x0004])
	 */
	struct FTLConditionalBaseWeightDescription : public FTLConditionWeight
	{
	public:
		unsigned char                                              UnknownData_TF8I[0x14];                                  // 0x0004(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLConditionalDialogueWeightDialogue
	 * Size -> 0x0014 (FullSize[0x0018] - InheritedSize[0x0004])
	 */
	struct FTLConditionalDialogueWeightDialogue : public FTLConditionWeight
	{
	public:
		unsigned char                                              UnknownData_A1X1[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               Dialogue;                                                // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLConditionalDialogueCondition
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	struct FTLConditionalDialogueCondition : public FTLConditionComplex
	{
	public:
		TArray<struct FTLConditionalDialogueWeightDialogue>        WeightDialogues;                                         // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLConditionalDialogue
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLConditionalDialogue : public FTableRowBase
	{
	public:
		TArray<struct FTLConditionalDialogueCondition>             Conditions;                                              // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLConditionalNpcSpeakWeightNpcSpeak
	 * Size -> 0x0014 (FullSize[0x0018] - InheritedSize[0x0004])
	 */
	struct FTLConditionalNpcSpeakWeightNpcSpeak : public FTLConditionWeight
	{
	public:
		unsigned char                                              UnknownData_T0HC[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               NpcSpeak;                                                // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLConditionalNpcSpeakCondition
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	struct FTLConditionalNpcSpeakCondition : public FTLConditionComplex
	{
	public:
		TArray<struct FTLConditionalNpcSpeakWeightNpcSpeak>        WeightNpcSpeaks;                                         // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLConditionalNpcSpeak
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLConditionalNpcSpeak : public FTableRowBase
	{
	public:
		TArray<struct FTLConditionalNpcSpeakCondition>             Conditions;                                              // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeContentsCondition
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLSchemeContentsCondition : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ConditionBPClass[0x28];                                  // 0x0018(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	};

	/**
	 * ScriptStruct TLScheme.TLContentsOpenMainMenuPopUpDescription
	 * Size -> 0x0028
	 */
	struct FTLContentsOpenMainMenuPopUpDescription
	{
	public:
		class FText                                                TooltipDescriptionText;                                  // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       DescriptionTextHyperLinkList;                            // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLContentsOpenConditionPolymorph
	 * Size -> 0x0030
	 */
	struct FTLContentsOpenConditionPolymorph
	{
	public:
		bool                                                       bUseCondition;                                           // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RH1S[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLDataTableRowHandle>                       Inclusions;                                              // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       Exclusions;                                              // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    ExcludeType;                                             // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4I8D[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLContentsOpenConditionAmitoi
	 * Size -> 0x0028
	 */
	struct FTLContentsOpenConditionAmitoi
	{
	public:
		bool                                                       bUseCondition;                                           // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GR5O[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLDataTableRowHandle>                       Inclusions;                                              // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       Exclusions;                                              // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeContentsOpen
	 * Size -> 0x01E8 (FullSize[0x01F0] - InheritedSize[0x0008])
	 */
	struct FTLSchemeContentsOpen : public FTableRowBase
	{
	public:
		ETLContentsOpenType                                        ContentsType;                                            // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QPO1[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLGuidTableRowHandle>                       ServerAchievementGUIDs;                                  // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               StringSystemTableRow;                                    // 0x0020(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     IconPath;                                                // 0x0030(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowUIBeforeContentsOpen;                               // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RTOW[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EMainMenuType>                                      MainMenus;                                               // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       UITableRows;                                             // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        Actions;                                                 // 0x0070(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OpenSctPath;                                             // 0x0080(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TooltipTitleText;                                        // 0x0098(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLContentsOpenMainMenuPopUpDescription>     TooltipDescription;                                      // 0x00B0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VD5F[0x4];                                   // 0x00C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      CodexObjectiveGUIDs;                                     // 0x00C8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FString>                                      InvisibleCodexObjectiveGUIDs;                            // 0x00D8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               InteractionTableRow;                                     // 0x00E8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               CutSceneStartTableRow;                                   // 0x00F8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               CutSceneTableRow;                                        // 0x0108(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               CinematicDialogTableRow;                                 // 0x0118(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               MapTableRow;                                             // 0x0128(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       AdditionalCompleteMapTableRows;                          // 0x0138(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       IgnoreMapTableRows;                                      // 0x0148(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            SkillComplexGuids;                                       // 0x0158(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        ItemTableRowNames;                                       // 0x0168(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                ContentShapeName;                                        // 0x0178(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLContentsOpenConditionPolymorph                   PolymorphCondition;                                      // 0x0180(0x0030) Edit, NativeAccessSpecifierPublic
		struct FTLContentsOpenConditionAmitoi                      AmitoiCondition;                                         // 0x01B0(0x0028) Edit, NativeAccessSpecifierPublic
		bool                                                       bUseWeaponMasteryPointCodition;                          // 0x01D8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAbyssPointCodition;                                  // 0x01D9(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DV4I[0x6];                                   // 0x01DA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               CompleteMemorialRecordTableRow;                          // 0x01E0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoContractGroup
	 * Size -> 0x0020
	 */
	struct FTLInfoContractGroup
	{
	public:
		unsigned char                                              UnknownData_IIO5[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoContractGroupLooks
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLInfoContractGroupLooks : public FTableRowBase
	{
	public:
		class FText                                                TitleText;                                               // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		unsigned char                                              BackgroundImagePath[0x28];                               // 0x0020(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct TLScheme.TLInfoContract
	 * Size -> 0x00A0
	 */
	struct FTLInfoContract
	{
	public:
		unsigned char                                              UnknownData_PF9Q[0xA0];                                  // 0x0000(0x00A0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoContractObjective
	 * Size -> 0x0080
	 */
	struct FTLInfoContractObjective
	{
	public:
		unsigned char                                              UnknownData_PQMH[0x80];                                  // 0x0000(0x0080) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoContractObjectiveArea
	 * Size -> 0x0018
	 */
	struct FTLInfoContractObjectiveArea
	{
	public:
		unsigned char                                              UnknownData_6SZ5[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoContractWorldTarget
	 * Size -> 0x0020
	 */
	struct FTLInfoContractWorldTarget
	{
	public:
		unsigned char                                              UnknownData_ZK6H[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoContractTarget
	 * Size -> 0x0018
	 */
	struct FTLInfoContractTarget
	{
	public:
		unsigned char                                              UnknownData_PA74[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLContractObjectiveDescription
	 * Size -> 0x0028
	 */
	struct FTLContractObjectiveDescription
	{
	public:
		class FText                                                ObjectiveDescriptionText;                                // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       HyperLinkRefList;                                        // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoContractLooks
	 * Size -> 0x0070 (FullSize[0x0078] - InheritedSize[0x0008])
	 */
	struct FTLInfoContractLooks : public FTableRowBase
	{
	public:
		bool                                                       IsWorldMapIcon;                                          // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9MQT[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TitleText;                                               // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                DescriptionText;                                         // 0x0028(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLContractObjectiveDescription>             ObjectiveDescriptionList;                                // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       ShowPercentGauge;                                        // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z1PX[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<bool>                                               ObjectiveVisibleCountList;                               // 0x0058(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ContractAcceptDialogue;                                  // 0x0068(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeContractRefreshCostRow
	 * Size -> 0x0008
	 */
	struct FTLSchemeContractRefreshCostRow
	{
	public:
		EMoneyType                                                 MoneyType;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DCNJ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Cost;                                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeContractRefreshCost
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeContractRefreshCost : public FTableRowBase
	{
	public:
		TArray<struct FTLSchemeContractRefreshCostRow>             RefreshCost;                                             // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCraftingRecipeGroup
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLCraftingRecipeGroup : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E106[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               CraftingShopInfo;                                        // 0x0010(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       Recipes;                                                 // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIncludeCraftingBook;                                    // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WROI[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                LocationGuide;                                           // 0x0038(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCraftingRecipe
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FTLCraftingRecipe : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ResultItem;                                              // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T65U[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    MaxCount;                                                // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CriticalSuccessRate;                                     // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CriticalSuccessResultItem;                               // 0x0024(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCriticalSuccessResultItemExchangeable;                  // 0x002C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7VI9[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FailureRate;                                             // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FailureResultItem;                                       // 0x0034(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FailureResultItemCount;                                  // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               Category;                                                // 0x0040(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       Ingredients;                                             // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int64_t                                                    Cost;                                                    // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCraftingShopInfo
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLCraftingShopInfo : public FTableRowBase
	{
	public:
		class FText                                                Name;                                                    // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       Categories;                                              // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		ETLCraftingBookType                                        BookType;                                                // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PMJC[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     OpenSound;                                               // 0x0038(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCraftingCategory
	 * Size -> 0x00B8 (FullSize[0x00C0] - InheritedSize[0x0008])
	 */
	struct FTLCraftingCategory : public FTableRowBase
	{
	public:
		class FText                                                Name;                                                    // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              IconImage[0x28];                                         // 0x0020(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              HoverIconImage[0x28];                                    // 0x0048(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              CheckIconImage[0x28];                                    // 0x0070(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              CheckHoverIconImage[0x28];                               // 0x0098(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct TLScheme.TLCraftingMaterial
	 * Size -> 0x000C
	 */
	struct FTLCraftingMaterial
	{
	public:
		class FName                                                Item;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCraftingMaterialGroup
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLCraftingMaterialGroup : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KWQF[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLCraftingMaterial>                         Materials;                                               // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCraftingUsage
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FTLCraftingUsage : public FTLTableRowBase
	{
	public:
		TMap<class FName, struct FTLFNameArrayData>                UsageMap;                                                // 0x0010(0x0050) Edit, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCueSheet
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLCueSheet : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     Sct;                                                     // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SCTCondition;                                            // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SCTConditionRemove;                                      // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RemoveOffsetTime;                                        // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ApplyAudioTag;                                           // 0x0034(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y967[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     MusicPath;                                               // 0x0038(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoftObjectPath>                             SoundEvents;                                             // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLDesignerCustomizeData
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLDesignerCustomizeData : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     TexturePath;                                             // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsedInLobby;                                            // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E9VO[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<unsigned char>                                      CustomizeData;                                           // 0x0028(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		unsigned char                                              ExtraData;                                               // 0x0038(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsBranchRealmGroup;                                     // 0x0039(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3MUB[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        CotainsRealmGroupID;                                     // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingInfo
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLCustomizingInfo : public FTableRowBase
	{
	public:
		ECustomizeGender                                           GenderVisible;                                           // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECustomizeUIType                                           UIType;                                                  // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YNBA[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                TitleStringID;                                           // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ToolTipStringID;                                         // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BoneIndex;                                               // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinCap;                                                  // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxCap;                                                  // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Inverse;                                                 // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L13Q[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BitSize;                                                 // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingLooks
	 * Size -> 0x0190 (FullSize[0x0198] - InheritedSize[0x0008])
	 */
	struct FTLCustomizingLooks : public FTableRowBase
	{
	public:
		TMap<ECustomizeType, struct FTLCustomizingInfo>            FaceLooks;                                               // 0x0008(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<ECustomizeType, struct FTLCustomizingInfo>            MakeupLooks;                                             // 0x0058(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<ECustomizeType, struct FTLCustomizingInfo>            HairLooks;                                               // 0x00A8(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<ECustomizeType, struct FTLCustomizingInfo>            BodyLooks;                                               // 0x00F8(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<ECustomizeType, struct FColor>                        Colors;                                                  // 0x0148(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingPresetInfo
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLCustomizingPresetInfo : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     PresetIcon;                                              // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PresetPath;                                              // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bExposeToUser;                                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BOFZ[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingPresetArray
	 * Size -> 0x0010
	 */
	struct FTLCustomizingPresetArray
	{
	public:
		TArray<struct FTLCustomizingPresetInfo>                    PresetArray;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingColorPreset
	 * Size -> 0x0010
	 */
	struct FTLCustomizingColorPreset
	{
	public:
		TArray<struct FColor>                                      Colors;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingPreset
	 * Size -> 0x00A0 (FullSize[0x00A8] - InheritedSize[0x0008])
	 */
	struct FTLCustomizingPreset : public FTableRowBase
	{
	public:
		TMap<ECustomizeUIMiddleCategory, struct FTLCustomizingPresetArray> PartPresets;                                             // 0x0008(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<ECustomizeType, struct FTLCustomizingColorPreset>     ColorPresets;                                            // 0x0058(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupItemUIIcon
	 * Size -> 0x0068
	 */
	struct FTLCustomizingMakeupItemUIIcon
	{
	public:
		ETLCustomizingMakeupItemRaceFilter                         Race;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DOUW[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     DefaultIcon;                                             // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     RareIcon;                                                // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     HeroIcon;                                                // 0x0038(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LegendIcon;                                              // 0x0050(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupItemUIConfig
	 * Size -> 0x0030
	 */
	struct FTLCustomizingMakeupItemUIConfig
	{
	public:
		uint32_t                                                   ValidRace;                                               // 0x0000(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P422[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     FallbackIcon;                                            // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLCustomizingMakeupItemUIIcon>              Icons;                                                   // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingTableRowBase
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLCustomizingTableRowBase : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TEEH[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UIName;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLCustomizingMakeupItemUIConfig                    UIConfigs;                                               // 0x0020(0x0030) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupTattooType3
	 * Size -> 0x0018 (FullSize[0x0068] - InheritedSize[0x0050])
	 */
	struct FTLCustomizingMakeupTattooType3 : public FTLCustomizingTableRowBase
	{
	public:
		struct FSoftObjectPath                                     ObjectPath;                                              // 0x0050(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupEarType
	 * Size -> 0x0018 (FullSize[0x0068] - InheritedSize[0x0050])
	 */
	struct FTLCustomizingMakeupEarType : public FTLCustomizingTableRowBase
	{
	public:
		struct FSoftObjectPath                                     ObjectPath;                                              // 0x0050(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingCompositeBeardDefType
	 * Size -> 0x0018 (FullSize[0x0068] - InheritedSize[0x0050])
	 */
	struct FTLCustomizingCompositeBeardDefType : public FTLCustomizingTableRowBase
	{
	public:
		struct FSoftObjectPath                                     ObjectPath;                                              // 0x0050(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupTexture
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLCustomizingMakeupTexture : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K0WR[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UIName;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLCustomizingMakeupItemUIConfig                    UIConfigs;                                               // 0x0020(0x0030) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UTexture2D*                                          Texture;                                                 // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupTattooMask3
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	struct FTLCustomizingMakeupTattooMask3 : public FTLCustomizingMakeupTexture
	{	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupEyeLineMask
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	struct FTLCustomizingMakeupEyeLineMask : public FTLCustomizingMakeupTexture
	{	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupScarMask
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	struct FTLCustomizingMakeupScarMask : public FTLCustomizingMakeupTexture
	{	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupHairTipMask
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	struct FTLCustomizingMakeupHairTipMask : public FTLCustomizingMakeupTexture
	{	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupEyelashMask
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	struct FTLCustomizingMakeupEyelashMask : public FTLCustomizingMakeupTexture
	{	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupIrisMask
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	struct FTLCustomizingMakeupIrisMask : public FTLCustomizingMakeupTexture
	{	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupFaceSpotMask
	 * Size -> 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
	 */
	struct FTLCustomizingMakeupFaceSpotMask : public FTLCustomizingMakeupTexture
	{	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupEyebrowTypeAndMask
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLCustomizingMakeupEyebrowTypeAndMask : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H9BJ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UIName;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLCustomizingMakeupItemUIConfig                    UIConfigs;                                               // 0x0020(0x0030) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     MeshHiveEntity;                                          // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupBeardType
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLCustomizingMakeupBeardType : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LNKY[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UIName;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLCustomizingMakeupItemUIConfig                    UIConfigs;                                               // 0x0020(0x0030) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     BeardHiveEntity;                                         // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupLipMask
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLCustomizingMakeupLipMask : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VKMS[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UIName;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLCustomizingMakeupItemUIConfig                    UIConfigs;                                               // 0x0020(0x0030) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     HiveEntity;                                              // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupEyeDeco
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLCustomizingMakeupEyeDeco : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P649[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UIName;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLCustomizingMakeupItemUIConfig                    UIConfigs;                                               // 0x0020(0x0030) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     HiveEntity;                                              // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupWarpaintingMask
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLCustomizingMakeupWarpaintingMask : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4LQ5[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UIName;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLCustomizingMakeupItemUIConfig                    UIConfigs;                                               // 0x0020(0x0030) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     HiveEntity;                                              // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupFaceType
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLCustomizingMakeupFaceType : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OB5O[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UIName;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLCustomizingMakeupItemUIConfig                    UIConfigs;                                               // 0x0020(0x0030) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     FaceHiveEntity;                                          // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizingMakeupHairType
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLCustomizingMakeupHairType : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L146[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UIName;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLCustomizingMakeupItemUIConfig                    UIConfigs;                                               // 0x0020(0x0030) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     HairHiveEntity;                                          // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoCutscene
	 * Size -> 0x00B0 (FullSize[0x00B8] - InheritedSize[0x0008])
	 */
	struct FTLInfoCutscene : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     DefaultLevelSequencePath;                                // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EWeaponCategory, struct FSoftObjectPath>              LevelSequencePathsByWeaponCategory;                      // 0x0020(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bUseCutSceneCamera;                                      // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YUI0[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     PreSceneContiPath;                                       // 0x0078(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreSceneContiDuration;                                   // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECutsceneActionWhenCompleted                               ActionWhenCompleted;                                     // 0x0094(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBlackscreenFadeoutWhenReadyToPlay;                      // 0x0095(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7SVX[0x2];                                   // 0x0096(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     OnSkipLevelSequencePath;                                 // 0x0098(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnSkipUseCutSceneCamera;                                // 0x00B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       RestoreAsDefaultPolymorph;                               // 0x00B1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStopMove;                                               // 0x00B2(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseCenterSubtitle;                                      // 0x00B3(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseSkipButtonForMarkerJump;                             // 0x00B4(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4MBX[0x3];                                   // 0x00B5(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDeveloperLetter
	 * Size -> 0x0088 (FullSize[0x0090] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDeveloperLetter : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_PWHU[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UID;                                                     // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I03A[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Comment;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TitleText;                                               // 0x0028(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		ETLDeveloperLetterType                                     LetterType;                                              // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TNCS[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                LetterText01;                                            // 0x0048(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                LetterText02;                                            // 0x0060(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LetterImage;                                             // 0x0078(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDialogueContent
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDialogueContent : public FTableRowBase
	{
	public:
		EDialogueType                                              DialogueType;                                            // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_725V[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               TitleDialogue;                                           // 0x0010(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       DialogueList;                                            // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                CancelStringId;                                          // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Skippable;                                               // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EChatMessageCategory                                       ChatCategory;                                            // 0x0039(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZWI8[0x2];                                   // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Priority;                                                // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               NextInteraction;                                         // 0x0040(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLDialogueContent
	 * Size -> 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
	 */
	struct FTLDialogueContent : public FTLSchemeDialogueContent
	{	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDialogueBase
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDialogueBase : public FTableRowBase
	{
	public:
		struct FTLDataTableRowHandle                               SpeakerInfo;                                             // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInteractionCamera
	 * Size -> 0x0018
	 */
	struct FTLScheme_FTLInteractionCamera
	{
	public:
		struct FTLDataTableRowHandle                               InteractionCameraSetting;                                // 0x0000(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		float                                                      TargetDistanceMax;                                       // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SO1H[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInteractionCameraPreset
	 * Size -> 0x0028
	 */
	struct FTLInteractionCameraPreset
	{
	public:
		struct FTLDataTableRowHandle                               DefaultInteractionCameraSetting;                         // 0x0000(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLScheme_FTLInteractionCamera>              List;                                                    // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       InvisibleMyPc;                                           // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InvisibleOtherPc;                                        // 0x0021(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InvisibleOtherNpc;                                       // 0x0022(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_275K[0x5];                                   // 0x0023(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDialogue
	 * Size -> 0x0150 (FullSize[0x0168] - InheritedSize[0x0018])
	 */
	struct FTLSchemeDialogue : public FTLSchemeDialogueBase
	{
	public:
		class FText                                                DialogueStr;                                             // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FString                                              ScoreFormatedStr;                                        // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     VoiceEvent;                                              // 0x0040(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLExpressionVoiceType                                     ExpressionVoiceType;                                     // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMotionStopWithSound;                                    // 0x0059(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GLA9[0x6];                                   // 0x005A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     MotionId;                                                // 0x0060(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NpcLipMotionId;                                          // 0x0078(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PCSctId;                                                 // 0x0080(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     InteractionTextIcon;                                     // 0x0098(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FoContiState;                                            // 0x00B0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DurationMs;                                              // 0x00B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DelayTimeMs;                                             // 0x00BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x00C0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Speaker;                                                 // 0x00D0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PortraitPath;                                            // 0x00E8(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SceneDialogueImagePath;                                  // 0x0100(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LevelSequencePath;                                       // 0x0118(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       VoiceOnly;                                               // 0x0130(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EChatMessageCategory                                       ChatCategory;                                            // 0x0131(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLSpeakDistanceType                                       SpeakDistance;                                           // 0x0132(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JOJY[0x5];                                   // 0x0133(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLInteractionCameraPreset                          InteractionCameraPreset;                                 // 0x0138(0x0028) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bShowScreenMessgae;                                      // 0x0160(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAlwaysInScreenOnTop;                                    // 0x0161(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_30Q1[0x6];                                   // 0x0162(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLDialogue
	 * Size -> 0x0000 (FullSize[0x0168] - InheritedSize[0x0168])
	 */
	struct FTLDialogue : public FTLSchemeDialogue
	{	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDialogueSpeaker
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDialogueSpeaker : public FTableRowBase
	{
	public:
		class FText                                                Speaker;                                                 // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		ETextGender                                                Gender;                                                  // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GBZU[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Age;                                                     // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Desc;                                                    // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDialogueGameValueArgument
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDialogueGameValueArgument : public FTableRowBase
	{
	public:
		struct FTLDataTableRowHandle                               GameValue;                                               // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDungeonWaypoint
	 * Size -> 0x0088 (FullSize[0x0090] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDungeonWaypoint : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_6029[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UID;                                                     // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1JWJ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Comment;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                WaypointName;                                            // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                MapIconToolTipName;                                      // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UnlockMemorialRecordRow;                                 // 0x0058(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                MemorialFormatText;                                      // 0x0068(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       HyperLinkRefList;                                        // 0x0080(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDynamicEventScore
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDynamicEventScore : public FTableRowBase
	{
	public:
		class FText                                                ScoreName;                                               // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PCSctId;                                                 // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ScoreSystemString;                                       // 0x0038(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               LossScoreSystemString;                                   // 0x0048(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDynamicEventTimeline
	 * Size -> 0x00C0 (FullSize[0x00C8] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDynamicEventTimeline : public FTableRowBase
	{
	public:
		class FText                                                PreTimelineText;                                         // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                TimelineText;                                            // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ZeroTimelineText;                                        // 0x0038(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                EmptyTimelineText;                                       // 0x0050(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               PlayTimeLineSceneId;                                     // 0x0068(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               EmptyTimeLineSceneId;                                    // 0x0078(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       IsActiveCompareText;                                     // 0x0088(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9URV[0x7];                                   // 0x0089(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                CompareScoreText;                                        // 0x0090(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<class FText>                                        SideTextList;                                            // 0x00A8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FText>                                        WarehouseTextList;                                       // 0x00B8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDynamicEventReward
	 * Size -> 0x0230 (FullSize[0x0238] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDynamicEventReward : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     EventUIFrameBGPath;                                      // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EventIconPath;                                           // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UITitle;                                                 // 0x0038(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                UIRankRewardTitle;                                       // 0x0050(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                UIEffortRewardTitle;                                     // 0x0068(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                UILuckyRewardTitle;                                      // 0x0080(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                UIEventTitle;                                            // 0x0098(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                MyEventScoreText;                                        // 0x00B0(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                TaxGuildText;                                            // 0x00C8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       IsSuccess;                                               // 0x00E0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GPW7[0x7];                                   // 0x00E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                RewardTextGroupA;                                        // 0x00E8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupB;                                        // 0x0100(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupC;                                        // 0x0118(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupD;                                        // 0x0130(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupE;                                        // 0x0148(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupF;                                        // 0x0160(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupG;                                        // 0x0178(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupH;                                        // 0x0190(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupI;                                        // 0x01A8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupJ;                                        // 0x01C0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupDefault;                                  // 0x01D8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bShowEventScore;                                         // 0x01F0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CLR4[0x7];                                   // 0x01F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     EventScoreIconPath;                                      // 0x01F8(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                EventScoreResultText;                                    // 0x0210(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZZDH[0x10];                                  // 0x0228(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoDynamicEventWarehouse
	 * Size -> 0x01D0
	 */
	struct FTLInfoDynamicEventWarehouse
	{
	public:
		struct FSoftObjectPath                                     TitleIcon;                                               // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                NameTitleText;                                           // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                StatusTopPlayerText;                                     // 0x0030(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     StatusStartIcon;                                         // 0x0048(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                StatusStartText;                                         // 0x0060(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     StatusPauseIcon;                                         // 0x0078(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                StatusPauseText;                                         // 0x0090(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     StatusStopIcon;                                          // 0x00A8(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                StatusStopText;                                          // 0x00C0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     StatusNotOccupiedIcon;                                   // 0x00D8(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                StatusNotOccupiedText;                                   // 0x00F0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     StatusTitleIcon01;                                       // 0x0108(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                StatusTitleText01;                                       // 0x0120(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                StatusValueText01;                                       // 0x0138(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		ETLDynamicEventWarehouseValueType                          StatusValueType01;                                       // 0x0150(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_51W5[0x7];                                   // 0x0151(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     StatusTitleIcon02;                                       // 0x0158(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                StatusTitleText02;                                       // 0x0170(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                StatusValueText02;                                       // 0x0188(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		ETLDynamicEventWarehouseValueType                          StatusValueType02;                                       // 0x01A0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1L3G[0x7];                                   // 0x01A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               ItemTableID;                                             // 0x01A8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                StoreRatioText;                                          // 0x01B8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoDynamicEventScoreInfo
	 * Size -> 0x0108
	 */
	struct FTLInfoDynamicEventScoreInfo
	{
	public:
		struct FSoftObjectPath                                     TitleIcon;                                               // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     StatusStopIcon;                                          // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TitleText;                                               // 0x0030(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ScoreTitleIcon;                                          // 0x0048(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                ScoreTitleText;                                          // 0x0060(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ScoreText;                                               // 0x0078(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TopPlayerScoreTitleIcon;                                 // 0x0090(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TopPlayerScoreTitleText;                                 // 0x00A8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                TopPlayerScoreText;                                      // 0x00C0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                StatusTopPlayerText;                                     // 0x00D8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                StatusStopText;                                          // 0x00F0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoDynamicEventTargetPartsInfo
	 * Size -> 0x0030
	 */
	struct FTLInfoDynamicEventTargetPartsInfo
	{
	public:
		struct FSoftObjectPath                                     PartsIcon;                                               // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                PartsName;                                               // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDynamicEventGuideUIFlag
	 * Size -> 0x0005
	 */
	struct FTLSchemeDynamicEventGuideUIFlag
	{
	public:
		bool                                                       IsShowTime;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsShowScore;                                             // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsShowEventEffect;                                       // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsShowGuildInfo;                                         // 0x0003(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsShowGuildScore;                                        // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDynamicEventProgress
	 * Size -> 0x0208 (FullSize[0x0210] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDynamicEventProgress : public FTableRowBase
	{
	public:
		ETLDynamicEventUIType                                      EventUIType;                                             // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3JWP[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                EventTitle;                                              // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DynamicEventIcon;                                        // 0x0028(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EventUIFrameBGPath;                                      // 0x0040(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                EventDescription;                                        // 0x0058(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       ShowEventScore;                                          // 0x0070(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MUSO[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                EventScoreDescription;                                   // 0x0078(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ShowTimeTitleText;                                       // 0x0090(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MyEventEffectIconPath;                                   // 0x00A8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MyEventScoreIconPath;                                    // 0x00C0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                MyEventScoreTitleText;                                   // 0x00D8(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                MyEventScoreCountText;                                   // 0x00F0(0x0018) Edit, NativeAccessSpecifierPublic
		bool                                                       IsShowEECount;                                           // 0x0108(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ML78[0x7];                                   // 0x0109(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ShowEECountFormat;                                       // 0x0110(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLInfoDynamicEventWarehouse>                WarehouseInfos;                                          // 0x0128(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLInfoDynamicEventScoreInfo>                ScoreInfos;                                              // 0x0138(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                EventTargetName;                                         // 0x0148(0x0018) Edit, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EventTargetIconPath;                                     // 0x0160(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLInfoDynamicEventTargetPartsInfo>          EventTargetPartsInfo;                                    // 0x0178(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MusicPath;                                               // 0x0188(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DEProgressMusicRTPC;                                     // 0x01A0(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AudioTag;                                                // 0x01B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               WarningMessageFormatNone;                                // 0x01B8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               WarningMessageFormatEE;                                  // 0x01C8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               WarningMessageFormatSide;                                // 0x01D8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               WarningMessageFormatEEAndSide;                           // 0x01E8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               HelpTableRow;                                            // 0x01F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FTLSchemeDynamicEventGuideUIFlag                    GuideUIFlagInfo;                                         // 0x0208(0x0005) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       IsArchBoss;                                              // 0x020D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_42PL[0x2];                                   // 0x020E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDynamicEventPrepare
	 * Size -> 0x00C0 (FullSize[0x00C8] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDynamicEventPrepare : public FTableRowBase
	{
	public:
		class FText                                                EventTitle;                                              // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DynamicEventIcon;                                        // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EventUIFrameBGPath;                                      // 0x0038(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                EventDescription;                                        // 0x0050(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ShowTimeTitleText;                                       // 0x0068(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MusicPath;                                               // 0x0080(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DEProgressMusicRTPC;                                     // 0x0098(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AudioTag;                                                // 0x00A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               HelpTableRow;                                            // 0x00B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FTLSchemeDynamicEventGuideUIFlag                    GuideUIFlagInfo;                                         // 0x00C0(0x0005) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9OAG[0x3];                                   // 0x00C5(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDynamicEventCommon
	 * Size -> 0x01B0 (FullSize[0x01B8] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDynamicEventCommon : public FTableRowBase
	{
	public:
		class FText                                                UITitle;                                                 // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                UITitleFormat;                                           // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                GoalText;                                                // 0x0038(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                GoalGuideText;                                           // 0x0050(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TitleBG;                                                 // 0x0068(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               TerritoryTableKey;                                       // 0x0080(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               MapIconTableKey;                                         // 0x0090(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             MapIconPosition;                                         // 0x00A0(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IA1D[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               ShapeLineColorKey;                                       // 0x00B0(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class UTexture*                                            ShapeLineTexture;                                        // 0x00C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsWorldBoss;                                             // 0x00C8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NYSD[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     MusicPath;                                               // 0x00D0(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DEProgressMusicRTPC;                                     // 0x00E8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AudioTag;                                                // 0x00F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DisableRangeBasedCSWhilePrepare;                         // 0x0100(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UIRankRewardTitle;                                       // 0x0118(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<class FName>                                        RankRewardItems;                                         // 0x0130(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                RankRewardDescription;                                   // 0x0140(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                UIEffortRewardTitle;                                     // 0x0158(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<class FName>                                        EffortRewardItems;                                       // 0x0170(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                EffortRewardDescription;                                 // 0x0180(0x0018) Edit, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               RankedRewardListRow;                                     // 0x0198(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               GuildRankedRewardListRow;                                // 0x01A8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDynamicEventSideText
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDynamicEventSideText : public FTableRowBase
	{
	public:
		class FText                                                SideName;                                                // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDynamicEventScoreText
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDynamicEventScoreText : public FTableRowBase
	{
	public:
		class FText                                                ScoreName;                                               // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeDynamicStatLooks
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLSchemeDynamicStatLooks : public FTableRowBase
	{
	public:
		class FText                                                StatName;                                                // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		float                                                      MultiplyFormulaMultiplyFactor;                           // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AddFormulaMultiplyFactor;                                // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                MultiplyFormulaValueFormat;                              // 0x0028(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                AddFormulaValueFormat;                                   // 0x0040(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLEditorTooltip
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FTLEditorTooltip : public FTableRowBase
	{	};

	/**
	 * ScriptStruct TLScheme.TLEditorTooltipItem
	 * Size -> 0x0001
	 */
	struct FTLEditorTooltipItem
	{
	public:
		unsigned char                                              UnknownData_UP6C[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoEffectProp
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLInfoEffectProp : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_4QOL[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UID;                                                     // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEffectGroup                                               Group;                                                   // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L04N[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Abnormal;                                                // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FYTQ[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      projectile_speed;                                        // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    projectile_min_time;                                     // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9IA1[0x4];                                   // 0x0030(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                formula_parameter;                                       // 0x0034(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Apply_Hit_Animation;                                     // 0x003C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZNRP[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    area_range_base;                                         // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Attack_Sound;                                            // 0x0044(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDamageFloaterType                                         damage_floater_type;                                     // 0x004C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       show_effect_hit_floater;                                 // 0x004D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       show_effect_counter_hit_floater;                         // 0x004E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       show_effect_miss_floater;                                // 0x004F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLProjectileType                                          projectile_type;                                         // 0x0050(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       is_airborne;                                             // 0x0051(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q0AC[0xE];                                   // 0x0052(0x000E) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoEffectPropLooksRagdoll
	 * Size -> 0x0003
	 */
	struct FTLInfoEffectPropLooksRagdoll
	{
	public:
		ERagdollType                                               RagdollType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERagdollPosition                                           RagdollPosition;                                         // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERagdollPower                                              RagdollPower;                                            // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoEffectPropLooks
	 * Size -> 0x00C8 (FullSize[0x00D0] - InheritedSize[0x0008])
	 */
	struct FTLInfoEffectPropLooks : public FTableRowBase
	{
	public:
		class UTexture2D*                                          FloaterIconPath;                                         // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Sct;                                                     // 0x0010(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHitSctDir                                                 HitSctDir;                                               // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FA2Q[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFloatRange                                         HitSctDirRoll;                                           // 0x002C(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatRange                                         HitSctDirPitch;                                          // 0x003C(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatRange                                         HitSctDirYaw;                                            // 0x004C(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLInfoEffectPropLooksRagdoll                       Ragdoll;                                                 // 0x005C(0x0003) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       SkipDefaultHitSound;                                     // 0x005F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       SkipDefaultHitArmorSound;                                // 0x0060(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3LWT[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     HitSound;                                                // 0x0068(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PrimeSkillToggleSlotOnWhenFail;                          // 0x0080(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PrimeSkillToggleSlotOnWhenSuccess;                       // 0x0081(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GRTQ[0x6];                                   // 0x0082(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     SctForAbnormalCaster;                                    // 0x0088(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideHitEffectDirectionByLastUsedSkill;              // 0x00A0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideHitEffectDirectionByLastHitSkill;               // 0x00A1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideAttackDirectionByLastUsedSkill;                 // 0x00A2(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverrideAttackDirectionByLastHitSkill;                  // 0x00A3(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillInternalIndex;                                      // 0x00A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IgnoreSameAbnormalFloater;                               // 0x00A8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S9B7[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     ShieldHitSct;                                            // 0x00B0(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ToggleSkillsOff;                                         // 0x00C8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V9AO[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoEmoji
	 * Size -> 0x0090 (FullSize[0x00A0] - InheritedSize[0x0010])
	 */
	struct FTLInfoEmoji : public FTLTableRowBase
	{
	public:
		struct FSoftObjectPath                                     Image;                                                   // 0x0010(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     FlipBookImage;                                           // 0x0028(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLImageSpecification                               ImageSpec;                                               // 0x0040(0x0014) Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FTLImageSpecification                               FlipBookImageSpec;                                       // 0x0054(0x0014) Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic
		TArray<class FText>                                        Commands;                                                // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FVector2D                                           JustOneSize;                                             // 0x0078(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               SocialMotion;                                            // 0x0080(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               EmojiTab;                                                // 0x0090(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoEmojiTab
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FTLInfoEmojiTab : public FTLTableRowBase
	{
	public:
		struct FSoftObjectPath                                     TabImage;                                                // 0x0010(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEmojiTabType                                              EmojiTabType;                                            // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G6ZF[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLEnchantLooks
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLEnchantLooks : public FTableRowBase
	{
	public:
		int32_t                                                    EnchantLevel;                                            // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3MPH[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                EnchantNameText;                                         // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0028(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLWeaponSet
	 * Size -> 0x000C
	 */
	struct FTLWeaponSet
	{
	public:
		EItemCategory                                              MainHand;                                                // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              OffHand;                                                 // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W7L4[0xA];                                   // 0x0002(0x000A) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoItemSctOverride
	 * Size -> 0x0048
	 */
	struct FTLInfoItemSctOverride
	{
	public:
		struct FSoftObjectPath                                     SctDropStay;                                             // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctItemAbsorb;                                           // 0x0018(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctItemLeave;                                            // 0x0030(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemHiveTransfromInfo
	 * Size -> 0x0034
	 */
	struct FTLItemHiveTransfromInfo
	{
	public:
		bool                                                       bOverride;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EFLS[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             OffsetPosition;                                          // 0x0004(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DrawScale;                                               // 0x0010(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Direction;                                               // 0x001C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0028(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoItemLooks
	 * Size -> 0x0208 (FullSize[0x0210] - InheritedSize[0x0008])
	 */
	struct FTLInfoItemLooks : public FTableRowBase
	{
	public:
		unsigned char                                              IconPath[0x28];                                          // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              HighResIconPath[0x28];                                   // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FText                                                UIName;                                                  // 0x0058(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0070(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     HiveEntity;                                              // 0x0088(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     ExtraHiveEntity;                                         // 0x0090(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLNameplateState                                          NamepateState;                                           // 0x0098(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_31J0[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     InteractionConditionIconPath;                            // 0x00A0(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SoundType;                                               // 0x00B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OverrideDropSound;                                       // 0x00C0(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OverrideUseSound;                                        // 0x00D8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemMaterial                                              Material;                                                // 0x00F0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z7JZ[0x7];                                   // 0x00F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     EquipSct;                                                // 0x00F8(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        EquipSctAbnormalIds;                                     // 0x0110(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       ShowItemAcquisition;                                     // 0x0120(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CurationTarget;                                          // 0x0121(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ForceAutoPickup;                                         // 0x0122(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowUseSystemMessage;                                    // 0x0123(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           OverwriteHeadUIOffset;                                   // 0x0124(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ProjectileSctCondition;                                  // 0x012C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AmmoLevel;                                               // 0x0134(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLInfoItemSctOverride                              ItemSctOverride;                                         // 0x0138(0x0048) Edit, NativeAccessSpecifierPublic
		ETLGachaCategory                                           GachaCategory;                                           // 0x0180(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C438[0x7];                                   // 0x0181(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              GachaIconPath[0x28];                                     // 0x0188(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      GachaIconSize;                                           // 0x01B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KPKZ[0x4];                                   // 0x01B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FText>                                        ItemAcquisitionPlaceList;                                // 0x01B8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLItemHiveTransfromInfo                            EnchantHiveTransformData;                                // 0x01C8(0x0034) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P04M[0x14];                                  // 0x01FC(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLEventEffect
	 * Size -> 0x0058 (FullSize[0x0268] - InheritedSize[0x0210])
	 */
	struct FTLEventEffect : public FTLInfoItemLooks
	{
	public:
		int32_t                                                    UID;                                                     // 0x0210(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WB3M[0x8];                                   // 0x0214(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EBool                                                      AutoPick;                                                // 0x021C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemGrade                                                 ItemGrade;                                               // 0x021D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              ItemCategory;                                            // 0x021E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KGBF[0x1];                                   // 0x021F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     NameplateIconPath;                                       // 0x0220(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EventEffectIcon;                                         // 0x0238(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UINameTextOnly;                                          // 0x0250(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeEventScene
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLSchemeEventScene : public FTableRowBase
	{
	public:
		unsigned char                                              EventSceneObjectClass[0x28];                             // 0x0008(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeFieldBoss
	 * Size -> 0x00F0 (FullSize[0x00F8] - InheritedSize[0x0008])
	 */
	struct FTLSchemeFieldBoss : public FTableRowBase
	{
	public:
		class FText                                                BossName;                                                // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                BossDesc;                                                // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     IconPath;                                                // 0x0038(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               MapIconTableKey;                                         // 0x0050(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               FieldBossRace;                                           // 0x0060(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             MapIconPosition;                                         // 0x0070(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PS7N[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TooltipDescription;                                      // 0x0080(0x0018) Edit, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ShapeLineColorKey;                                       // 0x0098(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PrepareMusicPath;                                        // 0x00A8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PrepareAudioTag;                                         // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ProgressMusicPath;                                       // 0x00C8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ProgressAudioTag;                                        // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               HelpTableRow;                                            // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLFileInfo
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLFileInfo : public FTableRowBase
	{
	public:
		class FString                                              FileId;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Filename;                                                // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeFixedTermEvent
	 * Size -> 0x0098 (FullSize[0x00A0] - InheritedSize[0x0008])
	 */
	struct FTLSchemeFixedTermEvent : public FTableRowBase
	{
	public:
		class FText                                                TitleText;                                               // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                DescText;                                                // 0x0020(0x0018) Edit, NativeAccessSpecifierPublic
		struct FLinearColor                                        ScheduleBarColor;                                        // 0x0038(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ImagePath;                                               // 0x0048(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           StartTime;                                               // 0x0060(0x0008) Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDateTime                                           EndTime;                                                 // 0x0068(0x0008) Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEventCalenderRelatedType                                  RelatedType;                                             // 0x0074(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1CXA[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EventUrl;                                                // 0x0078(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ItemIconPath;                                            // 0x0088(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoFoTargeting
	 * Size -> 0x0002
	 */
	struct FTLInfoFoTargeting
	{
	public:
		bool                                                       TargetScanEnable;                                        // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AutoTargetEnable;                                        // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoFo
	 * Size -> 0x01D8 (FullSize[0x01E0] - InheritedSize[0x0008])
	 */
	struct FTLInfoFo : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_JNNG[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UID;                                                     // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InteractionDistance;                                     // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InteractionHeightTop;                                    // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InteractionHeightBottom;                                 // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinInteractionDist;                                      // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInteractionLookAt;                                      // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_90WD[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PickingRadiusRatio;                                      // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BoxWHRatio;                                              // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickingBoxHeightRatio;                                   // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickingBoxZPosOffset;                                    // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IgnoreCapsuleCollision;                                  // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MPJA[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FightingRadius;                                          // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionRadiusRatio;                                    // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Height;                                                  // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UIName;                                                  // 0x0048(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Subtitle;                                                // 0x0060(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bSiegeWarfareFo;                                         // 0x0078(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B7LF[0x17];                                  // 0x0079(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UHiveEntityData*                                     HiveEntity;                                              // 0x0090(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHiveEntityInitialized;                                  // 0x0098(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFoSubType                                                 SubType;                                                 // 0x0099(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2570[0x6];                                   // 0x009A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     StateSct;                                                // 0x00A0(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     InteractableSct;                                         // 0x00B8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLNameplateState                                          NameplateState;                                          // 0x00D0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowHpBarInNameplate;                                   // 0x00D1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowHpBarInTargetInfo;                                  // 0x00D2(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X4MR[0x5];                                   // 0x00D3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     DeathSct;                                                // 0x00D8(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               MapIconId;                                               // 0x00F0(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               SiegeWarfareMarkupImage;                                 // 0x0100(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                           OverwriteHeadUIOffset;                                   // 0x0110(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     InteractionStartSoundEvent;                              // 0x0118(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     InteractionEndSoundEvent;                                // 0x0130(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLInteractionCameraPreset                          InteractionCameraPreset;                                 // 0x0148(0x0028) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     NameplateIcon;                                           // 0x0170(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLBodyType                                                BodyType;                                                // 0x0188(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1XAT[0x7];                                   // 0x0189(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ShowDropMessage;                                         // 0x0190(0x0018) Edit, NativeAccessSpecifierPublic
		bool                                                       bSpecialHookType;                                        // 0x01A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LWHJ[0x7];                                   // 0x01A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               tribe;                                                   // 0x01B0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		ETLCreatureRank                                            CreatureRank;                                            // 0x01C0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P75F[0x3];                                   // 0x01C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   Level;                                                   // 0x01C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       Tags;                                                    // 0x01C8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLInfoFoTargeting                                  Targeting;                                               // 0x01D8(0x0002) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bSimplePicking;                                          // 0x01DA(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TJRO[0x5];                                   // 0x01DB(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeForceFeedback
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeForceFeedback : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     ForceFeedbackPath;                                       // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoFormulaRange
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLInfoFormulaRange : public FTableRowBase
	{
	public:
		int32_t                                                    skill_level;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERangeFormulaType                                          formula_type;                                            // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UXIS[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Add;                                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    mul;                                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Min;                                                     // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Max;                                                     // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    factor;                                                  // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    factor2;                                                 // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       add_fighting_radius;                                     // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H9XF[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                dynamic_stat_id;                                         // 0x002C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G6F0[0xC];                                   // 0x0034(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      tooltip1;                                                // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      tooltip2;                                                // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoFormulaRanges
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLInfoFormulaRanges : public FTableRowBase
	{
	public:
		TArray<struct FTLInfoFormulaRange>                         RangeFormula;                                            // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoFormulaHeight
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLInfoFormulaHeight : public FTableRowBase
	{
	public:
		int32_t                                                    skill_level;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHeightFormulaType                                         formula_type;                                            // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6ESP[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Add;                                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    mul;                                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Min;                                                     // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Max;                                                     // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    factor;                                                  // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    factor2;                                                 // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                dynamic_stat_id;                                         // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DQGD[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      tooltip1;                                                // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      tooltip2;                                                // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoFormulaHeights
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLInfoFormulaHeights : public FTableRowBase
	{
	public:
		TArray<struct FTLInfoFormulaHeight>                        HeightFormula;                                           // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoFormulaParameter
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLInfoFormulaParameter : public FTableRowBase
	{
	public:
		int32_t                                                    skill_level;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFormulaType                                               formula_type;                                            // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OAX7[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Min;                                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Max;                                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Add;                                                     // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    mul;                                                     // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    mul2;                                                    // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    mul3;                                                    // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                dynamic_stat_id;                                         // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O0K8[0x8];                                   // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      tooltip1;                                                // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      tooltip2;                                                // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoFormulaParameters
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLInfoFormulaParameters : public FTableRowBase
	{
	public:
		TArray<struct FTLInfoFormulaParameter>                     FormulaParameter;                                        // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionFilterDetail
	 * Size -> 0x0010
	 */
	struct FTLSCTConditionFilterDetail
	{
	public:
		class FName                                                SCTCondition;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HPRangeId;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsOperating;                                             // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B033[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionFilter
	 * Size -> 0x0010
	 */
	struct FTLSCTConditionFilter
	{
	public:
		TArray<struct FTLSCTConditionFilterDetail>                 FilterList;                                              // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionCodexFilterDetail
	 * Size -> 0x0028
	 */
	struct FTLSCTConditionCodexFilterDetail
	{
	public:
		class FName                                                SCTCondition;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLGuidTableRowHandle>                       CompletedCodexObjectiveGuid;                             // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLGuidTableRowHandle>                       IncompletedCodexObjectiveGuid;                           // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionCodexFilter
	 * Size -> 0x0010
	 */
	struct FTLSCTConditionCodexFilter
	{
	public:
		TArray<struct FTLSCTConditionCodexFilterDetail>            FilterList;                                              // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionGuildFilterDetail
	 * Size -> 0x0028
	 */
	struct FTLSCTConditionGuildFilterDetail
	{
	public:
		class FName                                                SCTCondition;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BelowGuildLevel;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AboveGuildLevel;                                         // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               OwnCastleId;                                             // 0x0010(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       IsCastleOwnerGuild;                                      // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3DT6[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionGuildFilter
	 * Size -> 0x0010
	 */
	struct FTLSCTConditionGuildFilter
	{
	public:
		TArray<struct FTLSCTConditionGuildFilterDetail>            FilterList;                                              // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionCollectionFilterDetail
	 * Size -> 0x000C
	 */
	struct FTLSCTConditionCollectionFilterDetail
	{
	public:
		class FName                                                SCTCondition;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   CodexCollectionPageUid;                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionCollectionFilter
	 * Size -> 0x0010
	 */
	struct FTLSCTConditionCollectionFilter
	{
	public:
		TArray<struct FTLSCTConditionCollectionFilterDetail>       FilterList;                                              // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionDeveloperLetterFilterDetail
	 * Size -> 0x000C
	 */
	struct FTLSCTConditionDeveloperLetterFilterDetail
	{
	public:
		class FName                                                SCTCondition;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   DeveloperUid;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionDeveloperLetterFilter
	 * Size -> 0x0010
	 */
	struct FTLSCTConditionDeveloperLetterFilter
	{
	public:
		TArray<struct FTLSCTConditionDeveloperLetterFilterDetail>  FilterList;                                              // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionWayPointFilterDetail
	 * Size -> 0x000C
	 */
	struct FTLSCTConditionWayPointFilterDetail
	{
	public:
		ETLTerritoryFogState                                       StateType;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z99H[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SCTCondition;                                            // 0x0004(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionWayPointFilter
	 * Size -> 0x0010
	 */
	struct FTLSCTConditionWayPointFilter
	{
	public:
		TArray<struct FTLSCTConditionWayPointFilterDetail>         FilterList;                                              // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionCodexAchievementFilterDetail
	 * Size -> 0x0028
	 */
	struct FTLSCTConditionCodexAchievementFilterDetail
	{
	public:
		class FName                                                SCTCondition;                                            // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLGuidTableRowHandle>                       CompletedCodexObjectiveGuid;                             // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLGuidTableRowHandle>                       IncompletedCodexObjectiveGuid;                           // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionCodexAchievementFilter
	 * Size -> 0x0010
	 */
	struct FTLSCTConditionCodexAchievementFilter
	{
	public:
		TArray<struct FTLSCTConditionCodexAchievementFilterDetail> FilterList;                                              // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLFoStateTransitionData
	 * Size -> 0x0010
	 */
	struct FTLFoStateTransitionData
	{
	public:
		struct FTLDataTableRowHandle                               InteractionId;                                           // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoFoState
	 * Size -> 0x00C8 (FullSize[0x00D0] - InheritedSize[0x0008])
	 */
	struct FTLInfoFoState : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_82AQ[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SCTCondition;                                            // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFilterType                                                ActiveFilter;                                            // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2WOW[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLSCTConditionFilter                               SCTConditionFilter;                                      // 0x0020(0x0010) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLSCTConditionCodexFilter                          SCTConditionCodexFilter;                                 // 0x0030(0x0010) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLSCTConditionGuildFilter                          SCTConditionGuildFilter;                                 // 0x0040(0x0010) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLSCTConditionCollectionFilter                     SCTConditionCollectionFilter;                            // 0x0050(0x0010) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLSCTConditionDeveloperLetterFilter                SCTConditionDeveloperLetterFilter;                       // 0x0060(0x0010) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLSCTConditionWayPointFilter                       SCTConditionWayPointFilter;                              // 0x0070(0x0010) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLSCTConditionCodexAchievementFilter               SCTConditionCodexAchievementFilter;                      // 0x0080(0x0010) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLFoStateTransitionData>                    TransitionList;                                          // 0x0090(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		uint32_t                                                   MaxInteractionUserCount;                                 // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S7NN[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               DropInteractionId;                                       // 0x00A8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                RoomCollisionTag;                                        // 0x00B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HitVolumeTag;                                            // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       NameplateHide;                                           // 0x00C8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsEntryCondition;                                        // 0x00C9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VCDT[0x6];                                   // 0x00CA(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSCTConditionHPFilterRange
	 * Size -> 0x0008
	 */
	struct FTLSCTConditionHPFilterRange
	{
	public:
		uint32_t                                                   UpperLimit;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   LowerLimit;                                              // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCharacterCardInfo
	 * Size -> 0x0004
	 */
	struct FTLCharacterCardInfo
	{
	public:
		int32_t                                                    MessageMaximum;                                          // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGuildCost
	 * Size -> 0x0010
	 */
	struct FTLGuildCost
	{
	public:
		EMoneyType                                                 MoneyType;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9FAP[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MoneyCost;                                               // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MonarchTeamLevelLimit;                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildLevelLimit;                                         // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGuildResourceCost
	 * Size -> 0x0020
	 */
	struct FTLGuildResourceCost
	{
	public:
		struct FTLDataTableRowHandle                               GuildResourceTableRow;                                   // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MonarchTeamLevelLimit;                                   // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildLevelLimit;                                         // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3Y6E[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLCustomizationCost
	 * Size -> 0x0020
	 */
	struct FTLCustomizationCost
	{
	public:
		int64_t                                                    gold;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    Diamond;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ItemId;                                                  // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    ItemQuantity;                                            // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalCommonItemSortTable
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLGlobalCommonItemSortTable : public FTableRowBase
	{
	public:
		TArray<EItemSortType>                                      ItemSortOperator;                                        // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EItemCategory>                                      EquipIndex;                                              // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EItemCategory>                                      UsableIndex;                                             // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EItemCategory>                                      MiscIndex;                                               // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalCommonMoneyCost
	 * Size -> 0x0008
	 */
	struct FTLGlobalCommonMoneyCost
	{
	public:
		EMoneyType                                                 Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2AG6[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalCommonPVPHistory
	 * Size -> 0x0024
	 */
	struct FTLGlobalCommonPVPHistory
	{
	public:
		int32_t                                                    TauntExpirationTimeSeconds;                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TauntMaxCount;                                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGlobalCommonMoneyCost                            TauntCost;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    RevengeExpirationTimeSeconds;                            // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RevengeMaxCount;                                         // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGlobalCommonMoneyCost                            RevengeCost;                                             // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    RevengeTrackingTimeSeconds;                              // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalCommonWorldClock
	 * Size -> 0x0010
	 */
	struct FTLGlobalCommonWorldClock
	{
	public:
		uint32_t                                                   GameHoursInADay;                                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   GameMonthToDays;                                         // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   BeginDayHour;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   EndDayHour;                                              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollSummonByAchievement
	 * Size -> 0x0020
	 */
	struct FTLMagicDollSummonByAchievement
	{
	public:
		struct FTLGuidTableRowHandle                               AchievementGuid;                                         // 0x0000(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                MagicDollId;                                             // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalCommonMagicDoll
	 * Size -> 0x0050
	 */
	struct FTLGlobalCommonMagicDoll
	{
	public:
		int32_t                                                    SummonCooldownTimeSeconds;                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TWUX[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLMagicDollSummonByAchievement>             MagicDollSummonByAchievements;                           // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLGuidTableRowHandle                               DismissMagicDollByAchievementGuid;                       // 0x0018(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGuidTableRowHandle                               CanSummonByUserAfterAchievementGuid;                     // 0x0030(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    MagicDollPotionItemNum;                                  // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PotionItemLackAlertCount;                                // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLDistributionSetting
	 * Size -> 0x002C
	 */
	struct FTLDistributionSetting
	{
	public:
		int32_t                                                    SiegeWarfareRewardDistributionExpirationMinutes;         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildDistributionExpirationMinutes;                      // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PostItemAcquisition;                                     // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PostProfitDistribution;                                  // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PostExpirationAcquisition;                               // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PostRefund;                                              // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildBiddingAddMinPercent;                               // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGuildDistributionItemSettingTable
	 * Size -> 0x0020
	 */
	struct FTLGuildDistributionItemSettingTable
	{
	public:
		class FText                                                FilterNameText;                                          // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		EItemGrade                                                 FilterDefaultItemGrade;                                  // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemGrade                                                 FilterMinGrade;                                          // 0x0019(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemGrade                                                 FilterMaxGrade;                                          // 0x001A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N70C[0x5];                                   // 0x001B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLWindGradeLimit
	 * Size -> 0x0004
	 */
	struct FTLWindGradeLimit
	{
	public:
		int32_t                                                    GradeLimit;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLFishingGradeParam
	 * Size -> 0x0010
	 */
	struct FTLFishingGradeParam
	{
	public:
		int32_t                                                    BiteCount;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BiteIntervalMilliSec;                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HookTimeLimitMilliSec;                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HookBubbleCount;                                         // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalCommonUserPost
	 * Size -> 0x0058
	 */
	struct FTLGlobalCommonUserPost
	{
	public:
		int32_t                                                    LevelLimit;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GZ49[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, struct FTLGlobalCommonMoneyCost>             Cost;                                                    // 0x0008(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalCommonPost
	 * Size -> 0x0128
	 */
	struct FTLGlobalCommonPost
	{
	public:
		int32_t                                                    ReceiverMaxLength;                                       // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TitleMaxLength;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BodyMaxLength;                                           // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnreadPostRetentionDuration;                             // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ReadPostRetentionDuration;                               // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PostStoreCount;                                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildLevelAvailableGuildPost;                            // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UserPostMaxCount;                                        // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGlobalCommonUserPost                             UserPostToPlayer;                                        // 0x0020(0x0058) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalCommonUserPost                             UserPostToGuild;                                         // 0x0078(0x0058) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalCommonUserPost                             UserPostToUnion;                                         // 0x00D0(0x0058) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalCommonReport
	 * Size -> 0x0004
	 */
	struct FTLGlobalCommonReport
	{
	public:
		int32_t                                                    CotentsMaxLength;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGuildSkillSetting
	 * Size -> 0x0008
	 */
	struct FTLGuildSkillSetting
	{
	public:
		float                                                      GuildSkillResurrectionRadius;                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GuildSkillResurrectionHeight;                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGuildRewardBoxSetting
	 * Size -> 0x0014
	 */
	struct FTLGuildRewardBoxSetting
	{
	public:
		int32_t                                                    GuildRewardBoxGuildLevelLimit;                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildRewardBoxExpirationHours;                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildRewardBoxContentRewardExpirationHours;              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildRewardBoxBmRewardExpirationHours;                   // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildRewardBoxGoalPoint;                                 // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemEnchantTransferableGrades
	 * Size -> 0x0010
	 */
	struct FTLItemEnchantTransferableGrades
	{
	public:
		TArray<EItemGrade>                                         ItemGrades;                                              // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLEnchantMaxLevel
	 * Size -> 0x0008
	 */
	struct FTLEnchantMaxLevel
	{
	public:
		EItemGrade                                                 ItemGrade;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_85PI[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxLevel;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemEnchantSetting
	 * Size -> 0x00A8
	 */
	struct FTLItemEnchantSetting
	{
	public:
		TMap<EItemGrade, struct FTLItemEnchantTransferableGrades>  ItemEnchantTransferableGrades;                           // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EItemGrade, struct FTLEnchantMaxLevel>                ItemEnchantMaxLevels;                                    // 0x0050(0x0050) Edit, NativeAccessSpecifierPublic
		int32_t                                                    ItemEnchantTransferCount;                                // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GQFV[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLResourceTraitInfo
	 * Size -> 0x0028
	 */
	struct FTLResourceTraitInfo
	{
	public:
		int32_t                                                    EnchantSuccessProbability;                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6PSB[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    EnchantGold;                                             // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnchantPaybackBlessPoint;                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BlessPointForPercent;                                    // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TransferSuccessProbability;                              // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZISR[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    TransferGold;                                            // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemGradeTraitInfos
	 * Size -> 0x0058
	 */
	struct FTLItemGradeTraitInfos
	{
	public:
		int32_t                                                    ItemTraitMaxLevel;                                       // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MHBO[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EItemGrade, struct FTLResourceTraitInfo>              ResourceTraitInfos;                                      // 0x0008(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemTraitSetting
	 * Size -> 0x0058
	 */
	struct FTLItemTraitSetting
	{
	public:
		int32_t                                                    MaxTraitCount;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FUDL[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EItemGrade, struct FTLItemGradeTraitInfos>            TraitInfoMap;                                            // 0x0008(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInvenSetting
	 * Size -> 0x0014
	 */
	struct FTLInvenSetting
	{
	public:
		int32_t                                                    MaxInventorySlotCount;                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxTemporaryInventorySlotCount;                          // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TemporaryInventoryItemLifeTimeMinutes;                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxKeyringSlotCount;                                     // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DefaultStorageSlotCount;                                 // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGlobalCommon
	 * Size -> 0x0A50 (FullSize[0x0A58] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGlobalCommon : public FTableRowBase
	{
	public:
		struct FTLCharacterCardInfo                                CharacterCardInfo;                                       // 0x0008(0x0004) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGuildCost                                        GuildCreateCost;                                         // 0x000C(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGuildCost                                        GuildTauntCost;                                          // 0x001C(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UZHZ[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLGuildResourceCost                                GuildChangeEmblemCost;                                   // 0x0030(0x0020) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    GuildRejoinWaitTimeSeconds;                              // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildHomeEnterableLevel;                                 // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildPVPRevengeSearchSecond;                             // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildPVPRevengeSearchCost;                               // 0x005C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildAttackedAlertSendingSeconds;                        // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildAttackedAlertValidSeconds;                          // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildAttackedAlertMessageIntervalSec;                    // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AdditionalFeePercentPerPenaltyKillCount;                 // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LawfulAlignmentPoint;                                    // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NeutralAlignmentPoint;                                   // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChaoticAlignmentPoint;                                   // 0x0078(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinimumPolymorphableLevel;                               // 0x007C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLCustomizationCost                                CustomizationCost;                                       // 0x0080(0x0020) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    ProfileImageTakeCooldownSeconds;                         // 0x00A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SelfDefenseDuration;                                     // 0x00A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SelfDefenseTimeoutAlarmDuration;                         // 0x00A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChaoticDuration;                                         // 0x00AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LawfulMaxAlignmentPoint;                                 // 0x00B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NeutralMaxAlignmentPoint;                                // 0x00B4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChaoticMinAlignmentPoint;                                // 0x00B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PerfectlyChaoticMinAlignmentPoint;                       // 0x00BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecoverItemMaxCount;                                     // 0x00C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecoverExpMaxCount;                                      // 0x00C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecoverFreeMaxCount;                                     // 0x00C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecoverExpRateUsingAdena;                                // 0x00CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecoverableTimeSeconds;                                  // 0x00D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BaseTaxRatePercent;                                      // 0x00D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ManorTaxRatePercentMin;                                  // 0x00D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ManorTaxRatePercentMax;                                  // 0x00DC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterCreateMaxStatPoint;                             // 0x00E0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UserIncreaseMaxStatPoint;                                // 0x00E4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int32_t, int32_t>                                     ConsumptionStatPoints;                                   // 0x00E8(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    ExchangeSlotSize;                                        // 0x0138(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExchangeRestrictionTimeSeconds;                          // 0x013C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HangTimeSec;                                             // 0x0140(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpHeightMax;                                           // 0x0144(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           GlidingAccelDownwardMinMaxModifier;                      // 0x0148(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChangeJumpToGlidingHeight;                               // 0x0150(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndFastGlidingHeight;                                    // 0x0154(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndNormalGlidingHeight;                                  // 0x0158(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndDropGlidingHeight;                                    // 0x015C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndSlowDownGlidingHeight;                                // 0x0160(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndFastGlidingDegree;                                    // 0x0164(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndNormalGlidingDegree;                                  // 0x0168(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndDropGlidingDegree;                                    // 0x016C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndSlowDownGlidingDegree;                                // 0x0170(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EndFastGlidingActingDuration;                            // 0x0174(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EndNormalGlidingActingDuration;                          // 0x0178(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EndDropGlidingActingDuration;                            // 0x017C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EndSlowDownGlidingActingDuration;                        // 0x0180(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GlidingMinDuration;                                      // 0x0184(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LandingDuration;                                         // 0x0188(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlidingIgnoreGravitySec;                                 // 0x018C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlidingJumpStartCoolTimeSec;                             // 0x0190(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlidingJumpCoolTimeSec;                                  // 0x0194(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlidingJumpMinDurationSec;                               // 0x0198(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientMoveModeWalkSpeedRatio;                            // 0x019C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientMoveModeWallFollowingSpeedRatio;                   // 0x01A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlidingBaseSpeed;                                        // 0x01A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChangeSwimAnimHeight_Enter;                              // 0x01A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChangeSwimAnimHeight_Leave;                              // 0x01AC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ContentsDailyResetHour;                                  // 0x01B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDayOfWeekScheme                                           ContentsWeeklyResetDayOfWeek;                            // 0x01B4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OBAW[0x3];                                   // 0x01B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DungeonPointDailyChargeHour;                             // 0x01B8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DungeonPointInitialGiftPercent;                          // 0x01BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NpcContractDailyRefreshCount;                            // 0x01C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BmContractDailyRefreshCount;                             // 0x01C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TradableLevel;                                           // 0x01C8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PurchaseMaxCount;                                        // 0x01CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SellMinPrice;                                            // 0x01D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RefreshTradePriceIntervalSec;                            // 0x01D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EMaterialCategory, class FName>                       RepresentativeMaterialItems;                             // 0x01D8(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    WeaponMasteryNodeSelectionCount;                         // 0x0228(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponMasterySecondaryWeaponCombinationPointGainPercent; // 0x022C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGlobalCommonItemSortTable                        ItemSortTable;                                           // 0x0230(0x0048) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<EItemCategory>                                      QuickStoreCategoryList;                                  // 0x0278(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    AutoCombatDefaultRangeCm;                                // 0x0288(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AutoCombatDailyBaseUsableMinutes;                        // 0x028C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PcMaxRangeCm;                                            // 0x0290(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HVBG[0x4];                                   // 0x0294(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            TutorialMapIds;                                          // 0x0298(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                BmTutorialItemId;                                        // 0x02A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               BmTutorialItemRow;                                       // 0x02B0(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int64_t                                                    BmTutorialAchievementGuid;                               // 0x02C0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bActiveBmTutorial;                                       // 0x02C8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FCO1[0x3];                                   // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExternalForceMaxStepHeight;                              // 0x02CC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxStepHeightDefault;                                    // 0x02D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TimeLimitDungeonResetHour;                               // 0x02D4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UserPinMaxCount;                                         // 0x02D8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PartyPinMaxCount;                                        // 0x02DC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildPinMaxCount;                                        // 0x02E0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnionPinMaxCount;                                        // 0x02E4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OrderPinMaxCount;                                        // 0x02E8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SIKM[0x4];                                   // 0x02EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      UIGroupTextList;                                         // 0x02F0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLGlobalCommonPVPHistory                           PVPHistory;                                              // 0x0300(0x0024) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalCommonWorldClock                           WorldClock;                                              // 0x0324(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AwakeningSkillLevel;                                     // 0x0334(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxSkillLevel;                                           // 0x0338(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxItemUILevel;                                          // 0x033C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HitTimeCompensation;                                     // 0x0340(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                DefaultAmmoItemName;                                     // 0x0344(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_30FV[0xC];                                   // 0x034C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLGlobalCommonMagicDoll                            MagicDoll;                                               // 0x0358(0x0050) Edit, NativeAccessSpecifierPublic
		struct FTLDistributionSetting                              DistributionSetting;                                     // 0x03A8(0x002C) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    TaxDeliveryMinDiamond;                                   // 0x03D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TaxDeliveryMinAdena;                                     // 0x03D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildDonationItemPerCount;                               // 0x03DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildDonationRewardGuildCoin;                            // 0x03E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildDonationRewardReputation;                           // 0x03E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildDonationRewardRankPoint;                            // 0x03E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildDonationRewardGuildRewardBoxPoint;                  // 0x03EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildDonationMaxRechargeCount;                           // 0x03F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildDonationRechargeSec;                                // 0x03F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TaxDeliveryReservationInterval;                          // 0x03F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeathEffectBlendTime;                                    // 0x03FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnionMaximum;                                            // 0x0400(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnionCreateLevelLimit;                                   // 0x0404(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMoneyType                                                 UnionCreateMoneyType;                                    // 0x0408(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AAQ3[0x3];                                   // 0x0409(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UnionCreateCost;                                         // 0x040C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnionWaitMinute;                                         // 0x0410(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnionJoinLevelLimit;                                     // 0x0414(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnionInviteWaitSecond;                                   // 0x0418(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnionInviteRefuseWaitSecond;                             // 0x041C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UinonDissolutionWaitMinute;                              // 0x0420(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnionObserverMaximum;                                    // 0x0424(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnionEnemyMaximum;                                       // 0x0428(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnionAllyMaximum;                                        // 0x042C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnionAllyAskMaximum;                                     // 0x0430(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnionAllyReceiveMaximum;                                 // 0x0434(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PcRelationshipFavoriteMaxCount;                          // 0x0438(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PcRelationshipUnfavoriteMaxCount;                        // 0x043C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PcRelationshipBlockMaxCount;                             // 0x0440(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PcRelationshipFriendMaxCount;                            // 0x0444(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FriendInviteMaxCount;                                    // 0x0448(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FriendInviteWaitTimeSeconds;                             // 0x044C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OccupationProtectDurationSecond;                         // 0x0450(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OccupationBoostGaugePercent;                             // 0x0454(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DistributionAdenaFeePercent;                             // 0x0458(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DistributionDiamondFeePercent;                           // 0x045C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildDistributionStorageOwnershipMinute;                 // 0x0460(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildDistributionStorageLimitHour;                       // 0x0464(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildDistributionLimitHour;                              // 0x0468(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildDistributionMemberJoinMinute;                       // 0x046C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildDistributionMemberReputation;                       // 0x0470(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L6P8[0x4];                                   // 0x0474(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLGuildDistributionItemSettingTable                GuildDistributionEquipItemSettings;                      // 0x0478(0x0020) Edit, NativeAccessSpecifierPublic
		struct FTLGuildDistributionItemSettingTable                GuildDistributionSkillbookItemSettings;                  // 0x0498(0x0020) Edit, NativeAccessSpecifierPublic
		struct FTLGuildDistributionItemSettingTable                GuildDistributionEtcItemSettings;                        // 0x04B8(0x0020) Edit, NativeAccessSpecifierPublic
		int32_t                                                    SeasonPassGracePeriod;                                   // 0x04D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RotationEventGracePeriod;                                // 0x04DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NonPvPDynamicEventRankingModify;                         // 0x04E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B13W[0x4];                                   // 0x04E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EItemGrade, int32_t>                                  RotationEventItemRankingGradeModify;                     // 0x04E8(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EItemGrade, int32_t>                                  RotationEventItemEnchantRankingGradeModify;              // 0x0538(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EItemGrade, int32_t>                                  RotationEventAccessaryItemRankingGradeModify;            // 0x0588(0x0050) Edit, NativeAccessSpecifierPublic
		int32_t                                                    RotationEventJoinLevel;                                  // 0x05D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TreausreBoxKeyDeleteReadyHour;                           // 0x05DC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        GuildRaidRechargeItemNames;                              // 0x05E0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        FieldBossGuildRaidRechargeItemNames;                     // 0x05F0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        WorldBossGuildRaidRechargeItemNames;                     // 0x0600(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<int32_t, class FName>                                 GuildRaidCountdownList;                                  // 0x0610(0x0050) Edit, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               SkillWarpReturn;                                         // 0x0660(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3SZP[0x8];                                   // 0x0670(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               SkillEmergencyExit;                                      // 0x0678(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z4IZ[0x8];                                   // 0x0688(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLWindGradeLimit>                           WindGradeLimits;                                         // 0x0690(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               DungeonPointUnlockMemorialRecordRow;                     // 0x06A0(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               RegionStoneUnlockMemorialRecordRow;                      // 0x06B0(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               BossStoneUnlockMemorialRecordRow;                        // 0x06C0(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               RotationEventUnlockMemorialRecordRow;                    // 0x06D0(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    GuildTradeMinGuildLevel;                                 // 0x06E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildTradeMaxCount;                                      // 0x06E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<ETLFishGrade, struct FTLFishingGradeParam>            FishingGradeParams;                                      // 0x06E8(0x0050) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalCommonPost                                 Post;                                                    // 0x0738(0x0128) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalCommonReport                               Report;                                                  // 0x0860(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGuildSkillSetting                                GuildSkillSetting;                                       // 0x0864(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGuildRewardBoxSetting                            GuildRewardBoxSetting;                                   // 0x086C(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
		TMap<EItemGrade, struct FTLItemEnchantTransferableGrades>  ItemEnchantTransferableGrades;                           // 0x0880(0x0050) Edit, NativeAccessSpecifierPublic
		struct FTLItemEnchantSetting                               ItemEnchantSetting;                                      // 0x08D0(0x00A8) Edit, NativeAccessSpecifierPublic
		struct FTLItemTraitSetting                                 ItemTraitSetting;                                        // 0x0978(0x0058) Edit, NativeAccessSpecifierPublic
		struct FTLInvenSetting                                     InvenSetting;                                            // 0x09D0(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      ItemPickableRadius;                                      // 0x09E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GoldPickableRadius;                                      // 0x09E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BMWarehouseWithdrawalDays;                               // 0x09EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BMWarehouseAllRecvCount;                                 // 0x09F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BMWarehouseAllRecvDelaySec;                              // 0x09F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int32_t, int32_t>                                     BMItemNumFormDummyItemNum;                               // 0x09F8(0x0050) Edit, NativeAccessSpecifierPublic
		int32_t                                                    PartyInviteLinkExpirationSec;                            // 0x0A48(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PartyKickLinkJoinWaitingSec;                             // 0x0A4C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PartyInviteLinkMaxCreateCount;                           // 0x0A50(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VYEN[0x4];                                   // 0x0A54(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLWeaponCombinationMap
	 * Size -> 0x0050
	 */
	struct FTLWeaponCombinationMap
	{
	public:
		TMap<EWeaponCategory, EWeaponCategory>                     WeaponCombination;                                       // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLWeaponCategoryArray
	 * Size -> 0x0010
	 */
	struct FTLWeaponCategoryArray
	{
	public:
		TArray<EWeaponCategory>                                    WeaponCategoryArray;                                     // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalCommonSkillLevelUpCommonSkillBookItem
	 * Size -> 0x000C
	 */
	struct FTLGlobalCommonSkillLevelUpCommonSkillBookItem
	{
	public:
		class FName                                                ItemId;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESkillGrade                                                SkillGrade;                                              // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ADYO[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsHeadUIOffset
	 * Size -> 0x0028
	 */
	struct FTLGlobalSettingsHeadUIOffset
	{
	public:
		struct FVector2D                                           OffsetDeadPc;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           OffestPc;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           OffestNpc;                                               // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           OffestFo;                                                // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           OffestItem;                                              // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsTooipAnchorOffset
	 * Size -> 0x0020
	 */
	struct FTLGlobalSettingsTooipAnchorOffset
	{
	public:
		struct FVector2D                                           CursorTop;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           CursorLeft;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           CursorRight;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           CursorBottom;                                            // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsDigitDisplayLimit
	 * Size -> 0x0010
	 */
	struct FTLGlobalSettingsDigitDisplayLimit
	{
	public:
		int32_t                                                    ShopBuyMaxCount;                                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7PDE[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    HudCurrencyMaxValue;                                     // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsTargetScan
	 * Size -> 0x0048
	 */
	struct FTLGlobalSettingsTargetScan
	{
	public:
		int32_t                                                    TargetScanCooltimeMsec;                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MyPcAttackerNumMax;                                      // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MyPcAttackerExpireSec;                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MyPcAttackerRefreshSec;                                  // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetScanSctSpreadSpeed;                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetScanDefaultSpeed;                                  // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetScanMinAcceleration;                               // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetScanMaxAcceleration;                               // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            AutoIntervals;                                           // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ScanFXDurations;                                         // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bEnableScreenDimmSCTForScannedTarget;                    // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableTargetScanSelectedSCTForScannedTarget;            // 0x0041(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T3PN[0x6];                                   // 0x0042(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsTargeting
	 * Size -> 0x00A8
	 */
	struct FTLGlobalSettingsTargeting
	{
	public:
		int32_t                                                    TabTargetStampRemainMs;                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MouseTargetingRange;                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MouseTargetingRangeHeight;                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FNEO[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    HidingFixTargetRemainMs;                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    HideFixTargetNameplateRemainMs;                          // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsTargetScan                         TargetScan;                                              // 0x0020(0x0048) Edit, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TargetFirstSelectSoundEvent;                             // 0x0068(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TargetEnemyFirstSelectSoundEvent;                        // 0x0080(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickingSphereScale;                                      // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickingCapsuleScale;                                     // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MouseDragDetectDragDistanceSquared;                      // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MouseMoveDetectDragDistanceSquared;                      // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsOutlineInfo
	 * Size -> 0x0010
	 */
	struct FTLGlobalSettingsOutlineInfo
	{
	public:
		float                                                      StartRadius;                                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndRadius;                                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendTime;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Alpha;                                                   // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsOutline
	 * Size -> 0x0030
	 */
	struct FTLGlobalSettingsOutline
	{
	public:
		struct FTLGlobalSettingsOutlineInfo                        FixTargetOutline;                                        // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsOutlineInfo                        InterimTargetOutline;                                    // 0x0010(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsOutlineInfo                        AimTargetModeOutline;                                    // 0x0020(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsAutoTargetRange
	 * Size -> 0x001C
	 */
	struct FTLGlobalSettingsAutoTargetRange
	{
	public:
		float                                                      DegreeLevel0Dist;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DegreeLevel0Width;                                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DegreeLevel1;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistLevel1;                                              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DegreeLevel4;                                            // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistLevel4;                                              // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackCircleRadius;                                      // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsValidVolume
	 * Size -> 0x0008
	 */
	struct FTLGlobalSettingsValidVolume
	{
	public:
		float                                                      ValidVolumeMax;                                          // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValidVolumeMin;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsInteractTargetDist
	 * Size -> 0x000C
	 */
	struct FTLGlobalSettingsInteractTargetDist
	{
	public:
		float                                                      InteractSortDist1;                                       // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InteractSortDist2;                                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InteractableMarkShowDist;                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsItemDropStaySct
	 * Size -> 0x01B0
	 */
	struct FTLGlobalSettingsItemDropStaySct
	{
	public:
		struct FSoftObjectPath                                     SctGradeMisc;                                            // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeMiscNotPickable;                                 // 0x0018(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeC;                                               // 0x0030(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeCNotPickable;                                    // 0x0048(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeB;                                               // 0x0060(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeBNotPickable;                                    // 0x0078(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeA;                                               // 0x0090(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeANotPickable;                                    // 0x00A8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeAA;                                              // 0x00C0(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeAANotPickable;                                   // 0x00D8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeAAA;                                             // 0x00F0(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeAAANotPickable;                                  // 0x0108(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeS;                                               // 0x0120(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeSNotPickable;                                    // 0x0138(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeSS;                                              // 0x0150(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeSSNotPickable;                                   // 0x0168(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeSSS;                                             // 0x0180(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctGradeSSSNotPickable;                                  // 0x0198(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsItemLeaveAbsorbSct
	 * Size -> 0x0040
	 */
	struct FTLGlobalSettingsItemLeaveAbsorbSct
	{
	public:
		struct FSoftObjectPath                                     ItemLeaveSct;                                            // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemLeaveSctDurationSec;                                 // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F29W[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     ItemAbsorbSct;                                           // 0x0020(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemAbsorbSctDurationSec;                                // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QR0L[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsItemLeaveAbsorbScts
	 * Size -> 0x0080
	 */
	struct FTLGlobalSettingsItemLeaveAbsorbScts
	{
	public:
		struct FTLGlobalSettingsItemLeaveAbsorbSct                 Adena;                                                   // 0x0000(0x0040) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsItemLeaveAbsorbSct                 Item;                                                    // 0x0040(0x0040) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsItemDrop
	 * Size -> 0x0070
	 */
	struct FTLGlobalSettingsItemDrop
	{
	public:
		struct FSoftObjectPath                                     SpecialItemPickActionTree;                               // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EItemGrade, struct FSoftObjectPath>                   SpecialItemPickActionTreeByGrade;                        // 0x0018(0x0050) Edit, NativeAccessSpecifierPublic
		float                                                      SpecialItemDropDurationScale;                            // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KB8T[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsSkillColorVariation
	 * Size -> 0x001C
	 */
	struct FTLGlobalSettingsSkillColorVariation
	{
	public:
		bool                                                       bUseColorVariation;                                      // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K9PS[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        ColorVariation;                                          // 0x0004(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDesaturation;                                        // 0x0014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H6MF[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Desaturation;                                            // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsSkillColorVariationTable
	 * Size -> 0x00C4
	 */
	struct FTLGlobalSettingsSkillColorVariationTable
	{
	public:
		struct FTLGlobalSettingsSkillColorVariation                Me;                                                      // 0x0000(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSkillColorVariation                FriendlyPc;                                              // 0x001C(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSkillColorVariation                FriendlyNpc;                                             // 0x0038(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSkillColorVariation                EnemyPc;                                                 // 0x0054(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSkillColorVariation                EnemyPcAttackMyPc;                                       // 0x0070(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSkillColorVariation                EnemyNpc;                                                // 0x008C(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSkillColorVariation                EnemyNpcAttackMyPc;                                      // 0x00A8(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSnActionWindDirInfo
	 * Size -> 0x0008
	 */
	struct FTLSnActionWindDirInfo
	{
	public:
		ETLWindDirection                                           WindDirection;                                           // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NW4L[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WindDirAngle;                                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsCombat
	 * Size -> 0x0018
	 */
	struct FTLGlobalSettingsCombat
	{
	public:
		float                                                      CriticalDamageScale;                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CriticalDamageReactionSpeedScale;                        // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DotFlinchingScale;                                       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DotFlinchingReactionSpeedScale;                          // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MyPcAttackerTimerSec;                                    // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_INMV[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsCombatInfo
	 * Size -> 0x0004
	 */
	struct FTLGlobalSettingsCombatInfo
	{
	public:
		float                                                      MyPcAttackedListKeepTimer;                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsItemSortTable
	 * Size -> 0x0070
	 */
	struct FTLGlobalSettingsItemSortTable
	{
	public:
		TArray<EItemSortType>                                      ItemSortOperator;                                        // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EItemPackageSortType>                               ItemPackageSortOperator;                                 // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EItemCategory>                                      EquipIndex;                                              // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EItemCategory>                                      UsableIndex;                                             // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EItemCategory>                                      ReinforcerIndex;                                         // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EItemCategory>                                      MaterialIndex;                                           // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EItemCategory>                                      MiscIndex;                                               // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsPenaltyInfo
	 * Size -> 0x0030
	 */
	struct FTLGlobalSettingsPenaltyInfo
	{
	public:
		int32_t                                                    PenaltyValue;                                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SystemStringID;                                          // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6CDE[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ToolTipStringID;                                         // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FDataTableRowHandle                                 ColorRef;                                                // 0x0020(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsInventory
	 * Size -> 0x0100
	 */
	struct FTLGlobalSettingsInventory
	{
	public:
		struct FTLGlobalSettingsItemSortTable                      ItemSortTable;                                           // 0x0000(0x0070) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsPenaltyInfo                        InventoryPenalty0;                                       // 0x0070(0x0030) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsPenaltyInfo                        InventoryPenalty1;                                       // 0x00A0(0x0030) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsPenaltyInfo                        InventoryPenalty2;                                       // 0x00D0(0x0030) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsEnchantResultMotions
	 * Size -> 0x0030
	 */
	struct FTLGlobalSettingsEnchantResultMotions
	{
	public:
		class FName                                                Destroyed;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CurseSuccess;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SafeNormalSuccess;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SafeBigSuccess;                                          // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UnsafeNormalSuccess;                                     // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UnsafeBigSuccess;                                        // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsEnchant
	 * Size -> 0x0040
	 */
	struct FTLGlobalSettingsEnchant
	{
	public:
		struct FTLGlobalSettingsEnchantResultMotions               SocialMotionsForResult;                                  // 0x0000(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               EnchantModeEmergencyItem;                                // 0x0030(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsSiegeWarfare
	 * Size -> 0x00B0
	 */
	struct FTLGlobalSettingsSiegeWarfare
	{
	public:
		TMap<int32_t, class FName>                                 WaitingMessages;                                         // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       WaitingMessagesHideMapID;                                // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<int32_t, class FName>                                 StandbyMessages;                                         // 0x0060(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsGuild
	 * Size -> 0x0098
	 */
	struct FTLGlobalSettingsGuild
	{
	public:
		struct FTLDataTableRowHandle                               DisableCallClanAbnormal;                                 // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    CallClanPanelHoldingTime;                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7FA3[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     GuildRewardBoxScreenMessageIconPath;                     // 0x0018(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     GuildBMRewardScreenMessageImagePath;                     // 0x0030(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EGuildRewardBoxContentsType, struct FSoftObjectPath>  GuildContentsTypeIconPaths;                              // 0x0048(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsPolymorph
	 * Size -> 0x0030
	 */
	struct FTLGlobalSettingsPolymorph
	{
	public:
		struct FTLDataTableRowHandle                               DefaultPolymorph;                                        // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      PolymorphAreaResolveMargin;                              // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XQK7[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     PolymorphSequencerTeleportOnAir;                         // 0x0018(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsDeath
	 * Size -> 0x0080
	 */
	struct FTLGlobalSettingsDeath
	{
	public:
		struct FTLDataTableRowHandle                               PolymorphGravestone;                                     // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6JVZ[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               PolymorphGravestoneForPc;                                // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KBYC[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ETLResurrectionLocationType, struct FTLDataTableRowHandle> RessurectionLocationTypeIcon;                            // 0x0030(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsMap
	 * Size -> 0x0014
	 */
	struct FTLGlobalSettingsMap
	{
	public:
		float                                                      RegionTypeChangePendingTimeSec;                          // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             IgnoreDisplayWorldMapDefaultMapPos;                      // 0x0004(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IgnoreDisplayWorldMapZoomDefaultRate;                    // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsAliasInfo
	 * Size -> 0x0038
	 */
	struct FTLGlobalSettingsAliasInfo
	{
	public:
		class FName                                                AbnormalStateKey;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     IconPath;                                                // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                AliasName;                                               // 0x0020(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsExperimental
	 * Size -> 0x0014
	 */
	struct FTLGlobalSettingsExperimental
	{
	public:
		bool                                                       TargetingIgnoreModelLoaded;                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1T2H[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        MountTargetColor;                                        // 0x0004(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsOptimization
	 * Size -> 0x0020
	 */
	struct FTLGlobalSettingsOptimization
	{
	public:
		bool                                                       SkipOutOfScreenHitSct;                                   // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       SkipOutOfScreenProjectile;                               // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HIZP[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DistSkipCanSeeFromByRayCheck;                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NameplateMaxDist;                                        // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V112[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    IntervalMsForCanSeeFromMyPcByRayCheck;                   // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseGraphTaskAtObjectAdvance;                             // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AOGI[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsSkillSlot
	 * Size -> 0x0050
	 */
	struct FTLGlobalSettingsSkillSlot
	{
	public:
		TMap<ESkillSlot, int32_t>                                  SkillSlotUnlockLevel;                                    // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsSkill
	 * Size -> 0x0008
	 */
	struct FTLGlobalSettingsSkill
	{
	public:
		float                                                      PreventSkillPendingMsgInSec;                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TurnToDirForSkillDurationSec;                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsGlidingSCT
	 * Size -> 0x0020
	 */
	struct FTLGlobalSettingsGlidingSCT
	{
	public:
		struct FSoftObjectPath                                     Sct;                                                     // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Min;                                                     // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Max;                                                     // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLPVPHistoryMessageData
	 * Size -> 0x0028
	 */
	struct FTLPVPHistoryMessageData
	{
	public:
		bool                                                       bAutoSend;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N4O3[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Message;                                                 // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		class FName                                                SocialMotion;                                            // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsPVPHistory
	 * Size -> 0x0050
	 */
	struct FTLGlobalSettingsPVPHistory
	{
	public:
		TMap<ETLPVPHistoryMessageType, struct FTLPVPHistoryMessageData> DefaultMessages;                                         // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsMagicDoll
	 * Size -> 0x0028
	 */
	struct FTLGlobalSettingsMagicDoll
	{
	public:
		int32_t                                                    DialogEventExpireTimeSec;                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DialogEventMaxPendingSize;                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     AnySetItemWithConditionSatisfiedPortrait;                // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MagicDollAutoSummonTimeSec;                              // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O5H7[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalQuickSlotSetting
	 * Size -> 0x0004
	 */
	struct FTLGlobalQuickSlotSetting
	{
	public:
		int32_t                                                    SlotCount;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLContentsWorldTargetMapIconImagePath
	 * Size -> 0x0040
	 */
	struct FTLContentsWorldTargetMapIconImagePath
	{
	public:
		struct FSoftObjectPath                                     IconPath;                                                // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     IndicatorIconPath;                                       // 0x0018(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BackgroundEffectColorId;                                 // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                WaveEffectColorId;                                       // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLContentsWorldTargetIndicatorImage
	 * Size -> 0x0028
	 */
	struct FTLContentsWorldTargetIndicatorImage
	{
	public:
		struct FSoftObjectPath                                     IconPath;                                                // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BackgroundEffectColorId;                                 // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                WaveEffectColorId;                                       // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLWeaponMasteryLineName
	 * Size -> 0x0010
	 */
	struct FTLWeaponMasteryLineName
	{
	public:
		TArray<class FText>                                        NameList;                                                // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLVisualTFSetting
	 * Size -> 0x0001
	 */
	struct FTLVisualTFSetting
	{
	public:
		bool                                                       StopActionWhenBeHittedCritical;                          // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLWireActionGlobalSetting
	 * Size -> 0x0020
	 */
	struct FTLWireActionGlobalSetting
	{
	public:
		int64_t                                                    HookFoCooldown;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    AvailableRangeMin;                                       // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HookSkillRange;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HookSkillValidHeightMax;                                 // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HookSkillValidHeightMin;                                 // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U9V3[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsWidget
	 * Size -> 0x0008
	 */
	struct FTLGlobalSettingsWidget
	{
	public:
		float                                                      ZeroWidgetTransparencyAlphaColor;                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HundredWidgetTransparencyAlphaColor;                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLTitleIcon
	 * Size -> 0x0030
	 */
	struct FTLTitleIcon
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     IconPath;                                                // 0x0018(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLDefaultInteractionTitle
	 * Size -> 0x00A0
	 */
	struct FTLDefaultInteractionTitle
	{
	public:
		TMap<EInteractionActionType, struct FTLTitleIcon>          NpcInteractionTypeTitleMap;                              // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EInteractionActionType, struct FTLTitleIcon>          FoInteractionTypeTitleMap;                               // 0x0050(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLDynamicEventSideEffect
	 * Size -> 0x0020
	 */
	struct FTLDynamicEventSideEffect
	{
	public:
		struct FSoftObjectPath                                     EffectSct;                                               // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowEffectOnlySameSide;                                 // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X8KW[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsDynamicEvent
	 * Size -> 0x0050
	 */
	struct FTLGlobalSettingsDynamicEvent
	{
	public:
		TMap<uint64_t, struct FTLDynamicEventSideEffect>           SideEffects;                                             // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsEventArea
	 * Size -> 0x0068
	 */
	struct FTLGlobalSettingsEventArea
	{
	public:
		class UMaterialInterface*                                  EventAreaMaterial;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            EventAreaTexture;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LineWidthFactor;                                         // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TH6M[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EMapEventShapeType, struct FLinearColor>              EventAreaColor;                                          // 0x0018(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsTimeLimitDungeon
	 * Size -> 0x0008
	 */
	struct FTLGlobalSettingsTimeLimitDungeon
	{
	public:
		int32_t                                                    TimeLimitDungeonRemainTimeStartMin;                      // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TimeLimitDungeonRemainTimeIntervalMin;                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsMagicPocketDialog
	 * Size -> 0x001C
	 */
	struct FTLGlobalSettingsMagicPocketDialog
	{
	public:
		float                                                      MagicPocketDistance;                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MagicPortalLongDistance;                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MagicPortalMiddleDistance;                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MagicPortalNearDistance;                                 // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Cooltime;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MagicPortalNormalMapIconDistance;                        // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MagicPortalAdvanceMapIconDistance;                       // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsAmmo
	 * Size -> 0x0018
	 */
	struct FTLGlobalSettingsAmmo
	{
	public:
		struct FSoftObjectPath                                     StayAmmoActionTree;                                      // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsCustomization
	 * Size -> 0x0030
	 */
	struct FTLGlobalSettingsCustomization
	{
	public:
		struct FSoftObjectPath                                     ChangeGenderLevelSequencePath;                           // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ChangeCustomizationATPath;                               // 0x0018(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsCustomScene
	 * Size -> 0x0014
	 */
	struct FTLGlobalSettingsCustomScene
	{
	public:
		float                                                      ModelRotateMouseSpeed;                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModelRotateMaxDeltaYaw;                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModelRotateMaxDeltaPitch;                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModelRotateAxisMinSpeed;                                 // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ModelRotateAxisMaxSpeed;                                 // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsSoundVolumePreset
	 * Size -> 0x0034
	 */
	struct FTLGlobalSettingsSoundVolumePreset
	{
	public:
		int32_t                                                    AlertVolume;                                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UISoundVolume;                                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UI_SystemVolume;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UI_InterfaceVolume;                                      // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MusicVolume;                                             // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SFXSoundVolume;                                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SFX_HitVolume;                                           // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SFX_MyPCVolume;                                          // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SFX_OtherPCVolume;                                       // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SFX_MonsterVolume;                                       // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SFX_AmitoiVolume;                                        // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SFX_AmbVolume;                                           // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VoiceVolume;                                             // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCutsceneDataToQoSFixedFrame
	 * Size -> 0x0018
	 */
	struct FTLCutsceneDataToQoSFixedFrame
	{
	public:
		struct FTLDataTableRowHandle                               CutSceneTableRow;                                        // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      FixedFrameForQoS;                                        // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M7VQ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLDateTimeFormat
	 * Size -> 0x0070
	 */
	struct FTLDateTimeFormat
	{
	public:
		class FString                                              DateTimeFormat_YearMonthDay;                             // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DateTimeFormat_MonthDay;                                 // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DateTimeFormat_HourMinuteSecond;                         // 0x0020(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DateTimeFormat_HourMinute;                               // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TimeSpanFormat_HourMinute;                               // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TimeSpanFormat_HourMinuteSecond;                         // 0x0050(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TimeSpanFormat_MinuteSecond;                             // 0x0060(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettings
	 * Size -> 0x1778 (FullSize[0x1780] - InheritedSize[0x0008])
	 */
	struct FTLGlobalSettings : public FTableRowBase
	{
	public:
		TArray<class FName>                                        PurchaseGoodsDisplayKeys;                                // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        PurchaseGoodsTestDisplayKeys;                            // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<EPurchaseNavigationEntry, class FName>                PurchaseNavigationGoodsNames;                            // 0x0028(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<class FString, class FString>                         GlobalPaymentCurrencySymbol;                             // 0x0078(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EMoneyType, ETLPurchasePrimaryCategory>               PurchaseMoneyLackNavigations;                            // 0x00C8(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EMoneyType, class FName>                              BMShopMoneyLackNavigations;                              // 0x0118(0x0050) Edit, NativeAccessSpecifierPublic
		class FName                                                BMShopWarehouseNavigation;                               // 0x0168(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SeasonPassNavigationGoodsName;                           // 0x0170(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                GrowthPassNavigationGoodsName;                           // 0x0178(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReqPurchaseListNextSec;                                  // 0x0180(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsHeadUIOffset                       DefaultHeadUIOffset;                                     // 0x0184(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsTooipAnchorOffset                  TooltipAnchorOffset;                                     // 0x01AC(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      ViewportBorderMargin;                                    // 0x01CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackedMyPcTimeSec;                                     // 0x01D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HPPercentForMyPcStatus;                                  // 0x01D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillIndicatorValidRangeSctSize;                         // 0x01D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillIndicatorTargetAreaRangeSctSize;                    // 0x01DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SkillTargetAreaCursorMoveSpeed;                          // 0x01E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PcInteractionDistance;                                   // 0x01E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadStickWalkZone;                                    // 0x01E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadStickDeadZone;                                    // 0x01EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsDigitDisplayLimit                  DigitDisplayLimit;                                       // 0x01F0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsTargeting                          Targeting;                                               // 0x0200(0x00A8) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsOutline                            OutlineColor;                                            // 0x02A8(0x0030) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsAutoTargetRange                    TargetRangeAttackForNextTarget;                          // 0x02D8(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsAutoTargetRange                    TargetRangeInteraction;                                  // 0x02F4(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                           GamepadTargetAreaLeftTop;                                // 0x0310(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           GamepadTargetAreaRightBottom;                            // 0x0318(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           GamepadTargetInnerAreaLeftTop;                           // 0x0320(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           GamepadTargetInnerAreaRightBottom;                       // 0x0328(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           GamepadTargetPoint;                                      // 0x0330(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadTargetPointMaxDistance;                           // 0x0338(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadTargetCameraMargin;                               // 0x033C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadTargetCameraMinPitch;                             // 0x0340(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadTargetCameraCenterAngle;                          // 0x0344(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadTargetCameraBlendSec;                             // 0x0348(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadTargetAimAngleDiff;                               // 0x034C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsAutoTargetRange                    GamepadTargetMeleeInterim;                               // 0x0350(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsValidVolume                        ValidVolume;                                             // 0x036C(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      DiscoveryWaypointRadius;                                 // 0x0374(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EInteractionActionType, int32_t>                      InteractionActionTypePriority;                           // 0x0378(0x0050) Edit, NativeAccessSpecifierPublic
		float                                                      SctScaleDuration;                                        // 0x03C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TimeTravelCycleDays;                                     // 0x03CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeLapseDuration;                                       // 0x03D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GamepadSkillPosForward;                                  // 0x03D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsInteractTargetDist                 InteractTargetDist;                                      // 0x03D8(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WM6B[0x4];                                   // 0x03E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EItemCategory, struct FTLGlobalSettingsItemDropStaySct> ItemDropStaySct;                                         // 0x03E8(0x0050) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsItemDropStaySct                    SpecialItemDropStaySct;                                  // 0x0438(0x01B0) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsItemLeaveAbsorbScts                ItemLeaveAbsorbScts;                                     // 0x05E8(0x0080) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsItemDrop                           ItemDrop;                                                // 0x0668(0x0070) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSkillColorVariationTable           SkillColorVariationTable;                                // 0x06D8(0x00C4) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      ItemRadius;                                              // 0x079C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemAutoPickRadius;                                      // 0x07A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemAdenaAutoPickRadius;                                 // 0x07A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemDropDurationMin;                                     // 0x07A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemDropDurationMax;                                     // 0x07AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemDropWeightMin;                                       // 0x07B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemDropWeightMax;                                       // 0x07B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemDropVirtualStartZ;                                   // 0x07B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RMZL[0x4];                                   // 0x07BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               PotionItem;                                              // 0x07C0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    GuildSymbolChangeCost;                                   // 0x07D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetDecalBaseSize;                                     // 0x07D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             FoCollideSpinRotation;                                   // 0x07D8(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CodexVirtualItemDistance;                                // 0x07E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CodexVirtualItemCheckTime;                               // 0x07E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxIgnoreUserInputTimeSec;                               // 0x07EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientSkillDistMargin;                                   // 0x07F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClientSkillHeightMargin;                                 // 0x07F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetHelperNextTargetCollisionPlus;                     // 0x07F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScanHeight;                                              // 0x07FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ObjectLeaveDuration;                                     // 0x0800(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AP2F[0x4];                                   // 0x0804(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSnActionWindDirInfo>                      WindAngles;                                              // 0x0808(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsCombat                             Combat;                                                  // 0x0818(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsCombatInfo                         CombatInfo;                                              // 0x0830(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      PreLandingMotionDuration;                                // 0x0834(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlidingCameraPitch;                                      // 0x0838(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlidingCameraXYOffsetBlendTimeSec;                       // 0x083C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlidingCameraXYOffset;                                   // 0x0840(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PacketIntervalResetSpeedRatio;                           // 0x0844(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraLookAtDist;                                        // 0x0848(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NpcLookAtAngle;                                          // 0x084C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsInventory                          Inventory;                                               // 0x0850(0x0100) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsEnchant                            Enchant;                                                 // 0x0950(0x0040) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSiegeWarfare                       SiegeWarfare;                                            // 0x0990(0x00B0) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsGuild                              Guild;                                                   // 0x0A40(0x0098) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsPolymorph                          Polymorph;                                               // 0x0AD8(0x0030) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsDeath                              Death;                                                   // 0x0B08(0x0080) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsMap                                Map;                                                     // 0x0B88(0x0014) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    HotReactionTemperature;                                  // 0x0B9C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColdReactionTemperature;                                 // 0x0BA0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CSDH[0x4];                                   // 0x0BA4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLGlobalSettingsAliasInfo>                  AliasInfos;                                              // 0x0BA8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      CollideSlidingCheckMargin;                               // 0x0BB8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreventAutoJumpHeight;                                   // 0x0BBC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RadiusResizeDuration;                                    // 0x0BC0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsExperimental                       Experimental;                                            // 0x0BC4(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsOptimization                       Optimization;                                            // 0x0BD8(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSkillSlot                          SkillSlotSetting;                                        // 0x0BF8(0x0050) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSkill                              SkillSetting;                                            // 0x0C48(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    InputIdleTimeInSeconds;                                  // 0x0C50(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ItemCanSeeCheckHeight;                                   // 0x0C54(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LandingMoveSct;                                          // 0x0C58(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLGlobalSettingsGlidingSCT>                 ArrayGlideBoostingSCT;                                   // 0x0C70(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      AdditionalApproachingFailTimeSec;                        // 0x0C80(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DGN0[0x4];                                   // 0x0C84(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EModifyGroup, struct FSoftObjectPath>                 CommonAbnormalIcon;                                      // 0x0C88(0x0050) Edit, NativeAccessSpecifierPublic
		TArray<float>                                              FloaterCenterRotationValueList;                          // 0x0CD8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<float>                                              FloaterLeftRotationValueList;                            // 0x0CE8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<float>                                              FloaterRightRotationValueList;                           // 0x0CF8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       TryJumpWhenAutoCombatMoveBlocked;                        // 0x0D08(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SZEJ[0x3];                                   // 0x0D09(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AutocombatToggleCooltime;                                // 0x0D0C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WalkableFloorAngleOnNavMesh;                             // 0x0D10(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y0OW[0x4];                                   // 0x0D14(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLGlobalSettingsPVPHistory                         PVPHistory;                                              // 0x0D18(0x0050) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsMagicDoll                          MagicDoll;                                               // 0x0D68(0x0028) Edit, NativeAccessSpecifierPublic
		float                                                      PVPMessageShowTime;                                      // 0x0D90(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAutoMantling;                                        // 0x0D94(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QJWL[0x3];                                   // 0x0D95(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLGlobalQuickSlotSetting                           QuickSlotSetting;                                        // 0x0D98(0x0004) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      MinimapPanningDuration;                                  // 0x0D9C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimapPanningReturnBlendDuration;                       // 0x0DA0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEasingFunc                                                MinimapPanningReturnBlendEasingFunc;                     // 0x0DA4(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LSGX[0x3];                                   // 0x0DA5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinimapPanningReturnBlendExp;                            // 0x0DA8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DashDoubleClickIntervalSec;                              // 0x0DAC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DashSctNormalToFast;                                     // 0x0DB0(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DashSctFastToNormal;                                     // 0x0DC8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SwimMoveSctNormal;                                       // 0x0DE0(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SwimMoveSctFast;                                         // 0x0DF8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SwimMoveSctJump;                                         // 0x0E10(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinimapZoomScalingRetentionTime;                         // 0x0E28(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MapIconMoveIgnoreThreshold;                              // 0x0E2C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       PartyMemberIconTableRowList;                             // 0x0E30(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      MinWidgetPoolCount;                                      // 0x0E40(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxWidgetPoolCount;                                      // 0x0E44(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReleaseWidgetPoolTimeSec;                                // 0x0E48(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ReleasePoolCountUnit;                                    // 0x0E4C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PinMinDistanceMeter;                                     // 0x0E50(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PinMaxDistanceMeter;                                     // 0x0E54(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PinMinScale;                                             // 0x0E58(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7PRB[0x4];                                   // 0x0E5C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     MailArrivalSCT;                                          // 0x0E60(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     WorldBoundaryWallMaterial;                               // 0x0E78(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAutoPathFollowLine;                                  // 0x0E90(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_775N[0x3];                                   // 0x0E91(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FColor                                              AutoPathFollowLineColor;                                 // 0x0E94(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              AutoPathFollowIndoorLineColor;                           // 0x0E98(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_37T9[0x4];                                   // 0x0E9C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInterface*                                  AutoPathFollowLineMaterial;                              // 0x0EA0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture*                                            AutoPathFollowTexture;                                   // 0x0EA8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoPathLineWidthFactor;                                 // 0x0EB0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoPathMinimumDistanceToTargetToTeleportInCm;           // 0x0EB4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoPathMinimumDistanceToWaypointToTeleportInCm;         // 0x0EB8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LOKL[0x4];                                   // 0x0EBC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<uint32_t>                                           AlarmRemainingValue;                                     // 0x0EC0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<uint32_t>                                           AlarmNudgeEffectValue;                                   // 0x0ED0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<ETLHyperLinkType, struct FLinearColor>                HyperLinkTextColorList;                                  // 0x0EE0(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EChatHyperlinkType, struct FLinearColor>              ChatHyperlinkTypeColorList;                              // 0x0F30(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<ETLContentsMarkerType, struct FTLContentsWorldTargetMapIconImagePath> ContentsWorldTargetMapIconImagePathMap;                  // 0x0F80(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<ETLContentsMarkerType, struct FTLContentsWorldTargetIndicatorImage> ContentsWorldTargetIndicatorImageMap;                    // 0x0FD0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<ETLContentsMarkerType, struct FSoftObjectPath>        ContentsWorldTargetImagePathMap;                         // 0x1020(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TMap<EWeaponCategory, struct FTLWeaponMasteryLineName>     WeaponMasteryLineNameMap;                                // 0x1070(0x0050) Edit, NativeAccessSpecifierPublic
		float                                                      GoToCharacterSelectWaitingTimeSec;                       // 0x10C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M5QA[0x4];                                   // 0x10C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     IngameToLobbySct;                                        // 0x10C8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               DefaultMapTableRow;                                      // 0x10E0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             GameLobbyStartLocation;                                  // 0x10F0(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CustomizingSceneNextLocation;                            // 0x10FC(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                DefaultCharacterName;                                    // 0x1108(0x0018) Edit, NativeAccessSpecifierPublic
		float                                                      AutoCloseMainMenuTimer;                                  // 0x1120(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLVisualTFSetting                                  VisualTFSetting;                                         // 0x1124(0x0001) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MEJ8[0x3];                                   // 0x1125(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TLGameValueOverallVersion;                               // 0x1128(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4WDD[0x4];                                   // 0x112C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLWireActionGlobalSetting                          WireActionSetting;                                       // 0x1130(0x0020) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      CodexNudgeRemainTimeSec;                                 // 0x1150(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GameExitWaitingTimeSec;                                  // 0x1154(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CharacterSelectWaitingTimeSec;                           // 0x1158(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UPPN[0x4];                                   // 0x115C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, class FString>                           OptionPresets;                                           // 0x1160(0x0050) Edit, NativeAccessSpecifierPublic
		float                                                      InteractableIndicatorOvalARatio;                         // 0x11B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InteractableIndicatorOvalBRatio;                         // 0x11B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IndicatorOffsetXRatio;                                   // 0x11B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IndicatorOffsetYRatio;                                   // 0x11BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UsurperBuffImperfect;                                    // 0x11C0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UsurperBuffPerfect;                                      // 0x11D0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      NameplateDistanceMaxGroupA;                              // 0x11E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NameplateDistanceMaxGroupB;                              // 0x11E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NameplateDistanceMaxGroupC;                              // 0x11E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NameplateOpacityCurveMassCombatModeDistanceMax;          // 0x11EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChatSpeakDistanceNearValue;                              // 0x11F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChatSpeakDistanceFarValue;                               // 0x11F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    HudItemCountMaxNumber;                                   // 0x11F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    MemorialBookMarkCount;                                   // 0x1200(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsWidget                             Widget;                                                  // 0x1208(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		float                                                      CodexRewardNormalDelay;                                  // 0x1210(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CodexRewardFinalDelay;                                   // 0x1214(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChallengeCodeNudgeDuration;                              // 0x1218(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChallengeCodeProgressNudgePercent;                       // 0x121C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialParameterCollection*                        UIMaterialParameterCollection;                           // 0x1220(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDefaultInteractionTitle                          DefaultInteractionTitle;                                 // 0x1228(0x00A0) Edit, NativeAccessSpecifierPublic
		float                                                      InteractionSceneTypeWritingSpeed;                        // 0x12C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TLS1[0x4];                                   // 0x12CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLGlobalSettingsDynamicEvent                       DynamicEvent;                                            // 0x12D0(0x0050) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsEventArea                          EventArea;                                               // 0x1320(0x0068) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsTimeLimitDungeon                   TimeLimitDungeon;                                        // 0x1388(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsMagicPocketDialog                  MagicPocketDialogEvent;                                  // 0x1390(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    MaxContentsAlarmViewCount;                               // 0x13AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AutoLogoffTimeMinute;                                    // 0x13B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8UJJ[0x4];                                   // 0x13B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLGlobalSettingsAmmo                               Ammo;                                                    // 0x13B8(0x0018) Edit, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsCustomization                      Customization;                                           // 0x13D0(0x0030) Edit, NativeAccessSpecifierPublic
		int32_t                                                    GrowthPassMinLevel;                                      // 0x1400(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GrowthPassMaxLevel;                                      // 0x1404(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     GrowthPassRewardScreenMessageImagePath;                  // 0x1408(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SeasonPassRewardScreenMessageImagePath;                  // 0x1420(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              WidgetMusics[0x50];                                      // 0x1438(0x0050) UNKNOWN PROPERTY: MapProperty
		struct FTLGlobalSettingsCustomScene                        CustomScene;                                             // 0x1488(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    TextureResolution;                                       // 0x149C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemTooltipPackagePreviewCount;                          // 0x14A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSoundVolumePreset                  SoundVolumePresetGeneral;                                // 0x14A4(0x0034) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSoundVolumePreset                  SoundVolumePresetGeneralCombat;                          // 0x14D8(0x0034) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSoundVolumePreset                  SoundVolumePresetMassiveCombat;                          // 0x150C(0x0034) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGlobalSettingsSoundVolumePreset                  SoundVolumePresetAlert;                                  // 0x1540(0x0034) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    LowSoundVolumeOnBackground;                              // 0x1574(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxFavoriteListCount;                                    // 0x1578(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TFCX[0x4];                                   // 0x157C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLCutsceneDataToQoSFixedFrame>              CutsceneDatasToQoSFixedFrame;                            // 0x1580(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<ETLLanguages, class FString>                          WebHelpUrlFormats_SANDBOX;                               // 0x1590(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<ETLLanguages, class FString>                          WebHelpUrlFormats_RC;                                    // 0x15E0(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<ETLLanguages, class FString>                          WebHelpUrlFormats_LIVE;                                  // 0x1630(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<ETLLanguages, class FString>                          WebHelpUrlFormats_AGS;                                   // 0x1680(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<ETLLanguages, struct FTLDateTimeFormat>               DateTimeFormats;                                         // 0x16D0(0x0050) Edit, Config, NativeAccessSpecifierPublic
		class UCurveFloat*                                         FloaterScaleCurve;                                       // 0x1720(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat*                                         NamePlateScaleCurve;                                     // 0x1728(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat*                                         NamePlateOpacityCurve;                                   // 0x1730(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat*                                         NamePlateOpacityCurveMassCombatMode;                     // 0x1738(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat*                                         NamePlateZPositionOffsetCurve;                           // 0x1740(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat*                                         ChatBalloonScaleCurve;                                   // 0x1748(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat*                                         ChatBalloonOpacityCurve;                                 // 0x1750(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat*                                         ChatBalloonOpacityFarCurve;                              // 0x1758(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat*                                         GlidingCameraShiftCurve;                                 // 0x1760(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat*                                         GlidingJumpCurve;                                        // 0x1768(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat*                                         InteractableMarkOpacityCurve;                            // 0x1770(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      NameplateOpacityCurveDistanceMax;                        // 0x1778(0x0004) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L5RW[0x4];                                   // 0x177C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsWidgetMusic
	 * Size -> 0x0030
	 */
	struct FTLGlobalSettingsWidgetMusic
	{
	public:
		struct FSoftObjectPath                                     SafetyZoneMusic;                                         // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     CombatZoneMusic;                                         // 0x0018(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLPurchaseDisplayInfos
	 * Size -> 0x000C
	 */
	struct FTLPurchaseDisplayInfos
	{
	public:
		class FName                                                DisplayKey;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPurchaseCurrencyGroupType                                 CurrencyGroupType;                                       // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F22J[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLMapRegionTypeData
	 * Size -> 0x0003
	 */
	struct FTLMapRegionTypeData
	{
	public:
		bool                                                       DeathPenaltyProtection;                                  // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PKPenaltyProtection;                                     // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       RelationOverridable;                                     // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsCraftingResultMotions
	 * Size -> 0x0008
	 */
	struct FTLGlobalSettingsCraftingResultMotions
	{
	public:
		class FName                                                GreatSuccess;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsCrafting
	 * Size -> 0x0008
	 */
	struct FTLGlobalSettingsCrafting
	{
	public:
		struct FTLGlobalSettingsCraftingResultMotions              ResultSocialMotions;                                     // 0x0000(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLPassiveSkillTypeInfo
	 * Size -> 0x0030
	 */
	struct FTLPassiveSkillTypeInfo
	{
	public:
		EPassiveSkillType                                          Type;                                                    // 0x0000(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AXP6[0x3];                                   // 0x0001(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_8YIS[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Name;                                                    // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		struct FLinearColor                                        Color;                                                   // 0x0020(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsItemTooltip
	 * Size -> 0x0010
	 */
	struct FTLGlobalSettingsItemTooltip
	{
	public:
		TArray<struct FTLPassiveSkillTypeInfo>                     PassiveSkillTypeInfos;                                   // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsLiner
	 * Size -> 0x0004
	 */
	struct FTLGlobalSettingsLiner
	{
	public:
		float                                                      BoardingConfirmTimeSec;                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsUXWeaponIconData
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FTLGlobalSettingsUXWeaponIconData : public FTableRowBase
	{
	public:
		unsigned char                                              IconImage[0x28];                                         // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              HoverIconImage[0x28];                                    // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              CheckIconImage[0x28];                                    // 0x0058(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsUXMoneyIconData
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLGlobalSettingsUXMoneyIconData : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     SpriteIconPath;                                          // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TextureIconPath;                                         // 0x0020(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemSlotGradeLooks
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FTLItemSlotGradeLooks : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     IconPath;                                                // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BigIconPath;                                             // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ColorKey;                                                // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                GradeName;                                               // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9PG5[0x10];                                  // 0x0058(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSkillSlotGradeLooks
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLSkillSlotGradeLooks : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     IconPath;                                                // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ColorKey;                                                // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ESL4[0x10];                                  // 0x0028(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        ColorAndOpacityForBackground;                            // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLPolymorphSlotGradeLooks
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLPolymorphSlotGradeLooks : public FTableRowBase
	{
	public:
		class FText                                                GradeText;                                               // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FName                                                GradeColorKey;                                           // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PortraitBGIconPath;                                      // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SlotBGIconPath;                                          // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollSlotGradeLooks
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLMagicDollSlotGradeLooks : public FTableRowBase
	{
	public:
		class FText                                                GradeText;                                               // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FName                                                GradeColorKey;                                           // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PortraitBGIconPath;                                      // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SlotBGIconPath;                                          // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGlobalSettingsUX
	 * Size -> 0x04D0 (FullSize[0x04D8] - InheritedSize[0x0008])
	 */
	struct FTLGlobalSettingsUX : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     BlankSprite;                                             // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EWeaponCategory, class FText>                         WeaponNameText;                                          // 0x0020(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EWeaponCategory, struct FTLGlobalSettingsUXWeaponIconData> WeaponIconHud;                                           // 0x0070(0x0050) Edit, NativeAccessSpecifierPublic
		unsigned char                                              WeaponIconHudSmall[0x50];                                // 0x00C0(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              WeaponIconWindowLarge[0x50];                             // 0x0110(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              WeaponIconWindowSmall[0x50];                             // 0x0160(0x0050) UNKNOWN PROPERTY: MapProperty
		TMap<EWeaponCategory, struct FSoftObjectPath>              BmContractWeaponCategorySpriteMap;                       // 0x01B0(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EMoneyType, struct FTLGlobalSettingsUXMoneyIconData>  MoneyIconData;                                           // 0x0200(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EItemGrade, struct FTLItemSlotGradeLooks>             ItemSlotGradeLooks;                                      // 0x0250(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<ESkillGrade, struct FTLSkillSlotGradeLooks>           SkillSlotGradeLooks;                                     // 0x02A0(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EPolymorphGrade, struct FTLPolymorphSlotGradeLooks>   PolymorphSlotGradeLooks;                                 // 0x02F0(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EMagicDollGrade, struct FTLMagicDollSlotGradeLooks>   MagicDollSlotGradeLooks;                                 // 0x0340(0x0050) Edit, NativeAccessSpecifierPublic
		unsigned char                                              CustomizeHistoryTypeIcon[0x50];                          // 0x0390(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              CustomizeUIMiddleCategoryIcon[0x50];                     // 0x03E0(0x0050) UNKNOWN PROPERTY: MapProperty
		unsigned char                                              CustomizeUIMiddleCategoryIconFemale[0x50];               // 0x0430(0x0050) UNKNOWN PROPERTY: MapProperty
		struct FSoftObjectPath                                     EmptyProfileImagePath;                                   // 0x0480(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ExchangableImagePath;                                    // 0x0498(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OverwriteExchangableImagePath;                           // 0x04B0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<ETLUITargetPriority>                                GamepadTargetPrioirtyList;                               // 0x04C8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGrowthMissionObjective
	 * Size -> 0x0030
	 */
	struct FTLSchemeGrowthMissionObjective
	{
	public:
		class FText                                                ActionText;                                              // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bUseCount;                                               // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HHD4[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLDataTableRowHandle>                       HyperLinkRefList;                                        // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGrowthMission
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGrowthMission : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLGrowthMissionType                                       MissionType;                                             // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V6VF[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TitleText;                                               // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BackgroundImagePath;                                     // 0x0038(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ContentsOpenRef;                                         // 0x0050(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeGrowthMissionObjective>             MissionObjectiveList;                                    // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               HelpRef;                                                 // 0x0070(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGrowthResource
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGrowthResource : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_O8NC[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UID;                                                     // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GiveChancePoint;                                         // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GiveExpPointMin;                                         // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GiveExpPointMax;                                         // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConsumptionChancePoint;                                  // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConsumptionExpPoint;                                     // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GrowthProbability;                                       // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U5PJ[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuidContent
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGuidContent : public FTableRowBase
	{
	public:
		ETLContentCategory                                         Category;                                                // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SW94[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ID;                                                      // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ContentName;                                             // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuildResource
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGuildResource : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemTableID;                                             // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortPriority;                                            // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsDonable;                                               // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LMA3[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DonationPerCount;                                        // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsGuildResource;                                         // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FSK6[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeProductionResource
	 * Size -> 0x0020
	 */
	struct FTLSchemeProductionResource
	{
	public:
		struct FTLDataTableRowHandle                               GuildResource;                                           // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    ItemTableID;                                             // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quantity;                                                // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PeriodMinute;                                            // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProductionPerHour;                                       // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuildProductionResource
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGuildProductionResource : public FTableRowBase
	{
	public:
		TArray<struct FTLSchemeProductionResource>                 ProductionResources;                                     // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuildSkillItem
	 * Size -> 0x0028
	 */
	struct FTLSchemeGuildSkillItem
	{
	public:
		struct FTLDataTableRowHandle                               GuildResource;                                           // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I08D[0x10];                                  // 0x0010(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Count;                                                   // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P81A[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuildSkillInfo
	 * Size -> 0x0048
	 */
	struct FTLSchemeGuildSkillInfo
	{
	public:
		int32_t                                                    step;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KPQG[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               Skill;                                                   // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_03V7[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    GuildLevel;                                              // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B1X9[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeGuildSkillItem>                     Items;                                                   // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    SkillCooldownSeconds;                                    // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J97J[0xC];                                   // 0x003C(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuildSkill
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGuildSkill : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_PE9G[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UID;                                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A1ZC[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               Skill;                                                   // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S5AU[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EGuildSkillType                                            SkillType;                                               // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q9CI[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    GuildLevel;                                              // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeGuildSkillItem>                     Items;                                                   // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    SkillCooldownSeconds;                                    // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsShowGuildSkillList;                                    // 0x004C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JE7Z[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeGuildSkillInfo>                     GuildSkillInfos;                                         // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuildGrade
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGuildGrade : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       GuildInvite;                                             // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       GuildPermitApplicant;                                    // 0x000D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       KickMember;                                              // 0x000E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       PositionAppoint;                                         // 0x000F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       WriteNotice;                                             // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       WriteAboutGuild;                                         // 0x0011(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ChangeEmblem;                                            // 0x0012(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ManageStorage;                                           // 0x0013(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       MockAnotherGuild;                                        // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TACM[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     UIGradeIcon;                                             // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuildEmblemColor
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGuildEmblemColor : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildLevel;                                              // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseMainColor;                                          // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NZ7H[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MainColorGuildLevel;                                     // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseSubColor;                                           // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YLHI[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SubColorGuildLevel;                                      // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        EmblemColor;                                             // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuildEmblem
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGuildEmblem : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildLevel;                                              // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UILargeIconPath;                                         // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UISmallIconPath;                                         // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     NormalTexturePath;                                       // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ARMTexturePath;                                          // 0x0058(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuildLevel
	 * Size -> 0x0110 (FullSize[0x0118] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGuildLevel : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZO70[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint64_t                                                   GuildExp;                                                // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MemberCapacity;                                          // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OpenRegionStoneCount;                                    // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OpenBossStoneCount;                                      // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ULKV[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                OpenContents;                                            // 0x0028(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                OpenShopItem;                                            // 0x0040(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                OpenGuildSkill;                                          // 0x0058(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                GuildBuff;                                               // 0x0070(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                CurrentLevelTotalContentsOpen;                           // 0x0088(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                CurrentLevelTotalOpenShopItem;                           // 0x00A0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                CurrentLevelTotalGuildSkill;                             // 0x00B8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                CurrentLevelTotalGuildBuff;                              // 0x00D0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    FieldBossRaidCount;                                      // 0x00E8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WorldBossRaidCount;                                      // 0x00EC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildResurrectionCount;                                  // 0x00F0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZJXV[0x4];                                   // 0x00F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               GuildResurrectionDepartureSkill;                         // 0x00F8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               GuildResurrectionArrivalSkill;                           // 0x0108(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLRecourceItem
	 * Size -> 0x0008
	 */
	struct FTLRecourceItem
	{
	public:
		int32_t                                                    ItemIndex;                                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsDonable;                                               // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9266[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoGuildContractReward
	 * Size -> 0x0050
	 */
	struct FTLInfoGuildContractReward
	{
	public:
		unsigned char                                              UnknownData_XM8K[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoGuildContractGroup
	 * Size -> 0x0028
	 */
	struct FTLInfoGuildContractGroup
	{
	public:
		unsigned char                                              UnknownData_ZEE8[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoGuildContract
	 * Size -> 0x0078
	 */
	struct FTLInfoGuildContract
	{
	public:
		unsigned char                                              UnknownData_TVGZ[0x78];                                  // 0x0000(0x0078) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLGuildContractObjectiveDescription
	 * Size -> 0x0028
	 */
	struct FTLGuildContractObjectiveDescription
	{
	public:
		class FText                                                ObjectiveDescriptionText;                                // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       HyperLinkRefList;                                        // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuildContract
	 * Size -> 0x00A8 (FullSize[0x00B0] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGuildContract : public FTableRowBase
	{
	public:
		EGuildContractType                                         ContractType;                                            // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2Z7L[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Title;                                                   // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     IconPath;                                                // 0x0028(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Subtitle;                                                // 0x0040(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ProgressDesc;                                            // 0x0058(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLGuildContractObjectiveDescription>        ObjectiveDescriptionList;                                // 0x0070(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       RecommandTerritory;                                      // 0x0080(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       RecommandRegionGroup;                                    // 0x0090(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        SpecialExpectationItemNames;                             // 0x00A0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuildContractGroup
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGuildContractGroup : public FTableRowBase
	{
	public:
		EGuildContractType                                         ContractType;                                            // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5MTD[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     GroupIconPath;                                           // 0x0010(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Desc;                                                    // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UnlockMemorialRecordRow;                                 // 0x0038(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                MemorialFormatText;                                      // 0x0048(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       HyperLinkRefList;                                        // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuildRaid
	 * Size -> 0x00F8 (FullSize[0x0100] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGuildRaid : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildLevel;                                              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLCreatureRank                                            CreatureRank;                                            // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N51F[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLDataTableRowHandle>                       NpcList;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               GateFoState;                                             // 0x0028(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               WarpMap;                                                 // 0x0038(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              RaidReward;                                              // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildPoint;                                              // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildRewardBoxPoint;                                     // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ResurrectionCount;                                       // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z1TQ[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UINpcName;                                               // 0x0068(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                UINpcDesc;                                               // 0x0080(0x0018) Edit, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UINpcPortrait;                                           // 0x0098(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UINpcBackGround;                                         // 0x00B0(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   UINpcLevel;                                              // 0x00C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLBodyType                                                BodyType;                                                // 0x00CC(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZCAA[0x3];                                   // 0x00CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               Species;                                                 // 0x00D0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UnlockMemorialRecordRow;                                 // 0x00E0(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        RewardItems;                                             // 0x00F0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLGuildRewardBoxRewardItem
	 * Size -> 0x000C
	 */
	struct FTLGuildRewardBoxRewardItem
	{
	public:
		class FName                                                ItemId;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quantity;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGuildRewardBox
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemeGuildRewardBox : public FTableRowBase
	{
	public:
		TArray<struct FTLGuildRewardBoxRewardItem>                 RewardBoxRewardItems;                                    // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeHelpTime
	 * Size -> 0x0020
	 */
	struct FTLSchemeHelpTime
	{
	public:
		int32_t                                                    TargetMsMin;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TargetMsMax;                                             // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TargetText;                                              // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeHelp
	 * Size -> 0x0118 (FullSize[0x0120] - InheritedSize[0x0008])
	 */
	struct FTLSchemeHelp : public FTableRowBase
	{
	public:
		class FText                                                Title;                                                   // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     HelpImage;                                               // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeHelpTime>                           TimeInfos;                                               // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsShowDesc;                                              // 0x0048(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SZ3T[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DescText;                                                // 0x0050(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       WebHelp;                                                 // 0x0068(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9E3Q[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              WebHelpUrlParameter;                                     // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WebHelpUrlParameter_Korean;                              // 0x0080(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WebHelpUrlParameter_English;                             // 0x0090(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WebHelpUrlParameter_Japanese;                            // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WebHelpUrlParameter_ChineseTraditional;                  // 0x00B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WebHelpUrlParameter_French;                              // 0x00C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WebHelpUrlParameter_German;                              // 0x00D0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WebHelpUrlParameter_Spanish;                             // 0x00E0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WebHelpUrlParameter_SpanishLatAm;                        // 0x00F0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WebHelpUrlParameter_Portuguese;                          // 0x0100(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WebHelpUrlParameter_Thai;                                // 0x0110(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeHelpCategory
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSchemeHelpCategory : public FTableRowBase
	{
	public:
		ETLUIPlatform                                              UIPlatform;                                              // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VWIG[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Controller;                                              // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                Title;                                                   // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       HelpItems;                                               // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeHudCustomizeComponent
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FTLSchemeHudCustomizeComponent : public FTableRowBase
	{
	public:
		EHudWidgetKey                                              Key;                                                     // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JN1L[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Version;                                                 // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableComponent;                                         // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableTranslationX;                                      // 0x0031(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableTranslationY;                                      // 0x0032(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableScalingX;                                          // 0x0033(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableScalingY;                                          // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableZOrdering;                                         // 0x0035(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableLinking;                                           // 0x0036(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B8S9[0x1];                                   // 0x0037(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAnchors                                            Anchors;                                                 // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                           DesiredSize;                                             // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           DesiredPosition;                                         // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Alignment;                                               // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMargin                                             Padding;                                                 // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoHyperLinkText
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLInfoHyperLinkText : public FTableRowBase
	{
	public:
		class FText                                                LinkText;                                                // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		ETLHyperLinkType                                           LinkType;                                                // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P0HT[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLGuidTableRowHandle                               ContentGuid;                                             // 0x0028(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                CommonTableId;                                           // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RegionInfoTableId;                                       // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UID;                                                     // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LTHF[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInfinityDungeonRewardItemData
	 * Size -> 0x000C
	 */
	struct FTLSchemeInfinityDungeonRewardItemData
	{
	public:
		class FName                                                Item;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemCount;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInfinityDungeonReward
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSchemeInfinityDungeonReward : public FTableRowBase
	{
	public:
		int32_t                                                    Exp;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JRQC[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    gold;                                                    // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    Diamond;                                                 // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    BmCoin;                                                  // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeInfinityDungeonRewardItemData>      ItemRewardList;                                          // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInfinityDungeonSensorObject
	 * Size -> 0x0018
	 */
	struct FTLSchemeInfinityDungeonSensorObject
	{
	public:
		class FName                                                EffectId;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               QuestEffectLooksId;                                      // 0x0008(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInfinityDungeonEvent
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSchemeInfinityDungeonEvent : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UiTableId;                                               // 0x0010(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLSchemeInfinityDungeonSensorObject                SensorObjectEffect;                                      // 0x0020(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInfinityDungeonGuide
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLSchemeInfinityDungeonGuide : public FTableRowBase
	{
	public:
		class FText                                                DungeonTitle;                                            // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       Steps;                                                   // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInfinityDungeonGuideObjective
	 * Size -> 0x0020
	 */
	struct FTLSchemeInfinityDungeonGuideObjective
	{
	public:
		class FText                                                ObjectiveTitle;                                          // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       IsCounting;                                              // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VKLX[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInfinityDungeonGuideStep
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLSchemeInfinityDungeonGuideStep : public FTableRowBase
	{
	public:
		class FText                                                StepDesc;                                                // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeInfinityDungeonGuideObjective>      Objectives;                                              // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MusicPath;                                               // 0x0030(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AudioTag;                                                // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInfinityDungeonInfo
	 * Size -> 0x0098
	 */
	struct FTLSchemeInfinityDungeonInfo
	{
	public:
		class FString                                              Comment;                                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                FloorTitle;                                              // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                FloorDescription;                                        // 0x0028(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    MinLevel;                                                // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JSF0[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     FloorPortraitImagePath;                                  // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     FloorBackgroundImagePath;                                // 0x0060(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               MapIdRow;                                                // 0x0078(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               RewardTable;                                             // 0x0088(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInfinityDungeonGroup
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLSchemeInfinityDungeonGroup : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4OO0[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Title;                                                   // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Desc;                                                    // 0x0028(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeInfinityDungeonInfo>                DungeonInfos;                                            // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                EnterItemName;                                           // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    EnterItemAmount;                                         // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeInitialSkillQuickSlot
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemeInitialSkillQuickSlot : public FTableRowBase
	{
	public:
		int32_t                                                    WeaponCombinationKey;                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SlotIndex;                                               // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ComplexGuid;                                             // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoUse;                                                // 0x0014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q4HO[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoInstanceMapGuideEventLooks
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLInfoInstanceMapGuideEventLooks : public FTableRowBase
	{
	public:
		class FText                                                UITitle;                                                 // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bShowObjectivePoint;                                     // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ICEM[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     MusicPath;                                               // 0x0028(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AudioTag;                                                // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInteractionConditionBase
	 * Size -> 0x0128
	 */
	struct FTLInteractionConditionBase
	{
	public:
		EConditionCategory                                         ConditionCategory;                                       // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_32G9[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               ItemInfo;                                                // 0x0008(0x0010) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FTLDataTableRowHandle                               KeyItemInfo;                                             // 0x0018(0x0010) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FTLDataTableRowHandle                               effect;                                                  // 0x0028(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    RequireCount;                                            // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConsumeCount;                                            // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuildLevel;                                              // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YPUV[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               TerritoryFog;                                            // 0x0048(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               CastleId;                                                // 0x0058(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGuidTableRowHandle                               CodexObjectiveGuid;                                      // 0x0068(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGuidTableRowHandle                               AchievementGuid;                                         // 0x0080(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGuidTableRowHandle                               DynamicEventSideGuid;                                    // 0x0098(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLGuidTableRowHandle                               MemorialGuid;                                            // 0x00B0(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               DungeonWaypointUid;                                      // 0x00C8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       CheckCoverTribe;                                         // 0x00D8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IG7T[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLDataTableRowHandle>                       Polymorph;                                               // 0x00E0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               GuildResource;                                           // 0x00F0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               TribeId;                                                 // 0x0100(0x0010) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		int32_t                                                    PlayerLevel;                                             // 0x0110(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsOppositeCondition;                                     // 0x0114(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3LID[0x13];                                  // 0x0115(0x0013) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInteractionFilterCondition
	 * Size -> 0x0000 (FullSize[0x0128] - InheritedSize[0x0128])
	 */
	struct FTLInteractionFilterCondition : public FTLInteractionConditionBase
	{	};

	/**
	 * ScriptStruct TLScheme.TLInteractionCondition
	 * Size -> 0x0018 (FullSize[0x0140] - InheritedSize[0x0128])
	 */
	struct FTLInteractionCondition : public FTLInteractionConditionBase
	{
	public:
		struct FTLDataTableRowHandle                               CategoryInfoHandle;                                      // 0x0128(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TD0T[0x8];                                   // 0x0138(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInteractionData
	 * Size -> 0x0110 (FullSize[0x0118] - InheritedSize[0x0008])
	 */
	struct FTLInteractionData : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFacilityType                                              FacilityType;                                            // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F8MJ[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                FacilityId;                                              // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EGaugeType                                                 GaugeType;                                               // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGaugeShowAll;                                           // 0x0019(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGaugeTargetSelectedPlayers;                             // 0x001A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GUAG[0x5];                                   // 0x001B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SkillId;                                                 // 0x0020(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GaugeMaxUserCount;                                       // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_86LP[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                InteractionTitle;                                        // 0x0038(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ChoiceIconPath;                                          // 0x0050(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     InteractIconPath;                                        // 0x0068(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLInteractionFilterCondition>               FilterCondition;                                         // 0x0080(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLInteractionCondition>                     EnableCondition;                                         // 0x0090(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OnSuccessSound;                                          // 0x00A0(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               OnFailSystemMessageRow;                                  // 0x00B8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLInteractionCameraPreset                          InteractionCameraPreset;                                 // 0x00C8(0x0028) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bUseConfirmPopup;                                        // 0x00F0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_74SG[0x7];                                   // 0x00F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ConfirmMessageText;                                      // 0x00F8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       DispelPolymorph;                                         // 0x0110(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VYD2[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInteractionContidionCategory
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FTLInteractionContidionCategory : public FTableRowBase
	{
	public:
		EConditionCategory                                         CategoryType;                                            // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PXB0[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     IconPath;                                                // 0x0010(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                PossibleMsgFormat;                                       // 0x0028(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ErrorMsg;                                                // 0x0040(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ErrorMsgForOppositCondition;                             // 0x0058(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLUniqueOption
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTLUniqueOption : public FTableRowBase
	{
	public:
		class FName                                                passive;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.ItemPreviewStat
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FItemPreviewStat : public FTableRowBase
	{
	public:
		class FName                                                Type;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WP1K[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.ItemOption
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FItemOption : public FTableRowBase
	{
	public:
		class FName                                                Type;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    probability;                                             // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.ItemOptionGroup
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FItemOptionGroup : public FTableRowBase
	{
	public:
		TArray<struct FItemOption>                                 Option;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.ItemFixedExtraStat
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FItemFixedExtraStat : public FTableRowBase
	{
	public:
		class FName                                                Type;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_49LJ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.ItemLevelExtraStat
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FItemLevelExtraStat : public FTableRowBase
	{
	public:
		int32_t                                                    unlock_level;                                            // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Type;                                                    // 0x000C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZSO3[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLItemPreview
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLItemPreview : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Num;                                                     // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3FZU[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FItemPreviewStat>                            MainStat;                                                // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FItemOptionGroup>                            OptionGroup;                                             // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FItemFixedExtraStat>                         FixedExtraStat;                                          // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FItemLevelExtraStat>                         LevelExtraStat;                                          // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		EPcStatsType                                               BasicStatType;                                           // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7G64[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLItemSlotLooks
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTLItemSlotLooks : public FTableRowBase
	{
	public:
		class UTexture2D*                                          IconPath;                                                // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoItemAttackSpeedBaseline
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTLInfoItemAttackSpeedBaseline : public FTableRowBase
	{
	public:
		int32_t                                                    AttackSpeed;                                             // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AHUM[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoItemStats
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLInfoItemStats : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_OZK5[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EBool                                                      enchantable;                                             // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEnchantCategory                                           enchant_category;                                        // 0x0011(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5GXQ[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                enchant_id;                                              // 0x0014(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                enchant_transfer_id;                                     // 0x001C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                trait_group_id;                                          // 0x0024(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                main_stat_enchant_id;                                    // 0x002C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                extra_stat_enchant_id;                                   // 0x0034(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    enchant_level_max;                                       // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoItemAutoUseGroup
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLInfoItemAutoUseGroup : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_LUZT[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EItemAutoUseType                                           Type;                                                    // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JZ8K[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLDataTableRowHandle>                       Items;                                                   // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       Abnormals;                                               // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemCollectionRewardStat
	 * Size -> 0x000C
	 */
	struct FTLSchemeItemCollectionRewardStat
	{
	public:
		class FName                                                RewardStatId;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Seed;                                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemCollectionRewardItem
	 * Size -> 0x0010
	 */
	struct FTLItemCollectionRewardItem
	{
	public:
		class FName                                                ItemId;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   Quantity;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   EnchantLevel;                                            // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemCollectionTime
	 * Size -> 0x0014
	 */
	struct FTLSchemeItemCollectionTime
	{
	public:
		uint32_t                                                   Year;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   Month;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   Day;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   Hour;                                                    // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   Minute;                                                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemCollection
	 * Size -> 0x0080 (FullSize[0x0088] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemCollection : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R9GI[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLDataTableRowHandle>                       ItemSetGroups;                                           // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2PPU[0x10];                                  // 0x0020(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeItemCollectionRewardStat>           RewardStats;                                             // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UL9P[0x10];                                  // 0x0040(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLItemCollectionRewardItem>                 RewardItems;                                             // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLSchemeItemCollectionTime                         StartedTime;                                             // 0x0060(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLSchemeItemCollectionTime                         ExpiredTime;                                             // 0x0074(0x0014) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemCollectionLooks
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemCollectionLooks : public FTableRowBase
	{
	public:
		int32_t                                                    CollectionUid;                                           // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E2TX[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayName;                                             // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0028(0x0018) Edit, NativeAccessSpecifierPublic
		ETLItemCollectionType                                      CollectionType;                                          // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2PHB[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemCollectionOptionCategory
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemCollectionOptionCategory : public FTableRowBase
	{
	public:
		class FText                                                UIName;                                                  // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		EItemCollectionOptionType                                  UIOptionType;                                            // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X9XA[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EPcStatsType>                                       StatList;                                                // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemCollectionSetGroup
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemCollectionSetGroup : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnchantLevel;                                            // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MainItem;                                                // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        SubItems;                                                // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemDecomposeResult
	 * Size -> 0x0010
	 */
	struct FTLSchemeItemDecomposeResult
	{
	public:
		class FName                                                item_id;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    Quantity;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemDecomposeResultPerEnchantLevel
	 * Size -> 0x0018
	 */
	struct FTLSchemeItemDecomposeResultPerEnchantLevel
	{
	public:
		int32_t                                                    enchant_level;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9JUY[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeItemDecomposeResult>                Item;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemDecomposePreview
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemDecomposePreview : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeItemDecomposeResultPerEnchantLevel> DecomposeItems;                                          // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemElixine
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemElixine : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_BVGC[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Diamond;                                                 // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Adena;                                                   // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                payback_item;                                            // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    passive_skill_enhancing_level;                           // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5SCZ[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemElixinePaybackItem
	 * Size -> 0x000C
	 */
	struct FTLSchemeItemElixinePaybackItem
	{
	public:
		class FName                                                item_id;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quantity;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemElixinePayback
	 * Size -> 0x0010
	 */
	struct FTLSchemeItemElixinePayback
	{
	public:
		TArray<struct FTLSchemeItemElixinePaybackItem>             Item;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemElixinePreview
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemElixinePreview : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_MLFY[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeItemElixinePayback>                 PaybackItems;                                            // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemEnchantPointOverRatio
	 * Size -> 0x0008
	 */
	struct FTLItemEnchantPointOverRatio
	{
	public:
		int32_t                                                    EnchantLevel;                                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Ratio;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemEnchantResourceNew
	 * Size -> 0x000C
	 */
	struct FTLItemEnchantResourceNew
	{
	public:
		class FName                                                ItemId;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quantity;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemEnchantEntity
	 * Size -> 0x0028
	 */
	struct FTLItemEnchantEntity
	{
	public:
		int32_t                                                    EnchantLevel;                                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gold;                                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLItemEnchantResourceNew>                   ResourceItems;                                           // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                ItemEnchantProbabilityId;                                // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OverEnchantPointRatio;                                   // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z4VE[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemEnchant
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemEnchant : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_R332[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    EnchantMaxLevel;                                         // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0M6D[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLItemEnchantPointOverRatio>                EnchantPointOverRatios;                                  // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLItemEnchantEntity>                        EnchantEntities;                                         // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemEnchantResult
	 * Size -> 0x0008
	 */
	struct FTLItemEnchantResult
	{
	public:
		int32_t                                                    Grade;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Point;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemEnchantResourceCandidate
	 * Size -> 0x0010
	 */
	struct FTLItemEnchantResourceCandidate
	{
	public:
		class FName                                                ItemId;                                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quantity;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnchantLevel;                                            // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemEnchantResource
	 * Size -> 0x0010
	 */
	struct FTLItemEnchantResource
	{
	public:
		TArray<struct FTLItemEnchantResourceCandidate>             ResourceCandidate;                                       // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemEnchantLevelResource
	 * Size -> 0x0030
	 */
	struct FTLItemEnchantLevelResource
	{
	public:
		TArray<struct FTLItemEnchantResult>                        EnchantResult;                                           // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int64_t                                                    gold;                                                    // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLItemEnchantResource>                      Resource;                                                // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    EnchantLevel;                                            // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OXVF[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemEnchantPreview
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemEnchantPreview : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLItemEnchantLevelResource>                 EnchantLevelResource;                                    // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoItemEnchantResource
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLInfoItemEnchantResource : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ID;                                                      // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    enchant_level;                                           // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      destruction;                                             // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XJ33[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    max_additional_level_by_bless;                           // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TCKX[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    gold;                                                    // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemEnchantResultNew
	 * Size -> 0x000C
	 */
	struct FTLItemEnchantResultNew
	{
	public:
		EEnchantResultType                                         EnchantResultType;                                       // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TIDT[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    EnchantPoint;                                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    probability;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemEnchantProbability
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemEnchantProbability : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_C6JB[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLItemEnchantResultNew>                     EnchantResult;                                           // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemEnchantTransferEnchantLevelEntity
	 * Size -> 0x000C
	 */
	struct FTLItemEnchantTransferEnchantLevelEntity
	{
	public:
		int32_t                                                    EnchantLevel;                                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccumulatedPoint;                                        // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccumulatedGold;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemEnchantTransferItemGradeEntity
	 * Size -> 0x0018
	 */
	struct FTLItemEnchantTransferItemGradeEntity
	{
	public:
		EItemGrade                                                 ItemGrade;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_111U[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLItemEnchantTransferEnchantLevelEntity>    EnchantLevelEntities;                                    // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemEnchantTransfer
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemEnchantTransfer : public FTableRowBase
	{
	public:
		class FName                                                RowName;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLItemEnchantTransferItemGradeEntity>       ItemGradeEntities;                                       // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoItemExtraStatEnchant
	 * Size -> 0x01E0 (FullSize[0x01E8] - InheritedSize[0x0008])
	 */
	struct FTLInfoItemExtraStatEnchant : public FTableRowBase
	{
	public:
		class FName                                                seed_group_id;                                           // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    enchant_level;                                           // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    str;                                                     // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dex;                                                     // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Int;                                                     // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    per;                                                     // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_range_modifier;                                   // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_modifier;                                   // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    critical_attack;                                         // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    critical_defense;                                        // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_reduction;                                        // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_reduction_penetration;                            // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    move_speed_modifier;                                     // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_rating;                                           // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    armor_class;                                             // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_max;                                                  // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_regen;                                                // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_max;                                                // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_regen;                                              // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_consumption_modifier;                               // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    active_cost_consumption_modifier;                        // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    passive_cost_consumption_modifier;                       // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    passive_morale_consumption_modifier;                     // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_max;                                             // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_regen;                                           // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    fire_amplification;                                      // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    water_amplification;                                     // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    wind_amplification;                                      // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earth_amplification;                                     // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    fire_resistance;                                         // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    water_resistance;                                        // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    wind_resistance;                                         // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earth_resistance;                                        // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_accuracy;                                          // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_accuracy;                                          // 0x0094(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_accuracy;                                          // 0x0098(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_evasion;                                           // 0x009C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_evasion;                                           // 0x00A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_evasion;                                           // 0x00A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_amplification;                                   // 0x00A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_resistance;                                      // 0x00AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_accuracy;                                         // 0x00B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_accuracy;                                           // 0x00B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_accuracy;                                  // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_accuracy;                                          // 0x00BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_accuracy;                                        // 0x00C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_accuracy;                                           // 0x00C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_accuracy;                                          // 0x00C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_tolerance;                                        // 0x00CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_tolerance;                                          // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_tolerance;                                 // 0x00D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_tolerance;                                         // 0x00D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_tolerance;                                       // 0x00DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_tolerance;                                          // 0x00E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_tolerance;                                         // 0x00E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_exp_acquired;                                     // 0x00E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_gold_drop;                                        // 0x00EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_item_drop;                                        // 0x00F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_resource_drop;                                    // 0x00F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    potion_heal_modifier;                                    // 0x00F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_cooldown_modifier;                                 // 0x00FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    belonging_weight_cap;                                    // 0x0100(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_chance;                                     // 0x0104(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_efficiency;                                 // 0x0108(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_main_hand;                                  // 0x010C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_off_hand;                                   // 0x0110(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power;                                      // 0x0114(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power_main_hand;                            // 0x0118(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power_off_hand;                             // 0x011C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_grankus_attack_power;                              // 0x0120(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_einarden_attack_power;                             // 0x0124(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_dragon_attack_power;                               // 0x0128(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_demon_attack_power;                                // 0x012C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_undead_attack_power;                               // 0x0130(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_creation_attack_power;                             // 0x0134(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_spirit_attack_power;                               // 0x0138(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_animal_attack_power;                               // 0x013C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_insect_attack_power;                               // 0x0140(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_plant_attack_power;                                // 0x0144(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    grankus_damage_reduction;                                // 0x0148(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    einarden_damage_reduction;                               // 0x014C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dragon_damage_reduction;                                 // 0x0150(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    demon_damage_reduction;                                  // 0x0154(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    undead_damage_reduction;                                 // 0x0158(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    creation_damage_reduction;                               // 0x015C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    spirit_damage_reduction;                                 // 0x0160(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    animal_damage_reduction;                                 // 0x0164(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    insect_damage_reduction;                                 // 0x0168(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    plant_damage_reduction;                                  // 0x016C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    double_attack;                                           // 0x0170(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    double_defense;                                          // 0x0174(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_armor;                                             // 0x0178(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_armor;                                             // 0x017C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_armor;                                             // 0x0180(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_attack;                                   // 0x0184(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_attack;                                   // 0x0188(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_attack;                                   // 0x018C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_defense;                                  // 0x0190(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_defense;                                  // 0x0194(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_defense;                                  // 0x0198(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_attack;                                     // 0x019C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_attack;                                     // 0x01A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_attack;                                     // 0x01A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_defense;                                    // 0x01A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_defense;                                    // 0x01AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_defense;                                    // 0x01B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_critical_attack;                              // 0x01B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_critical_attack;                              // 0x01B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_critical_attack;                              // 0x01BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_critical_defense;                             // 0x01C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_critical_defense;                             // 0x01C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_critical_defense;                             // 0x01C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_double_attack;                                // 0x01CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_double_attack;                                // 0x01D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_double_attack;                                // 0x01D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_double_defense;                               // 0x01D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_double_defense;                               // 0x01DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_double_defense;                               // 0x01E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E0X4[0x4];                                   // 0x01E4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoItemEnchantMainStat
	 * Size -> 0x0090 (FullSize[0x0098] - InheritedSize[0x0008])
	 */
	struct FTLInfoItemEnchantMainStat : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    enchant_level;                                           // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power;                                            // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_main_hand;                                  // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_off_hand;                                   // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power;                                      // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power_main_hand;                            // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power_off_hand;                             // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed;                                            // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_main_hand;                                  // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_off_hand;                                   // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_range;                                            // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_range_main_hand;                                  // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_range_off_hand;                                   // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    armor_class;                                             // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_max;                                                // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_regen;                                              // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    health_point_max;                                        // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    potion_heal_modifier;                                    // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_accuracy;                                          // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_accuracy;                                          // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_accuracy;                                          // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    critical_attack;                                         // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_chance;                                     // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_efficiency;                                 // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_reduction;                                        // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_rating;                                           // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_modifier;                                   // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_armor;                                             // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_armor;                                             // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_armor;                                             // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_evasion;                                           // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_evasion;                                           // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_evasion;                                           // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ADXD[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemPassive
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemPassive : public FTableRowBase
	{
	public:
		class FName                                                passive_2;                                               // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                passive_3;                                               // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                passive_4;                                               // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BM8D[0x10];                                  // 0x0020(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoItemPictogram
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLInfoItemPictogram : public FTableRowBase
	{
	public:
		class FText                                                UIName;                                                  // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     icon;                                                    // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDimmed;                                                 // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisabled;                                               // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1JCV[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemPriority
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemPriority : public FTableRowBase
	{
	public:
		EItemCategory                                              ItemCategory;                                            // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0BHM[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   ItemPriority;                                            // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSelectableFixedPackagePreviewItem
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSelectableFixedPackagePreviewItem : public FTableRowBase
	{
	public:
		class FName                                                ItemId;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quantity;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnchantLevel;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSelectableFixedPackagePreviewSelectableItems
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSelectableFixedPackagePreviewSelectableItems : public FTableRowBase
	{
	public:
		TArray<struct FTLSelectableFixedPackagePreviewItem>        Item;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    SelectCount;                                             // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      IsShowConfirm;                                           // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A590[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSelectableFixedPackagePreviewUnselectableItems
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSelectableFixedPackagePreviewUnselectableItems : public FTableRowBase
	{
	public:
		TArray<struct FTLSelectableFixedPackagePreviewItem>        Item;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemSelectableFixedPackagePreview
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemSelectableFixedPackagePreview : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLSelectableFixedPackagePreviewSelectableItems     SelectableItems;                                         // 0x0010(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLSelectableFixedPackagePreviewUnselectableItems   UnselectableItems;                                       // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSelectableRandomPackagePreviewItem
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSelectableRandomPackagePreviewItem : public FTableRowBase
	{
	public:
		class FName                                                ItemId;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quantity;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnchantLevel;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSelectableRandomPackagePreviewSelectableItems
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSelectableRandomPackagePreviewSelectableItems : public FTableRowBase
	{
	public:
		TArray<struct FTLSelectableRandomPackagePreviewItem>       Item;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    SelectCount;                                             // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      IsShowConfirm;                                           // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1DLD[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSelectableRandomPackagePreviewUnselectableItems
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSelectableRandomPackagePreviewUnselectableItems : public FTableRowBase
	{
	public:
		TArray<struct FTLSelectableRandomPackagePreviewItem>       Item;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemSelectableRandomPackagePreview
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemSelectableRandomPackagePreview : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLSelectableRandomPackagePreviewSelectableItems    SelectableItems;                                         // 0x0010(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLSelectableRandomPackagePreviewUnselectableItems  UnselectableItems;                                       // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemSet
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemSet : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLItemSetParts                                            Category;                                                // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CIT9[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                item_id;                                                 // 0x0014(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UWNZ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemSetBonusStat
	 * Size -> 0x0008
	 */
	struct FTLSchemeItemSetBonusStat
	{
	public:
		EItemExtraStat                                             Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WSVD[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Value;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemSetBonusPreview
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemSetBonusPreview : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    set_count;                                               // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_03D1[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeItemSetBonusStat>                   ExtraStat;                                               // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        ItemPassiveId;                                           // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemSetLooks
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemSetLooks : public FTableRowBase
	{
	public:
		class FText                                                SetNameText;                                             // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemTooltipStatCategory
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLItemTooltipStatCategory : public FTableRowBase
	{
	public:
		EItemCategory                                              ItemCategory;                                            // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MB14[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EItemAttrType>                                      MainStatRegion;                                          // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EItemAttrType>                                      SubStatRegion;                                           // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<EItemAttrType>                                      FixStatRegion;                                           // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemTraitBlessPointPayback
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemTraitBlessPointPayback : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_W3XF[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ItemId;                                                  // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Ratio;                                                   // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_04DP[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLItemTraitCandidateNew
	 * Size -> 0x000C
	 */
	struct FTLItemTraitCandidateNew
	{
	public:
		class FName                                                TraitId;                                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BaseSeed;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemTraitGroup
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemTraitGroup : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_8867[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    InitCount;                                               // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxCount;                                                // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TraitPaybackId;                                          // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TraitBlessPointPaybackId;                                // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLItemTraitCandidateNew>                    TraitCandidates;                                         // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemTraitPaybackEntry
	 * Size -> 0x0008
	 */
	struct FTLSchemeItemTraitPaybackEntry
	{
	public:
		class FName                                                LotteryPrivateGroupId;                                   // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemTraitPayback
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemTraitPayback : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_LLYT[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, struct FTLSchemeItemTraitPaybackEntry>       PaybackEntries;                                          // 0x0010(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemTraits
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemTraits : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_3UEJ[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TraitNum;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ItemTraitsBaseValueId;                                   // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ItemTraitsEnchantValueId;                                // 0x001C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B0DO[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EItemTraitStats>                                    TraitStat;                                               // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemeItemTraitEnchantStats
	 * Size -> 0x0378
	 */
	struct FTLJsonSchemeItemTraitEnchantStats
	{
	public:
		int32_t                                                    enchant_level;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    str;                                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dex;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Int;                                                     // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    per;                                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_main_hand;                                  // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_off_hand;                                   // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power_main_hand;                            // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power_off_hand;                             // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_modifier;                                   // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_main_hand;                                  // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_off_hand;                                   // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_modifier;                                   // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_modifier_off_hand;                          // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_range_main_hand;                                  // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_range_off_hand;                                   // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_range_modifier;                                   // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_max;                                                  // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_max_modifier;                                         // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_regen;                                                // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_regen_modifier;                                       // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    potion_heal_modifier;                                    // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_doll_heal_modifier;                                // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_armor;                                             // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_armor;                                             // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_armor;                                             // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    armor_modifier;                                          // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_rating;                                           // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_chance;                                     // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_chance_penetration;                         // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_efficiency;                                 // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_max;                                                // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_regen;                                              // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_regen_modifier;                                     // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_spend;                                              // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_consumption_modifier;                               // 0x008C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_attack;                                   // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_attack;                                   // 0x0094(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_attack;                                   // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_defense;                                  // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_defense;                                  // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_defense;                                  // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_attack;                                     // 0x00A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_attack;                                     // 0x00AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_attack;                                     // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_defense;                                    // 0x00B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_defense;                                    // 0x00B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_defense;                                    // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_accuracy;                                          // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_accuracy;                                          // 0x00C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_accuracy;                                          // 0x00C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_evasion;                                           // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_evasion;                                           // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_evasion;                                           // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_bonus_attack_power;                                 // 0x00D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_damage_reduction;                                   // 0x00DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_critical_attack;                              // 0x00E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_critical_attack;                              // 0x00E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_critical_attack;                              // 0x00E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_critical_defense;                             // 0x00EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_critical_defense;                             // 0x00F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_critical_defense;                             // 0x00F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_double_attack;                                // 0x00F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_double_attack;                                // 0x00FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_double_attack;                                // 0x0100(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_double_defense;                               // 0x0104(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_double_defense;                               // 0x0108(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_double_defense;                               // 0x010C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_accuracy;                                     // 0x0110(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_accuracy;                                     // 0x0114(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_accuracy;                                     // 0x0118(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_evasion;                                      // 0x011C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_evasion;                                      // 0x0120(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_evasion;                                      // 0x0124(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_critical_attack;                               // 0x0128(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_critical_attack;                               // 0x012C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_critical_attack;                               // 0x0130(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_critical_defense;                              // 0x0134(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_critical_defense;                              // 0x0138(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_critical_defense;                              // 0x013C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_double_attack;                                 // 0x0140(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_double_attack;                                 // 0x0144(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_double_attack;                                 // 0x0148(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_double_defense;                                // 0x014C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_double_defense;                                // 0x0150(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_double_defense;                                // 0x0154(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_accuracy;                                      // 0x0158(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_accuracy;                                      // 0x015C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_accuracy;                                      // 0x0160(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_evasion;                                       // 0x0164(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_evasion;                                       // 0x0168(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_evasion;                                       // 0x016C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_damage_dealt_modifier;                             // 0x0170(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_damage_dealt_modifier;                             // 0x0174(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_damage_dealt_modifier;                             // 0x0178(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_damage_taken_modifier;                             // 0x017C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_damage_taken_modifier;                             // 0x0180(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_damage_taken_modifier;                             // 0x0184(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    critical_damage_dealt_modifier;                          // 0x0188(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_damage_dealt_modifier;                               // 0x018C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_damage_taken_modifier;                               // 0x0190(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_power_amplification;                               // 0x0194(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_power_resistance;                                  // 0x0198(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    buff_given_duration_modifier;                            // 0x019C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    debuff_taken_duration_modifier;                          // 0x01A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    aura_effect_boost;                                       // 0x01A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    aura_effect_boost_modifier;                              // 0x01A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    aura_radius_modifier;                                    // 0x01AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_reduction;                                        // 0x01B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    grankus_damage_reduction;                                // 0x01B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    einarden_damage_reduction;                               // 0x01B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dragon_damage_reduction;                                 // 0x01BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    demon_damage_reduction;                                  // 0x01C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    undead_damage_reduction;                                 // 0x01C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    creation_damage_reduction;                               // 0x01C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    spirit_damage_reduction;                                 // 0x01CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    animal_damage_reduction;                                 // 0x01D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    insect_damage_reduction;                                 // 0x01D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    plant_damage_reduction;                                  // 0x01D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_reduction_penetration;                            // 0x01DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_grankus_attack_power;                              // 0x01E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_einarden_attack_power;                             // 0x01E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_dragon_attack_power;                               // 0x01E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_demon_attack_power;                                // 0x01EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_undead_attack_power;                               // 0x01F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_creation_attack_power;                             // 0x01F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_spirit_attack_power;                               // 0x01F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_animal_attack_power;                               // 0x01FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_insect_attack_power;                               // 0x0200(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_plant_attack_power;                                // 0x0204(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_accuracy;                                         // 0x0208(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_tolerance;                                        // 0x020C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_accuracy;                                           // 0x0210(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_tolerance;                                          // 0x0214(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_accuracy;                                  // 0x0218(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_tolerance;                                 // 0x021C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_accuracy;                                          // 0x0220(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_tolerance;                                         // 0x0224(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_accuracy;                                        // 0x0228(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_tolerance;                                       // 0x022C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_accuracy;                                           // 0x0230(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_tolerance;                                          // 0x0234(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_accuracy;                                          // 0x0238(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_tolerance;                                         // 0x023C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_amplification;                                   // 0x0240(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_resistance;                                      // 0x0244(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_critical_attack;                                  // 0x0248(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_critical_defense;                                 // 0x024C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_critical_attack;                                    // 0x0250(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_critical_defense;                                   // 0x0254(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_critical_attack;                           // 0x0258(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_critical_defense;                          // 0x025C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_critical_attack;                                   // 0x0260(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_critical_defense;                                  // 0x0264(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_critical_attack;                                 // 0x0268(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_critical_defense;                                // 0x026C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_critical_attack;                                    // 0x0270(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_critical_defense;                                   // 0x0274(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_critical_attack;                                   // 0x0278(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_critical_defense;                                  // 0x027C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_double_attack;                                    // 0x0280(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_double_defense;                                   // 0x0284(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_double_attack;                                      // 0x0288(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_double_defense;                                     // 0x028C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_double_attack;                             // 0x0290(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_double_defense;                            // 0x0294(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_double_attack;                                     // 0x0298(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_double_defense;                                    // 0x029C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_double_attack;                                   // 0x02A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_double_defense;                                  // 0x02A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_double_attack;                                      // 0x02A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_double_defense;                                     // 0x02AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_double_attack;                                     // 0x02B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_double_defense;                                    // 0x02B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_immune;                                             // 0x02B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_immune;                                    // 0x02BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_immune;                                            // 0x02C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_immune;                                          // 0x02C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_immune;                                             // 0x02C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_immune;                                            // 0x02CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_immune;                                          // 0x02D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    move_speed;                                              // 0x02D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    move_speed_modifier;                                     // 0x02D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dash_fast_move_speed_modifier;                           // 0x02DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dash_normal_move_speed_modifier;                         // 0x02E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    swim_fast_move_speed_modifier;                           // 0x02E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    swim_normal_move_speed_modifier;                         // 0x02E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    glide_fast_move_speed_modifier;                          // 0x02EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    glide_normal_move_speed_modifier;                        // 0x02F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    belonging_weight_cap;                                    // 0x02F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    heal_taken_modifier;                                     // 0x02F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_boost_chance;                                     // 0x02FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_boost_scale;                                      // 0x0300(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    prime_attack_damage_boost_chance;                        // 0x0304(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    prime_attack_damage_boost_scale;                         // 0x0308(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_exp_acquired;                                     // 0x030C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_gold_acquired;                                    // 0x0310(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_item_drop;                                        // 0x0314(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_gold_drop;                                        // 0x0318(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_resource_drop;                                    // 0x031C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earn_weapon_mastery_exp_modifier;                        // 0x0320(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earn_dungeon_point_modifier;                             // 0x0324(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    spend_dungeon_point_modifier;                            // 0x0328(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gathering_speed;                                         // 0x032C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gathering_speed_modifier;                                // 0x0330(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gathering_double_chance;                                 // 0x0334(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gathering_critical_chance;                               // 0x0338(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    aggro_modifier;                                          // 0x033C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    heal_modifier;                                           // 0x0340(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_heal_taken_modifier;                               // 0x0344(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_cooldown_modifier;                                 // 0x0348(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    global_skill_cooldown_modifier;                          // 0x034C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    wild_polymorph_skill_cooldown_modifier;                  // 0x0350(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    polymorph_duration;                                      // 0x0354(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_max;                                             // 0x0358(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_regen;                                           // 0x035C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_regen_modifier;                                  // 0x0360(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_consumption;                                     // 0x0364(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_consumption_modifier;                            // 0x0368(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hitted_stop_duration_modifier;                           // 0x036C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hitted_stop_prevent_chance;                              // 0x0370(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    completely_hit_chance;                                   // 0x0374(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemeItemTraitsEnchantValue
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonSchemeItemTraitsEnchantValue : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonSchemeItemTraitEnchantStats>          Stats;                                                   // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemeItemTraitBaseStats
	 * Size -> 0x0378
	 */
	struct FTLJsonSchemeItemTraitBaseStats
	{
	public:
		int32_t                                                    Seed;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    str;                                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dex;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Int;                                                     // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    per;                                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_main_hand;                                  // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_off_hand;                                   // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power_main_hand;                            // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power_off_hand;                             // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_modifier;                                   // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_main_hand;                                  // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_off_hand;                                   // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_modifier;                                   // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_modifier_off_hand;                          // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_range_main_hand;                                  // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_range_off_hand;                                   // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_range_modifier;                                   // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_max;                                                  // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_max_modifier;                                         // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_regen;                                                // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_regen_modifier;                                       // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    potion_heal_modifier;                                    // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_doll_heal_modifier;                                // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_armor;                                             // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_armor;                                             // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_armor;                                             // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    armor_modifier;                                          // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_rating;                                           // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_chance;                                     // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_chance_penetration;                         // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_efficiency;                                 // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_max;                                                // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_regen;                                              // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_regen_modifier;                                     // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_spend;                                              // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_consumption_modifier;                               // 0x008C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_attack;                                   // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_attack;                                   // 0x0094(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_attack;                                   // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_defense;                                  // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_defense;                                  // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_defense;                                  // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_attack;                                     // 0x00A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_attack;                                     // 0x00AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_attack;                                     // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_defense;                                    // 0x00B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_defense;                                    // 0x00B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_defense;                                    // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_accuracy;                                          // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_accuracy;                                          // 0x00C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_accuracy;                                          // 0x00C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_evasion;                                           // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_evasion;                                           // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_evasion;                                           // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_bonus_attack_power;                                 // 0x00D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_damage_reduction;                                   // 0x00DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_critical_attack;                              // 0x00E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_critical_attack;                              // 0x00E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_critical_attack;                              // 0x00E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_critical_defense;                             // 0x00EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_critical_defense;                             // 0x00F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_critical_defense;                             // 0x00F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_double_attack;                                // 0x00F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_double_attack;                                // 0x00FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_double_attack;                                // 0x0100(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_double_defense;                               // 0x0104(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_double_defense;                               // 0x0108(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_double_defense;                               // 0x010C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_accuracy;                                     // 0x0110(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_accuracy;                                     // 0x0114(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_accuracy;                                     // 0x0118(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_evasion;                                      // 0x011C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_evasion;                                      // 0x0120(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_evasion;                                      // 0x0124(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_critical_attack;                               // 0x0128(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_critical_attack;                               // 0x012C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_critical_attack;                               // 0x0130(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_critical_defense;                              // 0x0134(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_critical_defense;                              // 0x0138(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_critical_defense;                              // 0x013C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_double_attack;                                 // 0x0140(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_double_attack;                                 // 0x0144(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_double_attack;                                 // 0x0148(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_double_defense;                                // 0x014C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_double_defense;                                // 0x0150(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_double_defense;                                // 0x0154(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_accuracy;                                      // 0x0158(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_accuracy;                                      // 0x015C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_accuracy;                                      // 0x0160(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_evasion;                                       // 0x0164(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_evasion;                                       // 0x0168(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_evasion;                                       // 0x016C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_damage_dealt_modifier;                             // 0x0170(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_damage_dealt_modifier;                             // 0x0174(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_damage_dealt_modifier;                             // 0x0178(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_damage_taken_modifier;                             // 0x017C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_damage_taken_modifier;                             // 0x0180(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_damage_taken_modifier;                             // 0x0184(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    critical_damage_dealt_modifier;                          // 0x0188(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_damage_dealt_modifier;                               // 0x018C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_damage_taken_modifier;                               // 0x0190(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_power_amplification;                               // 0x0194(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_power_resistance;                                  // 0x0198(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    buff_given_duration_modifier;                            // 0x019C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    debuff_taken_duration_modifier;                          // 0x01A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    aura_effect_boost;                                       // 0x01A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    aura_effect_boost_modifier;                              // 0x01A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    aura_radius_modifier;                                    // 0x01AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_reduction;                                        // 0x01B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    grankus_damage_reduction;                                // 0x01B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    einarden_damage_reduction;                               // 0x01B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dragon_damage_reduction;                                 // 0x01BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    demon_damage_reduction;                                  // 0x01C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    undead_damage_reduction;                                 // 0x01C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    creation_damage_reduction;                               // 0x01C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    spirit_damage_reduction;                                 // 0x01CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    animal_damage_reduction;                                 // 0x01D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    insect_damage_reduction;                                 // 0x01D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    plant_damage_reduction;                                  // 0x01D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_reduction_penetration;                            // 0x01DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_grankus_attack_power;                              // 0x01E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_einarden_attack_power;                             // 0x01E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_dragon_attack_power;                               // 0x01E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_demon_attack_power;                                // 0x01EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_undead_attack_power;                               // 0x01F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_creation_attack_power;                             // 0x01F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_spirit_attack_power;                               // 0x01F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_animal_attack_power;                               // 0x01FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_insect_attack_power;                               // 0x0200(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_plant_attack_power;                                // 0x0204(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_accuracy;                                         // 0x0208(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_tolerance;                                        // 0x020C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_accuracy;                                           // 0x0210(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_tolerance;                                          // 0x0214(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_accuracy;                                  // 0x0218(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_tolerance;                                 // 0x021C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_accuracy;                                          // 0x0220(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_tolerance;                                         // 0x0224(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_accuracy;                                        // 0x0228(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_tolerance;                                       // 0x022C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_accuracy;                                           // 0x0230(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_tolerance;                                          // 0x0234(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_accuracy;                                          // 0x0238(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_tolerance;                                         // 0x023C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_amplification;                                   // 0x0240(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_resistance;                                      // 0x0244(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_critical_attack;                                  // 0x0248(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_critical_defense;                                 // 0x024C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_critical_attack;                                    // 0x0250(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_critical_defense;                                   // 0x0254(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_critical_attack;                           // 0x0258(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_critical_defense;                          // 0x025C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_critical_attack;                                   // 0x0260(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_critical_defense;                                  // 0x0264(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_critical_attack;                                 // 0x0268(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_critical_defense;                                // 0x026C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_critical_attack;                                    // 0x0270(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_critical_defense;                                   // 0x0274(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_critical_attack;                                   // 0x0278(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_critical_defense;                                  // 0x027C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_double_attack;                                    // 0x0280(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_double_defense;                                   // 0x0284(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_double_attack;                                      // 0x0288(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_double_defense;                                     // 0x028C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_double_attack;                             // 0x0290(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_double_defense;                            // 0x0294(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_double_attack;                                     // 0x0298(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_double_defense;                                    // 0x029C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_double_attack;                                   // 0x02A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_double_defense;                                  // 0x02A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_double_attack;                                      // 0x02A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_double_defense;                                     // 0x02AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_double_attack;                                     // 0x02B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_double_defense;                                    // 0x02B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_immune;                                             // 0x02B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_immune;                                    // 0x02BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_immune;                                            // 0x02C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_immune;                                          // 0x02C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_immune;                                             // 0x02C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_immune;                                            // 0x02CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_immune;                                          // 0x02D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    move_speed;                                              // 0x02D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    move_speed_modifier;                                     // 0x02D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dash_fast_move_speed_modifier;                           // 0x02DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dash_normal_move_speed_modifier;                         // 0x02E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    swim_fast_move_speed_modifier;                           // 0x02E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    swim_normal_move_speed_modifier;                         // 0x02E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    glide_fast_move_speed_modifier;                          // 0x02EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    glide_normal_move_speed_modifier;                        // 0x02F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    belonging_weight_cap;                                    // 0x02F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    heal_taken_modifier;                                     // 0x02F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_boost_chance;                                     // 0x02FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_boost_scale;                                      // 0x0300(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    prime_attack_damage_boost_chance;                        // 0x0304(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    prime_attack_damage_boost_scale;                         // 0x0308(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_exp_acquired;                                     // 0x030C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_gold_acquired;                                    // 0x0310(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_item_drop;                                        // 0x0314(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_gold_drop;                                        // 0x0318(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_resource_drop;                                    // 0x031C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earn_weapon_mastery_exp_modifier;                        // 0x0320(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earn_dungeon_point_modifier;                             // 0x0324(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    spend_dungeon_point_modifier;                            // 0x0328(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gathering_speed;                                         // 0x032C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gathering_speed_modifier;                                // 0x0330(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gathering_double_chance;                                 // 0x0334(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gathering_critical_chance;                               // 0x0338(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    aggro_modifier;                                          // 0x033C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    heal_modifier;                                           // 0x0340(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_heal_taken_modifier;                               // 0x0344(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_cooldown_modifier;                                 // 0x0348(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    global_skill_cooldown_modifier;                          // 0x034C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    wild_polymorph_skill_cooldown_modifier;                  // 0x0350(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    polymorph_duration;                                      // 0x0354(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_max;                                             // 0x0358(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_regen;                                           // 0x035C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_regen_modifier;                                  // 0x0360(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_consumption;                                     // 0x0364(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_consumption_modifier;                            // 0x0368(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hitted_stop_duration_modifier;                           // 0x036C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hitted_stop_prevent_chance;                              // 0x0370(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    completely_hit_chance;                                   // 0x0374(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemeItemTraitsBaseValue
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLJsonSchemeItemTraitsBaseValue : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLJsonSchemeItemTraitBaseStats>             Stats;                                                   // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLUnselectableFixedPackagePreviewItem
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLUnselectableFixedPackagePreviewItem : public FTableRowBase
	{
	public:
		class FName                                                ItemId;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quantity;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnchantLevel;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLUnselectableFixedPackagePreviewItems
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLUnselectableFixedPackagePreviewItems : public FTableRowBase
	{
	public:
		TArray<struct FTLUnselectableFixedPackagePreviewItem>      Item;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemUnselectableFixedPackagePreview
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemUnselectableFixedPackagePreview : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLUnselectableFixedPackagePreviewItems             Items;                                                   // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLUnselectableRandomPackagePreviewItem
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLUnselectableRandomPackagePreviewItem : public FTableRowBase
	{
	public:
		class FName                                                ItemId;                                                  // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quantity;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnchantLevel;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TryCount;                                                // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q1BZ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLUnselectableRandomPackagePreviewItems
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLUnselectableRandomPackagePreviewItems : public FTableRowBase
	{
	public:
		TArray<struct FTLUnselectableRandomPackagePreviewItem>     Item;                                                    // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeItemUnselectableRandomPackagePreview
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLSchemeItemUnselectableRandomPackagePreview : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLUnselectableRandomPackagePreviewItems            FixedItems;                                              // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLUnselectableRandomPackagePreviewItems            RandomItems;                                             // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoKeyIcon
	 * Size -> 0x00A8 (FullSize[0x00B8] - InheritedSize[0x0010])
	 */
	struct FTLInfoKeyIcon : public FTLTableRowBase
	{
	public:
		struct FKey                                                Key;                                                     // 0x0010(0x0018) Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     icon;                                                    // 0x0028(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLImageSpecification                               IconSpec;                                                // 0x0040(0x0014) Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic
		float                                                      IconMatchFontRatio;                                      // 0x0054(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SmallIcon;                                               // 0x0058(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLImageSpecification                               SmallIconSpec;                                           // 0x0070(0x0014) Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic
		float                                                      SmallIconMatchFontRatio;                                 // 0x0084(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TutorialIcon;                                            // 0x0088(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLImageSpecification                               TutorialIconSpec;                                        // 0x00A0(0x0014) Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic
		float                                                      TutorialIconMatchFontRatio;                              // 0x00B4(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLLandMarkCameraInfo
	 * Size -> 0x001C
	 */
	struct FTLLandMarkCameraInfo
	{
	public:
		bool                                                       bUse;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SGF3[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Distance;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Pitch;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Yaw;                                                     // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendTime;                                               // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EViewTargetBlendFunction                                   BlendFunction;                                           // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TUY7[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BlendExp;                                                // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLLandmarkLooks
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FTLLandmarkLooks : public FTableRowBase
	{
	public:
		bool                                                       Underground;                                             // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UP43[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLLandMarkCameraInfo                               WarpEndCameraInfo;                                       // 0x000C(0x001C) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                UIName;                                                  // 0x0028(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                UIDescription;                                           // 0x0040(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               MapIconTableKey;                                         // 0x0058(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeLevelReward
	 * Size -> 0x0078
	 */
	struct FTLSchemeLevelReward
	{
	public:
		class FString                                              Comment;                                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLLevelAchievementType                                    AchievementType;                                         // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N7XD[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TitleText;                                               // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BackgroundImagePath;                                     // 0x0030(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ContentsOpenRef;                                         // 0x0048(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               HelpRef;                                                 // 0x0058(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               MissionRewardRef;                                        // 0x0068(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoLevelSetting
	 * Size -> 0x0150 (FullSize[0x0158] - InheritedSize[0x0008])
	 */
	struct FTLInfoLevelSetting : public FTableRowBase
	{
	public:
		class FString                                              level_exp_threshold;                                     // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              level_up_reward_id;                                      // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stat_point;                                              // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                system_message_id;                                       // 0x002C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    waypoint_fee_modifier;                                   // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    exp_loss_by_chaotic_death;                               // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    exp_loss_by_perfectly_chaotic_death;                     // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    exp_loss_by_neutral_death;                               // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    exp_loss_by_neutral_in_self_defense_death;               // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    exp_loss_by_lawful_death;                                // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    exp_loss_by_lawful_in_self_defense_death;                // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    recovery_cost;                                           // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    lost_and_found_coin;                                     // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               level_effect_id;                                         // 0x0078(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               neutral_effect_id;                                       // 0x0088(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               neutral_in_self_defense_effect_id;                       // 0x0098(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               lawful_effect_id;                                        // 0x00A8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               lawful_in_self_defense_effect_id;                        // 0x00B8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               chaotic_effect_id;                                       // 0x00C8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               perfectly_chaotic_effect_id;                             // 0x00D8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    MaxContractCount;                                        // 0x00E8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NpcContractDailyCount;                                   // 0x00EC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxNpcContractBonusCount;                                // 0x00F0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NpcContractBonusCount;                                   // 0x00F4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BmContractDailyCount;                                    // 0x00F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dungeon_point_daily_charge_count;                        // 0x00FC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dungeon_point_min_count;                                 // 0x0100(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dungeon_point_max_count;                                 // 0x0104(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dungeon_point_exp_acquired_boost_modifier;               // 0x0108(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dungeon_point_gold_acquired_boost_modifier;              // 0x010C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dungeon_point_item_drop_boost_modifier;                  // 0x0110(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dungeon_point_earn_modifier;                             // 0x0114(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dungeon_point_spend_modifier;                            // 0x0118(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dungeon_point_effect_property_uid;                       // 0x011C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       RecommendContractNpcHyperLinkRefList;                    // 0x0120(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O70Z[0x18];                                  // 0x0130(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeLevelReward>                        LevelRewardList;                                         // 0x0148(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoLoadingScreen
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLInfoLoadingScreen : public FTableRowBase
	{
	public:
		ELoadingScreenType                                         Type;                                                    // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsGamePad;                                              // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AWQQ[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               Manor;                                                   // 0x0010(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    MinLevel;                                                // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxLevel;                                                // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Image;                                                   // 0x0028(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLWeaponPreviewInfo
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLWeaponPreviewInfo : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     SelectContiPath;                                         // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     WeaponIcon;                                              // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              MainHandType;                                            // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DDGY[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UHiveEntityData*                                     MainHandHiveEntity;                                      // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              OffHandType;                                             // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N0T9[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UHiveEntityData*                                     OffHandHiveEntity;                                       // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     AmmoHiveEntity;                                          // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLEquipPreviewInfo
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLEquipPreviewInfo : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     SelectContiPath;                                         // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EquipIcon;                                               // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     HeadHiveEntity;                                          // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     ChestHiveEntity;                                         // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     LegsHiveEntity;                                          // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     HandsHiveEntity;                                         // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     FeetHiveEntity;                                          // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLFacialPreviewInfo
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLFacialPreviewInfo : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     FacialContiPath;                                         // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     FacialIcon;                                              // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLFacialRandomInfo
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLFacialRandomInfo : public FTableRowBase
	{
	public:
		TArray<struct FSoftObjectPath>                             FacialRandomList;                                        // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLLobbyLooks
	 * Size -> 0x01B8 (FullSize[0x01C0] - InheritedSize[0x0008])
	 */
	struct FTLLobbyLooks : public FTableRowBase
	{
	public:
		int32_t                                                    CustomizingPolymorphId;                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CustomizeCameraActorName;                                // 0x000C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RITB[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ETLGender, class FName>                               CustomizeCharacterActorNames;                            // 0x0018(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    CustomizingDefaultZoomIndex;                             // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_13LB[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLWeaponPreviewInfo>                        CustomizeMaleWeaponPreview;                              // 0x0070(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLWeaponPreviewInfo>                        CustomizeFemaleWeaponPreview;                            // 0x0080(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLEquipPreviewInfo>                         CustomizeMaleEquipPreview;                               // 0x0090(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLEquipPreviewInfo>                         CustomizeFemaleEquipPreview;                             // 0x00A0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<ETLGender, struct FSoftObjectPath>                    CustomizeGenderSelectContiPath;                          // 0x00B0(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLFacialPreviewInfo>                        CustomizeMaleFaciaPreview;                               // 0x0100(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLFacialPreviewInfo>                        CustomizeFemaleFaciaPreview;                             // 0x0110(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<ECustomizeFacialCategory, struct FTLFacialRandomInfo> CustomizeMaleRandomFacia;                                // 0x0120(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<ECustomizeFacialCategory, struct FTLFacialRandomInfo> CustomizeFemaleRandomFacia;                              // 0x0170(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLClassSelectInfo
	 * Size -> 0x0070 (FullSize[0x0078] - InheritedSize[0x0008])
	 */
	struct FTLClassSelectInfo : public FTableRowBase
	{
	public:
		class FName                                                SelectCameraSequenceName;                                // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SelectContiPath;                                         // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     HeadHiveEntity;                                          // 0x0028(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     ChestHiveEntity;                                         // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     LegsHiveEntity;                                          // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     HandsHiveEntity;                                         // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     FeetHiveEntity;                                          // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              MainHandType;                                            // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XJ0D[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UHiveEntityData*                                     MainHandHiveEntity;                                      // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              OffHandType;                                             // 0x0060(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PG9H[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UHiveEntityData*                                     OffHandHiveEntity;                                       // 0x0068(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     AmmoHiveEntity;                                          // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollWeightName
	 * Size -> 0x0008 (FullSize[0x000C] - InheritedSize[0x0004])
	 */
	struct FTLMagicDollWeightName : public FTLConditionWeight
	{
	public:
		class FName                                                Name;                                                    // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollCollectionRewardStat
	 * Size -> 0x0030
	 */
	struct FTLMagicDollCollectionRewardStat
	{
	public:
		class FName                                                RewardStatId;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Seed;                                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZHH5[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               RewardStatTableRow;                                      // 0x0010(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               StatLooksTableRow;                                       // 0x0020(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollCollectionDynamicStat
	 * Size -> 0x0028
	 */
	struct FTLMagicDollCollectionDynamicStat
	{
	public:
		class FName                                                DynamicStatID;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MultiplierFormulaID;                                     // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AdderFormulaID;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               DynamicStatLooksTableRow;                                // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMagicDollCollectionLevel
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FTLSchemeMagicDollCollectionLevel : public FTLTableRowBase
	{
	public:
		int32_t                                                    Count;                                                   // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0KEZ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               StatLooksTableRow;                                       // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLMagicDollCollectionRewardStat>            RewardStats;                                             // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLMagicDollCollectionDynamicStat                   DynamicStat;                                             // 0x0038(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollCollectionUnit
	 * Size -> 0x0030
	 */
	struct FTLMagicDollCollectionUnit
	{
	public:
		struct FTLDataTableRowHandle                               MagicDollTableRow;                                       // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    MagicDollLevel;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAnyMagicDollWithConditionSatisfied;                     // 0x0014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TFKB[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLGuidTableRowHandle                               ConditionAchievementGUID;                                // 0x0018(0x0018) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMagicDollCollection
	 * Size -> 0x0078 (FullSize[0x0088] - InheritedSize[0x0010])
	 */
	struct FTLSchemeMagicDollCollection : public FTLTableRowBase
	{
	public:
		class FText                                                UINameText;                                              // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLMagicDollCollectionUnit>                  CollectionUnits;                                         // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLMagicDollCollectionRewardStat>            RewardStats;                                             // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLMagicDollCollectionDynamicStat                   DynamicStat;                                             // 0x0048(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                RewardDescriptionText;                                   // 0x0070(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMagicDollCollectionExt
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FTLSchemeMagicDollCollectionExt : public FTLTableRowBase
	{	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollDialogContent
	 * Size -> 0x0010
	 */
	struct FTLMagicDollDialogContent
	{
	public:
		TArray<struct FTLDataTableRowHandle>                       DialogDatas;                                             // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoMagicDollDialog
	 * Size -> 0x00A0 (FullSize[0x00B8] - InheritedSize[0x0018])
	 */
	struct FTLInfoMagicDollDialog : public FTLSchemeDialogueBase
	{
	public:
		TMap<class FName, struct FTLMagicDollDialogContent>        DialogContents;                                          // 0x0018(0x0050) Edit, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3M6N[0x50];                                  // 0x0068(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLMagicDollDialogData
	 * Size -> 0x0088 (FullSize[0x0090] - InheritedSize[0x0008])
	 */
	struct FTLMagicDollDialogData : public FTableRowBase
	{
	public:
		struct FTLDataTableRowHandle                               SpeakerInfo;                                             // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                DialogString;                                            // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		bool                                                       ShowStringOnSpeechBallon;                                // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLMagicDollStringDialogType                               StringDialogType;                                        // 0x0031(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowStringOnUI;                                          // 0x0032(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowStringWithEmphasis;                                  // 0x0033(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HZAS[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     VoiceEvent;                                              // 0x0038(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLMagicDollExpressionVoiceType                            ExpressionVoiceType;                                     // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0RJ2[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     SceneContiPath;                                          // 0x0058(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DurationMs;                                              // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DelayTimeMs;                                             // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PortraitPath;                                            // 0x0078(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoMagicDollDialogEvent
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTLInfoMagicDollDialogEvent : public FTableRowBase
	{
	public:
		ETLMagicDollDialogEventType                                Type;                                                    // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TYFK[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMagicDollExtraMaterial
	 * Size -> 0x0018
	 */
	struct FTLSchemeMagicDollExtraMaterial
	{
	public:
		EMaterialCategory                                          RepresentativeMaterialCategory;                          // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C7FN[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BonusProbability;                                        // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BonusItemName;                                           // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMagicDollExtraMaterialChance
	 * Size -> 0x0148 (FullSize[0x0150] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMagicDollExtraMaterialChance : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_NPJG[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, struct FTLSchemeMagicDollExtraMaterial>      NormalChances;                                           // 0x0010(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<EWeatherType, struct FTLSchemeMagicDollExtraMaterial> WeatherConditionChances;                                 // 0x0060(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<ETimePhase, struct FTLSchemeMagicDollExtraMaterial>   TimeConditionChances;                                    // 0x00B0(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<class FString, struct FTLSchemeMagicDollExtraMaterial> FoConditionChances;                                      // 0x0100(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeExtraMaterial
	 * Size -> 0x0008
	 */
	struct FTLSchemeExtraMaterial
	{
	public:
		EMaterialCategory                                          material_category;                                       // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R9BA[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    probability;                                             // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMagicDollStat
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMagicDollStat : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_4HZA[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    hp_max;                                                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_regen;                                                // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_max;                                                // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_regen;                                              // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_consumption_modifier;                               // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    buff_cost_consumption_modifier;                          // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_cooldown_modifier;                                 // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    move_speed_modifier;                                     // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_exp_acquired;                                     // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_gold_acquired;                                    // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_gold_drop;                                        // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_item_drop;                                        // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    belonging_weight_cap;                                    // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earn_dungeon_point_modifier;                             // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    spend_dungeon_point_modifier;                            // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_doll_heal_modifier;                                // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeExtraMaterial>                      pick_extra_material_chance;                              // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMainMenu
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMainMenu : public FTableRowBase
	{
	public:
		struct FTLDataTableRowHandle                               UINameKey;                                               // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ContentsOpenKey;                                         // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UIImageIcon;                                             // 0x0028(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UIImageHoverIcon;                                        // 0x0040(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UITextTooltipKey;                                        // 0x0058(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLLinerLooks
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLLinerLooks : public FTableRowBase
	{
	public:
		class FText                                                UIName;                                                  // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               LinerCutsceneHiveKey;                                    // 0x0020(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoZoneLooks
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLInfoZoneLooks : public FTableRowBase
	{
	public:
		class FText                                                UIName;                                                  // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoMapCutscene
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLInfoMapCutscene : public FTableRowBase
	{
	public:
		struct FTLDataTableRowHandle                               CutsceneHiveKey;                                         // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		uint32_t                                                   ExecuteConditionPrevMapUid;                              // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       SavePlayCutsceneNpServer;                                // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2JS4[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLManor
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLManor : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_M19A[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIName;                                                  // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       ItemList;                                                // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLInfoMapCutscene>                          TLInfoMapCutsceneList;                                   // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       ApplyTradeTax;                                           // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G6VY[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMapDataMerge
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMapDataMerge : public FTableRowBase
	{
	public:
		struct FTLDataTableRowHandle                               MapID;                                                   // 0x0008(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TArray<ETLMapDataType>                                     MergeDataTypes;                                          // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeViewTerritoryZone
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeViewTerritoryZone : public FTableRowBase
	{
	public:
		struct FTLDataTableRowHandle                               MapID;                                                   // 0x0008(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               TerritoryZoneData;                                       // 0x0018(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeViewTerritory
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeViewTerritory : public FTableRowBase
	{
	public:
		struct FTLDataTableRowHandle                               MapID;                                                   // 0x0008(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               TerritoryData;                                           // 0x0018(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeViewRegionGroup
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeViewRegionGroup : public FTableRowBase
	{
	public:
		struct FTLDataTableRowHandle                               MapID;                                                   // 0x0008(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               RegionGroupData;                                         // 0x0018(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMap
	 * Size -> 0x00C0 (FullSize[0x00C8] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMap : public FTableRowBase
	{
	public:
		class FString                                              Description;                                             // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                MapName;                                                 // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    MapIndex;                                                // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLMapType                                                 MapType;                                                 // 0x0034(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLMapContentsType                                         MapContentsType;                                         // 0x0035(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsTestMapPersistentScale;                                // 0x0036(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RK2V[0x1];                                   // 0x0037(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLSchemeMapDataMerge>                       MergeMapDatas;                                           // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       MapFogDatas;                                             // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       IgnoreMapFogDatas;                                       // 0x0058(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsDrawMapArea;                                           // 0x0068(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowInstanceDungeonExitBtn;                              // 0x0069(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_31PF[0x6];                                   // 0x006A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                InstanceMessage;                                         // 0x0070(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class UHiveEntityData*                                     MapHiveEntity;                                           // 0x0088(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeViewTerritoryZone>                  AddViewTerritoryZone;                                    // 0x0090(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeViewTerritory>                      AddViewTerritory;                                        // 0x00A0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeViewRegionGroup>                    AddViewTerritoryRegionGroup;                             // 0x00B0(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      WallVisibleDistance;                                     // 0x00C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DZ49[0x4];                                   // 0x00C4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoMapCaptionContentsTooltip
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLInfoMapCaptionContentsTooltip : public FTableRowBase
	{
	public:
		class FText                                                UIName;                                                  // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TooltipIconPath;                                         // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoMapCaptionContents
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLInfoMapCaptionContents : public FTableRowBase
	{
	public:
		EMapIconType                                               MapIconType;                                             // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R6QV[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                MapIconFilterId;                                         // 0x000C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LTQX[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIName;                                                  // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     IconPath;                                                // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLInfoMapCaptionContentsTooltip>            TootipList;                                              // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoMapCaptionGroup
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLInfoMapCaptionGroup : public FTableRowBase
	{
	public:
		class FText                                                UIName;                                                  // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<struct FTLInfoMapCaptionContents>                   ContentsList;                                            // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLInfoMapCaptionContentsTooltip>            IconGuideList;                                           // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMapFrame
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMapFrame : public FTableRowBase
	{
	public:
		int32_t                                                    ZOrder;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShowMapScaleMin;                                         // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShowMapScaleMax;                                         // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsLineFrame;                                             // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsForceLine;                                             // 0x0015(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseWorldMap;                                             // 0x0016(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseMiniMap;                                              // 0x0017(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMapIconIndicator
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMapIconIndicator : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     IndicatorIconPath;                                       // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              IndicatorIconWidgetBPClass[0x28];                        // 0x0030(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		TArray<struct FSoftObjectPath>                             ExtraIndicatorIconPaths;                                 // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoMapIconStatus
	 * Size -> 0x0060
	 */
	struct FTLInfoMapIconStatus
	{
	public:
		struct FSoftObjectPath                                     ON;                                                      // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OFF;                                                     // 0x0018(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Friendly;                                                // 0x0030(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Hostile;                                                 // 0x0048(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeCompassMapIcon
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLSchemeCompassMapIcon : public FTableRowBase
	{
	public:
		ETLCompassShowType                                         CompassShowType;                                         // 0x0008(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FLJV[0x3];                                   // 0x0009(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ETLCompassEventType                                        CompassEventType;                                        // 0x000C(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZK6I[0x3];                                   // 0x000D(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ETLCompassEventShowType                                    InsideEventShowType;                                     // 0x0010(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ZCQ[0x3];                                   // 0x0011(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ETLCompassEventShowType                                    OutsideEventShowType;                                    // 0x0014(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9Z8S[0x3];                                   // 0x0015(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      CompassMapIconScale;                                     // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShowDistance;                                            // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HideDistance;                                            // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowOutsideAngle;                                       // 0x0024(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CVR6[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETLCompassDistanceShowType                                 DistanceShowType;                                        // 0x0028(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_64RN[0x3];                                   // 0x0029(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EMapIconType                                               ClusteredMapIconType;                                    // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U6BH[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ClusteringRange;                                         // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxShowCount;                                            // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DownSizeDistance;                                        // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DownSizeScale;                                           // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMapIconWidget
	 * Size -> 0x0130 (FullSize[0x0138] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMapIconWidget : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           IconSize;                                                // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Rotation;                                                // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ZOrder;                                                  // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMapScaleApply;                                          // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XBB8[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MapScaleFactor;                                          // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           SlotAlignment;                                           // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     IconPath;                                                // 0x0038(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLInfoMapIconStatus                                IconStatus;                                              // 0x0050(0x0060) Edit, NativeAccessSpecifierPublic
		TArray<struct FSoftObjectPath>                             ExtraIconPaths;                                          // 0x00B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              IconWidgetBPClass[0x28];                                 // 0x00C0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		struct FTLDataTableRowHandle                               MapIconIndicator;                                        // 0x00E8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLSchemeCompassMapIcon                             CompassMapIconInfo;                                      // 0x00F8(0x0040) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMapIconAction
	 * Size -> 0x0008
	 */
	struct FTLMapIconAction
	{
	public:
		uint32_t                                                   EventStatus;                                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLMapIconActionType                                       ActionType;                                              // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P76C[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMapIcon
	 * Size -> 0x01D8 (FullSize[0x01E0] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMapIcon : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMapIconType                                               IconType;                                                // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5AMW[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               ParentWorldMapFrame;                                     // 0x0020(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ParentMiniMapFrame;                                      // 0x0030(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		ETLMapIconCreateType                                       CreateType;                                              // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RP1E[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLDataTableRowHandle>                       ShowMapIDs;                                              // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       HideMapIDs;                                              // 0x0058(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               WidgetInfoID;                                            // 0x0068(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             WorldPos;                                                // 0x0078(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowMinimap;                                            // 0x0084(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowMinimapImage;                                       // 0x0085(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowWorldmap;                                           // 0x0086(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCreateIndicator;                                        // 0x0087(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefaultHideIndicatorBySystem;                           // 0x0088(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanUseTeleport;                                          // 0x0089(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_59HS[0x6];                                   // 0x008A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIName;                                                  // 0x0090(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                UIDescription;                                           // 0x00A8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                UISubName;                                               // 0x00C0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class FName>                                        FilterIDs;                                               // 0x00D8(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLMapIconAction>                            Actions;                                                 // 0x00E8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DetailIconPath;                                          // 0x00F8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDetailIcon;                                          // 0x0110(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseHideFlag;                                            // 0x0111(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsShowTooltip;                                          // 0x0112(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAutoPathFollow;                                      // 0x0113(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseHyperLinkIcon;                                       // 0x0114(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SY97[0x3];                                   // 0x0115(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                                     AutoPathFollowDestinations;                              // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FGuid>                                       AutoPathFollowDestinationMapRouteAnchorGuids;            // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIsAlwaysCheckRegionGroup;                               // 0x0138(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E5AC[0x7];                                   // 0x0139(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     DefaultWeatherIconPath;                                  // 0x0140(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     RainIconPath;                                            // 0x0158(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MagicRainIconPath;                                       // 0x0170(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DayTimeIconPath;                                         // 0x0188(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     NightTimeIconPath;                                       // 0x01A0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EclipseIconPath;                                         // 0x01B8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2BAB[0x10];                                  // 0x01D0(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMapRoomVolumeEffect
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMapRoomVolumeEffect : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_RLXF[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UID;                                                     // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMapRoomVolumeEffect                                       MapRoomVolumeEffect;                                     // 0x0014(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QW86[0x3];                                   // 0x0015(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		struct FTLDataTableRowHandle                               EffectId;                                                // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoMarkupImage
	 * Size -> 0x0040 (FullSize[0x0050] - InheritedSize[0x0010])
	 */
	struct FTLInfoMarkupImage : public FTLTableRowBase
	{
	public:
		struct FSoftObjectPath                                     ImagePath;                                               // 0x0010(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface*                                  MaterialInsterface;                                      // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLImageSpecification                               ImageSpec;                                               // 0x0030(0x0014) Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                           Offset;                                                  // 0x0044(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MatchFontRatio;                                          // 0x004C(0x0004) Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMemorialChapterLooks
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMemorialChapterLooks : public FTableRowBase
	{
	public:
		int32_t                                                    ChapterNum;                                              // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X3TT[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Title;                                                   // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       RecordTableKeys;                                         // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UCYM[0x18];                                  // 0x0038(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLMemoriaBookMarkDescription
	 * Size -> 0x0028
	 */
	struct FTLMemoriaBookMarkDescription
	{
	public:
		class FText                                                DescriptionText;                                         // 0x0000(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       HyperLinkRefList;                                        // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMemorialRecordLooks
	 * Size -> 0x0170 (FullSize[0x0178] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMemorialRecordLooks : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_R977[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Title;                                                   // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       DefaultBookmark;                                         // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_08CI[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     BGPath;                                                  // 0x0030(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                RecordDesc;                                              // 0x0048(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                AttainmentTargetsDesc1;                                  // 0x0060(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                AttainmentTargetsDesc2;                                  // 0x0078(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                AttainmentTargetsDesc3;                                  // 0x0090(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                UnLockTitle;                                             // 0x00A8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UnLockIconPath;                                          // 0x00C0(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UnLockDesc;                                              // 0x00D8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                UnLockNotice;                                            // 0x00F0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLMemoriaBookMarkDescription                       BookMarkDescription;                                     // 0x0108(0x0028) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bDummy;                                                  // 0x0130(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6EEA[0x7];                                   // 0x0131(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               RecordHyperLink;                                         // 0x0138(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YB85[0x30];                                  // 0x0148(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLStringSystem
	 * Size -> 0x00B0 (FullSize[0x00B8] - InheritedSize[0x0008])
	 */
	struct FTLStringSystem : public FTableRowBase
	{
	public:
		ESystemMsgType                                             MsgType;                                                 // 0x0008(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IJDO[0x3];                                   // 0x0009(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ETLScreenMsgType                                           ScreenMessageType;                                       // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EChatMessageCategory                                       MsgCategory;                                             // 0x000D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HYTQ[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Title;                                                   // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Msg;                                                     // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SoundEventRef;                                           // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IgnoreSameTextMs;                                        // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DelayMs;                                                 // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseDEScreenMessage;                                    // 0x0060(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseWorldBossMessage;                                   // 0x0061(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WRGC[0x6];                                   // 0x0062(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DynamicEventTitle;                                       // 0x0068(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                DynamicEventMessage;                                     // 0x0080(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DynamicEventImagePath;                                   // 0x0098(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLDynamicEventType                                        DynamicEventType;                                        // 0x00B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HQZ9[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMessageBoxStyle
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMessageBoxStyle : public FTableRowBase
	{
	public:
		class FName                                                BtnOKYesTextKey;                                         // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BtnNoTextKey;                                            // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BtnCancelTextKey;                                        // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMsgBoxTextMultiLineTextData
	 * Size -> 0x0018
	 */
	struct FTLMsgBoxTextMultiLineTextData
	{
	public:
		class FName                                                LeftTextKey;                                             // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CenterTextKey;                                           // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RightTextKey;                                            // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMsgBoxTextDefaultData
	 * Size -> 0x0080
	 */
	struct FTLMsgBoxTextDefaultData
	{
	public:
		class FName                                                UIMainTextKey;                                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UISubTextKey;                                            // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLMsgBoxTextMultiLineTextData>              UIMultiLineTextKeys;                                     // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    UIItemTableIndex;                                        // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P85X[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     UIItemIconPath;                                          // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UIItemNameTextKey;                                       // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UILowerTitleTextKey;                                     // 0x0048(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UILowerTextKey;                                          // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UICountTitleTextKey;                                     // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UICountIconPath;                                         // 0x0060(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UICountTextKey;                                          // 0x0078(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMsgBoxTextInputDefaultData
	 * Size -> 0x0028
	 */
	struct FTLMsgBoxTextInputDefaultData
	{
	public:
		class FName                                                UIMainTextKey;                                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UISubTextKey;                                            // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UITextInputTitleKey;                                     // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UITextInputKey;                                          // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UINoticeTextKey;                                         // 0x0020(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMsgBoxNumericInputDefaultData
	 * Size -> 0x0080
	 */
	struct FTLMsgBoxNumericInputDefaultData
	{
	public:
		class FName                                                UIMainTextKey;                                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UISubTextKey;                                            // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UIItemTableIndex;                                        // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E445[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     UIItemIconPath;                                          // 0x0018(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UIItemNameTextKey;                                       // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UINumericInputTitleKey;                                  // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UINumericInputMinValue;                                  // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UINumericInputMaxValue;                                  // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UINumericInputStartValue;                                // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UINumericInputUnitValue;                                 // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UICountTitleTextKey;                                     // 0x0050(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     UICountIconPath;                                         // 0x0058(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UICountTextKey;                                          // 0x0070(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UINoticeTextKey;                                         // 0x0078(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMsgBoxProgressBarDefaultData
	 * Size -> 0x002C
	 */
	struct FTLMsgBoxProgressBarDefaultData
	{
	public:
		class FName                                                UIMainTextKey;                                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UISubTextKey;                                            // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLMessageBoxProgressBarPlayType                           UIProgressBarPlayType;                                   // 0x0010(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_852U[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      UIProgressBarCurValue;                                   // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UIProgressBarFullValue;                                  // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UIProgressBarTextKey;                                    // 0x001C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UINoticeTextKey;                                         // 0x0024(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLMsgBoxDefaultData
	 * Size -> 0x0158
	 */
	struct FTLMsgBoxDefaultData
	{
	public:
		struct FTLMsgBoxTextDefaultData                            TextMsgBoxData;                                          // 0x0000(0x0080) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMsgBoxTextInputDefaultData                       TextInputMsgBoxData;                                     // 0x0080(0x0028) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FTLMsgBoxNumericInputDefaultData                    NumericInputMsgBoxData;                                  // 0x00A8(0x0080) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FTLMsgBoxProgressBarDefaultData                     ProgressBarMsgBoxData;                                   // 0x0128(0x002C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6TO1[0x4];                                   // 0x0154(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoNpcSequenceAction
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLInfoNpcSequenceAction : public FTableRowBase
	{
	public:
		class FName                                                GroupID;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TableId;                                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SctDuration;                                             // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6YFT[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     LevelSequencePath;                                       // 0x0030(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLScenarioLoadingType                                     ScenarioLoadingType;                                     // 0x0048(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSyncPlaybackPosition;                                   // 0x0049(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RJUW[0x6];                                   // 0x004A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoNpcLoopMotion
	 * Size -> 0x0088 (FullSize[0x0090] - InheritedSize[0x0008])
	 */
	struct FTLInfoNpcLoopMotion : public FTableRowBase
	{
	public:
		class FName                                                GroupID;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TableId;                                                 // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LoopSct;                                                 // 0x0028(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     StartSct;                                                // 0x0040(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EndSct;                                                  // 0x0058(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndSctDuration;                                          // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndSctFastDuration;                                      // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowNameplate;                                           // 0x0078(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       TurnToSpeaker;                                           // 0x0079(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P2P2[0x2];                                   // 0x007A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                TurnMotion;                                              // 0x007C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LookAtSpeaker;                                           // 0x0084(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XT3H[0xB];                                   // 0x0085(0x000B) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoNpcEntryMotion
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLInfoNpcEntryMotion : public FTableRowBase
	{
	public:
		class FName                                                GroupID;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TableId;                                                 // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Sct;                                                     // 0x0028(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SctDuration;                                             // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowNameplate;                                           // 0x0044(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FW44[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoNpcMotion
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLInfoNpcMotion : public FTableRowBase
	{
	public:
		class FName                                                GroupID;                                                 // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TableId;                                                 // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Sct;                                                     // 0x0028(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SctDuration;                                             // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0F5Y[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMount
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMount : public FTableRowBase
	{
	public:
		int32_t                                                    SeatCount;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CheckEnableMount;                                        // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESnMountType                                               MountType;                                               // 0x000D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLMountCondition                                          MountCondition;                                          // 0x000E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZVCF[0x1];                                   // 0x000F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MountDistance;                                           // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       FreeFaceDirection;                                       // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IXRQ[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     RidingSct;                                               // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeMovie
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FTLSchemeMovie : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      MoviePaths;                                              // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		ETLMoviePlayerType                                         PlayerType;                                              // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLMoviePlaybackType                                       PlaybackType;                                            // 0x0029(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPendingToStopUntilClipFinish;                           // 0x002A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSkippable;                                              // 0x002B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLEventSkipCondition                                      SkipCondition;                                           // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoSeek;                                               // 0x002D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EStretch                                                   StretchType;                                             // 0x002E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EStretchDirection                                          StretchDirectionType;                                    // 0x002F(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideUIWhileMoviePlaying;                                // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowBlackScreenWhenMovieEnd;                            // 0x0031(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MH9I[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     SoundPath;                                               // 0x0038(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       SoundAssetSyncLoad;                                      // 0x0050(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       StopSoundAtMovieEnd;                                     // 0x0051(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0JY0[0x2];                                   // 0x0052(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SoundFadeOutDurationMs;                                  // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SoundSnapshot;                                           // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeNameDescription
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FTLSchemeNameDescription : public FTableRowBase
	{	};

	/**
	 * ScriptStruct TLScheme.TLInfoNpc
	 * Size -> 0x02F8 (FullSize[0x0300] - InheritedSize[0x0008])
	 */
	struct FTLInfoNpc : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_K2VF[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UID;                                                     // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NMM3[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIName;                                                  // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Subtitle;                                                // 0x0030(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		ETLCreatureRank                                            CreatureRank;                                            // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6GG2[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   Level;                                                   // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowDropItemInfo;                                        // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RG2V[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UHiveEntityData*                                     HiveEntity;                                              // 0x0058(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLBodyType                                                BodyType;                                                // 0x0060(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QMRR[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                CreatureStatPassiveId;                                   // 0x0064(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ScaleReductionId;                                        // 0x006C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceUseSiegeWeaponCollision;                           // 0x0074(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IgnoreCapsuleCollision;                                  // 0x0075(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1H19[0x2];                                   // 0x0076(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FightingRadius;                                          // 0x0078(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionRadiusRatio;                                    // 0x007C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverlapableDistanceRatio;                                // 0x0080(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Height;                                                  // 0x0084(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HostileLookAtDistance;                                   // 0x0088(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NonHostileLookAtDistance;                                // 0x008C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsePickingValue;                                        // 0x0090(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QKYN[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PickingHeight;                                           // 0x0094(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickingRadius;                                           // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PickingZOffset;                                          // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               tribe;                                                   // 0x00A0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                PassiveID;                                               // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AttackSpeedBaseline;                                     // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   MaxInteractionUserCount;                                 // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       InteractionIds;                                          // 0x00C0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      InteractionDistance;                                     // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InteractionHeightTop;                                    // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InteractionHeightBottom;                                 // 0x00D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YSX5[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLInteractionCameraPreset                          InteractionCameraPreset;                                 // 0x00E0(0x0028) Edit, NativeAccessSpecifierPublic
		float                                                      MinInteractionDist;                                      // 0x0108(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       TurnToSpeakerWhenInteraction;                            // 0x010C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_99SU[0x3];                                   // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     DeathSct;                                                // 0x0110(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DeadSct;                                                 // 0x0128(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MotionGroupId;                                           // 0x0140(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NpcSpeakGroupId;                                         // 0x0148(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLNameplateState                                          NameplateState;                                          // 0x0150(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowHpBarInNameplate;                                   // 0x0151(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowHpBarInTargetInfo;                                  // 0x0152(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SPPV[0x5];                                   // 0x0153(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               MapIconId;                                               // 0x0158(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bShowFacility;                                           // 0x0168(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1592[0x3];                                   // 0x0169(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   FacilityPriority;                                        // 0x016C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     NamplateIcon;                                            // 0x0170(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Portrait;                                                // 0x0188(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               Species;                                                 // 0x01A0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bPassPolymorph;                                          // 0x01B0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CurationTarget;                                          // 0x01B1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UUL9[0x6];                                   // 0x01B2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     ClientOnlyBehaviorTree;                                  // 0x01B8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               Race;                                                    // 0x01D0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       IsKillSpeciesTarget;                                     // 0x01E0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EViewMakrType                                              ViewMarkType;                                            // 0x01E1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M5E1[0x6];                                   // 0x01E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               BelongToCastle;                                          // 0x01E8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       Tags;                                                    // 0x01F8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FVector2D                                           OverwriteHeadUIOffset;                                   // 0x0208(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               VoiceActor;                                              // 0x0210(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLJsonSchemeItemDrop                               ItemDropTableRow;                                        // 0x0220(0x00C0) Edit, EditConst, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CNYX[0x20];                                  // 0x02E0(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLNpcRowNames
	 * Size -> 0x0010
	 */
	struct FTLNpcRowNames
	{
	public:
		TArray<class FName>                                        RowNames;                                                // 0x0000(0x0010) ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoNpcSectorData
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FTLInfoNpcSectorData : public FTableRowBase
	{
	public:
		int32_t                                                    StartAngle;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F5OL[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    EndAngle;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QA32[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TargetableMinHeightCm;                                   // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TargetableMaxHeightCm;                                   // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SectorStateSct;                                          // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SectorPrimeIcon;                                         // 0x0038(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                SectorName;                                              // 0x0050(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoNpcSector
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLInfoNpcSector : public FTableRowBase
	{
	public:
		TMap<ETLNpcSector, struct FTLInfoNpcSectorData>            NpcSectors;                                              // 0x0008(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoNpcRace
	 * Size -> 0x00E8 (FullSize[0x00F0] - InheritedSize[0x0008])
	 */
	struct FTLInfoNpcRace : public FTableRowBase
	{
	public:
		class FString                                              Description;                                             // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        PassiveID;                                               // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                NpcName;                                                 // 0x0028(0x0018) Edit, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     NpcPortrait;                                             // 0x0040(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UISortOrder;                                             // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_53VF[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               UnlockMemorialRecordRow;                                 // 0x0060(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                TraitName;                                               // 0x0070(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                TraitDescription;                                        // 0x0088(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                AppearCondition;                                         // 0x00A0(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                AppearConditionDescription;                              // 0x00B8(0x0018) Edit, NativeAccessSpecifierPublic
		float                                                      ZoomLevel;                                               // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           FocusPos;                                                // 0x00D4(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NC6G[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLDataTableRowHandle>                       MapIconNpcKeys;                                          // 0x00E0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeNpcRoaming
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeNpcRoaming : public FTableRowBase
	{
	public:
		ENpcRoamingType                                            RoamingType;                                             // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5P13[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BigNoiseRatio;                                           // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SmallNoiseRatio;                                         // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G75B[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Comment;                                                 // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeNpcSpeak
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLSchemeNpcSpeak : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_WRPM[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                GroupID;                                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               TableId;                                                 // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       DialogueList;                                            // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeOccupation
	 * Size -> 0x0130 (FullSize[0x0138] - InheritedSize[0x0008])
	 */
	struct FTLSchemeOccupation : public FTableRowBase
	{
	public:
		class FText                                                Title;                                                   // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TitleBG;                                                 // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SlotImage;                                               // 0x0038(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FText>                                        StatUpEffectList;                                        // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsShowLocationEffect;                                    // 0x0060(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_99RQ[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FText>                                        LocationEffectList;                                      // 0x0068(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLMapProductInfo>                           ProductInfo;                                             // 0x0078(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ShapeLineColorKey;                                       // 0x0088(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               MapIconId;                                               // 0x0098(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               BossStoneUsurpingIconId;                                 // 0x00A8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               LeaveMapIconId;                                          // 0x00B8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ProtecteGuildSkillId;                                    // 0x00C8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               LinkedDynamicEvent;                                      // 0x00D8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               LinkedResourceProduct;                                   // 0x00E8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               HelpTableRow;                                            // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UnlockMemorialRecordRow;                                 // 0x0108(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MusicPath;                                               // 0x0118(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AudioTag;                                                // 0x0130(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeOptionSection
	 * Size -> 0x0048
	 */
	struct FTLSchemeOptionSection
	{
	public:
		class FText                                                DisplayText;                                             // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ToolTipText;                                             // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       Items;                                                   // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformPC;                                       // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformPCwithGamePad;                            // 0x0041(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformPS;                                       // 0x0042(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformXBox;                                     // 0x0043(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformMobile;                                   // 0x0044(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3J0Q[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeOptionGroup
	 * Size -> 0x0048
	 */
	struct FTLSchemeOptionGroup
	{
	public:
		class FText                                                DisplayText;                                             // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ToolTipText;                                             // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeOptionSection>                      Sections;                                                // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformPC;                                       // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformPCwithGamePad;                            // 0x0041(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformPS;                                       // 0x0042(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformXBox;                                     // 0x0043(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformMobile;                                   // 0x0044(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RD32[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeOptionCategory
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLSchemeOptionCategory : public FTableRowBase
	{
	public:
		class FText                                                DisplayText;                                             // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ToolTipText;                                             // 0x0020(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeOptionGroup>                        Groups;                                                  // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoOptionGroup
	 * Size -> 0x0040
	 */
	struct FTLInfoOptionGroup
	{
	public:
		class FText                                                TextTitle;                                               // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                TextTooltip;                                             // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       Items;                                                   // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeOption
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemeOption : public FTableRowBase
	{
	public:
		TArray<struct FTLInfoOptionGroup>                          Groups;                                                  // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLOptionItemDisableCondition
	 * Size -> 0x0028
	 */
	struct FTLOptionItemDisableCondition
	{
	public:
		struct FTLDataTableRowHandle                               DisableConditionGameValueItem;                           // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              DisableConditionGameValueItemValue;                      // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInversDisableCondition;                                 // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6COE[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeOptionItem
	 * Size -> 0x00C8 (FullSize[0x00D0] - InheritedSize[0x0008])
	 */
	struct FTLSchemeOptionItem : public FTableRowBase
	{
	public:
		class FText                                                TextTitle;                                               // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                TextTooltip;                                             // 0x0020(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                unit;                                                    // 0x0038(0x0018) Edit, NativeAccessSpecifierPublic
		int32_t                                                    NumberOfDecimalPlaces;                                   // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Version;                                                 // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              InitValue;                                               // 0x0058(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MinimumValue;                                            // 0x0068(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MaximumValue;                                            // 0x0078(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsVisible;                                               // 0x0088(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsVisibleActionGuide;                                    // 0x0089(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InsertBeforeSeperator;                                   // 0x008A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W9AG[0x5];                                   // 0x008B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     ImagePath;                                               // 0x0090(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSocialAction;                                           // 0x00A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1U9D[0x3];                                   // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ItemWidgetName;                                          // 0x00AC(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8CDA[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLOptionItemDisableCondition>               DisableConditions;                                       // 0x00B8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformPC;                                       // 0x00C8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformPCwithGamePad;                            // 0x00C9(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformPS;                                       // 0x00CA(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformXBox;                                     // 0x00CB(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUseUIPlatformMobile;                                   // 0x00CC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsResettable;                                            // 0x00CD(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsEssentialKey;                                          // 0x00CE(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4RKT[0x1];                                   // 0x00CF(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePathGraph
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLSchemePathGraph : public FTableRowBase
	{
	public:
		uint64_t                                                   Guid;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             position;                                                // 0x0010(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<uint64_t>                                           NeighborsGuid;                                           // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              Desc;                                                    // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLAmmoInfo
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTLAmmoInfo : public FTableRowBase
	{
	public:
		int32_t                                                    Num;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Count;                                                   // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLPcIntroInfo
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FTLPcIntroInfo : public FTableRowBase
	{	};

	/**
	 * ScriptStruct TLScheme.TLVideoInfo
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLVideoInfo : public FTableRowBase
	{
	public:
		class FText                                                Title;                                                   // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SetIcon;                                                 // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     VideoPath;                                               // 0x0038(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoPc
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLInfoPc : public FTableRowBase
	{
	public:
		class FString                                              equip_category_2;                                        // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              equip_category_3;                                        // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SVBT[0x20];                                  // 0x0028(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoPcLooks
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FTLInfoPcLooks : public FTableRowBase
	{	};

	/**
	 * ScriptStruct TLScheme.TLPcContextMenu
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLPcContextMenu : public FTableRowBase
	{
	public:
		struct FTLDataTableRowHandle                               MenuItem;                                                // 0x0008(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       SubMenus;                                                // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		uint32_t                                                   ActivateCondition;                                       // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   ShowCondition;                                           // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLPcDynamicStat
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLPcDynamicStat : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HDLU[0x8];                                   // 0x000C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETLDynamicStatFormulaType                                  FormulaType;                                             // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AN9G[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePCInitialStat
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemePCInitialStat : public FTableRowBase
	{
	public:
		int32_t                                                    str;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dex;                                                     // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Int;                                                     // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    per;                                                     // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    preset_str;                                              // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    preset_dex;                                              // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    preset_int;                                              // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    preset_per;                                              // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePCLevelStat
	 * Size -> 0x00A0 (FullSize[0x00A8] - InheritedSize[0x0008])
	 */
	struct FTLSchemePCLevelStat : public FTableRowBase
	{
	public:
		int32_t                                                    Level;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_max;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_max;                                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    belonging_weight_cap;                                    // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_rating;                                           // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_chance_penetration;                         // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_attack;                                   // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_attack;                                   // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_attack;                                   // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_defense;                                  // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_defense;                                  // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_defense;                                  // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_accuracy;                                          // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_accuracy;                                          // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_accuracy;                                          // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_evasion;                                           // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_evasion;                                           // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_evasion;                                           // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_accuracy;                                         // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_accuracy;                                           // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_accuracy;                                  // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_accuracy;                                          // 0x005C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_accuracy;                                        // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_accuracy;                                           // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_accuracy;                                          // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_tolerance;                                        // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_tolerance;                                          // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_tolerance;                                 // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_tolerance;                                         // 0x0078(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_tolerance;                                       // 0x007C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_tolerance;                                          // 0x0080(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_tolerance;                                         // 0x0084(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_resistance;                                      // 0x0088(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_amplification;                                   // 0x008C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_attack;                                     // 0x0090(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_attack;                                     // 0x0094(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_attack;                                     // 0x0098(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_defense;                                    // 0x009C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_defense;                                    // 0x00A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_defense;                                    // 0x00A4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLBattleCollectionRewardStat
	 * Size -> 0x0078
	 */
	struct FTLBattleCollectionRewardStat
	{
	public:
		EPcStatsType                                               RewardStat;                                              // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2CE3[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                DynamicStatID;                                           // 0x0004(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Value;                                                   // 0x000C(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValueMultiplyFactor;                                     // 0x0010(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6ZTV[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                ValueFormat;                                             // 0x0018(0x0018) Edit, EditConst, NativeAccessSpecifierPublic
		class FText                                                RewardStatNameText;                                      // 0x0030(0x0018) Edit, EditConst, NativeAccessSpecifierPublic
		class FText                                                RewardStatValueText;                                     // 0x0048(0x0018) Edit, EditConst, NativeAccessSpecifierPublic
		class FText                                                RewardStatText;                                          // 0x0060(0x0018) Edit, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLBattleCollectionRewardStatData
	 * Size -> 0x0028
	 */
	struct FTLBattleCollectionRewardStatData
	{
	public:
		TArray<struct FTLBattleCollectionRewardStat>               Stats;                                                   // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
		class FText                                                RewardStatsText;                                         // 0x0010(0x0018) Edit, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoPcSubtitle
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLInfoPcSubtitle : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PLST[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIName;                                                  // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		class FString                                              UIDescription;                                           // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeUI
	 * Size -> 0x00B0 (FullSize[0x00C0] - InheritedSize[0x0010])
	 */
	struct FTLSchemeUI : public FTLTableRowBase
	{
	public:
		unsigned char                                              UIWidgetBPClass[0x28];                                   // 0x0010(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		class FString                                              Description;                                             // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLUIWidgetType                                            WidgetType;                                              // 0x0048(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLWidgetLayout                                            WidgetLayout;                                            // 0x0049(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLUIGameMode                                              UIGameMode;                                              // 0x004A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLUIStage                                                 UIStage;                                                 // 0x004B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                UIGroupNameKey;                                          // 0x004C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLWidgetCreationSetType                                   CreationSetType;                                         // 0x0054(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4PZY[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CreationSetIndex;                                        // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefaultShow;                                            // 0x005C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5SEY[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETLWidgetViewportLayer                                     ViewportLayer;                                           // 0x0060(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FIG9[0x3];                                   // 0x0061(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ETLWidgetLayer                                             WidgetLayer;                                             // 0x0064(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QD1H[0x3];                                   // 0x0065(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		int32_t                                                    ZOrder;                                                  // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FloorZOrder;                                             // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OverlayZOrder;                                           // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParentWidgetKey;                                         // 0x0074(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParentWidgetNodeName;                                    // 0x007C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachActivatedRootWidget;                              // 0x0084(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2FIN[0x3];                                   // 0x0085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    HideLayers;                                              // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CE6V[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        IgnoreHiddenFlagWidgetNames;                             // 0x0090(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       IsIgnoreHiddenFlag;                                      // 0x00A0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLFrameShowType                                           FrameShowType;                                           // 0x00A1(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreAnimationOnUnsetHiddenState;                      // 0x00A2(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLUILoadingType                                           LoadingType;                                             // 0x00A3(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLUICacheType                                             CacheType;                                               // 0x00A4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLUICacheLifeType                                         CacheLifeType;                                           // 0x00A5(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReuseWidget;                                            // 0x00A6(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAllowDuplication;                                       // 0x00A7(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLUIPreLoadType                                           PreloadType;                                             // 0x00A8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPreloadDefaultShow;                                     // 0x00A9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFocusWidget;                                            // 0x00AA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoFocus;                                              // 0x00AB(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMoveToTopWhenFocused;                                   // 0x00AC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKeepLastPosition;                                       // 0x00AD(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreServiceModeExit;                                  // 0x00AE(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNoClosedByServiceMode;                                  // 0x00AF(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPCPlatformOnly;                                         // 0x00B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JS6L[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    WidgetPlatform;                                          // 0x00B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreReload;                                           // 0x00B8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableAnalogCursor;                                     // 0x00B9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLScreenMsgType                                           ScreenMsgType;                                           // 0x00BA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F0KX[0x5];                                   // 0x00BB(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePlatformUI
	 * Size -> 0x0010 (FullSize[0x00D0] - InheritedSize[0x00C0])
	 */
	struct FTLSchemePlatformUI : public FTLSchemeUI
	{
	public:
		struct FTLDataTableRowHandle                               BaseRow;                                                 // 0x00C0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePolymorphAdjustStatData
	 * Size -> 0x0008
	 */
	struct FTLSchemePolymorphAdjustStatData
	{
	public:
		EAdjustStatType                                            AdjustStatType;                                          // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1YWS[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Value;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeGlidingSpeedModifier
	 * Size -> 0x000C
	 */
	struct FTLSchemeGlidingSpeedModifier
	{
	public:
		float                                                      Fast;                                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Normal;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Slow;                                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLPolymorphCollectionRewardStat
	 * Size -> 0x0038
	 */
	struct FTLPolymorphCollectionRewardStat
	{
	public:
		class FName                                                RewardStatId;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Seed;                                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XHYC[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               RewardStatTableRow;                                      // 0x0010(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bRewardStatAlways;                                       // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OU6M[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               StatLooksTableRow;                                       // 0x0028(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLPolymorphCollectionDynamicStat
	 * Size -> 0x0028
	 */
	struct FTLPolymorphCollectionDynamicStat
	{
	public:
		class FName                                                DynamicStatID;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MultiplierFormulaID;                                     // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AdderFormulaID;                                          // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               DynamicStatLooksTableRow;                                // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWildPolymorphCollectionLevel
	 * Size -> 0x0060 (FullSize[0x0070] - InheritedSize[0x0010])
	 */
	struct FTLSchemeWildPolymorphCollectionLevel : public FTLTableRowBase
	{
	public:
		int32_t                                                    Level;                                                   // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P2P1[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    RequiredEXP;                                             // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLPolymorphEntryType                                      EntryType;                                               // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CA63[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               StatLooksTableRow;                                       // 0x0028(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLPolymorphCollectionRewardStat>            RewardStats;                                             // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLPolymorphCollectionDynamicStat                   DynamicStat;                                             // 0x0048(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLPolymorphCollectionUnit
	 * Size -> 0x0018
	 */
	struct FTLPolymorphCollectionUnit
	{
	public:
		struct FTLDataTableRowHandle                               PolymorphTableRow;                                       // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    PolymorphLevel;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAnyPolymorphWithConditionSatisfied;                     // 0x0014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SIK9[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePolymorphCollection
	 * Size -> 0x0090 (FullSize[0x00A0] - InheritedSize[0x0010])
	 */
	struct FTLSchemePolymorphCollection : public FTLTableRowBase
	{
	public:
		class FText                                                UINameText;                                              // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLPolymorphCollectionUnit>                  CollectionUnits;                                         // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int64_t                                                    CollectionLevelEXP_Run;                                  // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    CollectionLevelEXP_Glide;                                // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    CollectionLevelEXP_Swim;                                 // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLPolymorphCollectionRewardStat>            RewardStats;                                             // 0x0050(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLPolymorphCollectionDynamicStat                   DynamicStat;                                             // 0x0060(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                RewardStatDescriptionText;                               // 0x0088(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLPolymorphCombatCollectionUnit
	 * Size -> 0x0090
	 */
	struct FTLPolymorphCombatCollectionUnit
	{
	public:
		struct FTLDataTableRowHandle                               PolymorphTableRow;                                       // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    PolymorphLevel;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CV7Y[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLPolymorphCollectionRewardStat                    RewardStat;                                              // 0x0018(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLPolymorphCollectionDynamicStat                   DynamicStat;                                             // 0x0050(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                RewardStatDescriptionText;                               // 0x0078(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePolymorphCombatCollection
	 * Size -> 0x0040 (FullSize[0x0050] - InheritedSize[0x0010])
	 */
	struct FTLSchemePolymorphCombatCollection : public FTLTableRowBase
	{
	public:
		class FText                                                UINameText;                                              // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLPolymorphCombatCollectionUnit>            CollectionUnits;                                         // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                CollectionDescriptionText;                               // 0x0038(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePolymorphCombatCollectionExt
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FTLSchemePolymorphCombatCollectionExt : public FTLTableRowBase
	{	};

	/**
	 * ScriptStruct TLScheme.TLPolymorphGroupEntry
	 * Size -> 0x0018
	 */
	struct FTLPolymorphGroupEntry
	{
	public:
		struct FTLDataTableRowHandle                               PolymorphId;                                             // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    probability;                                             // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NQIF[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePolymorphGroup
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLSchemePolymorphGroup : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZK5O[0xC];                                   // 0x000C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Description;                                             // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseProb;                                                 // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZEMA[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLPolymorphGroupEntry>                      Entries;                                                 // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePolymorphStat
	 * Size -> 0x0278 (FullSize[0x0280] - InheritedSize[0x0008])
	 */
	struct FTLSchemePolymorphStat : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    str;                                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dex;                                                     // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Int;                                                     // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    per;                                                     // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power;                                            // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power;                                      // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    grankus_bonus_attack_power;                              // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    einarden_bonus_attack_power;                             // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dragon_bonus_attack_power;                               // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    demon_bonus_attack_power;                                // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    undead_bonus_attack_power;                               // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    creation_bonus_attack_power;                             // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    spirit_bonus_attack_power;                               // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    animal_bonus_attack_power;                               // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    insect_bonus_attack_power;                               // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    plant_bonus_attack_power;                                // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_max;                                                  // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_max_modifier;                                         // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_regen;                                                // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_max;                                                // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_regen;                                              // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_spend;                                              // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_consumption_modifier;                               // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    buff_cost_consumption_modifier;                          // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_max;                                             // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_regen;                                           // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    heal_modifier;                                           // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_heal_taken_modifier;                               // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    potion_heal_modifier;                                    // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_armor;                                             // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_armor;                                             // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_armor;                                             // 0x008C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_rating;                                           // 0x0090(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_chance;                                     // 0x0094(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_chance_penetration;                         // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_efficiency;                                 // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_modifier;                                   // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_modifier_off_hand;                          // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_range_modifier;                                   // 0x00A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    move_speed;                                              // 0x00AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    move_speed_modifier;                                     // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    belonging_weight_cap;                                    // 0x00B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_exp_acquired;                                     // 0x00B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_gold_acquired;                                    // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_gold_drop;                                        // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_item_drop;                                        // 0x00C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_resource_drop;                                    // 0x00C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earn_weapon_mastery_exp_modifier;                        // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earn_dungeon_point_modifier;                             // 0x00D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    spend_dungeon_point_modifier;                            // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_attack;                                   // 0x00D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_attack;                                   // 0x00DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_attack;                                   // 0x00E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_defense;                                  // 0x00E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_defense;                                  // 0x00E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_defense;                                  // 0x00EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_attack;                                     // 0x00F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_attack;                                     // 0x00F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_attack;                                     // 0x00F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_defense;                                    // 0x00FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_defense;                                    // 0x0100(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_defense;                                    // 0x0104(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_accuracy;                                          // 0x0108(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_accuracy;                                          // 0x010C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_accuracy;                                          // 0x0110(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_evasion;                                           // 0x0114(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_evasion;                                           // 0x0118(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_evasion;                                           // 0x011C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_critical_attack;                               // 0x0120(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_critical_attack;                               // 0x0124(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_critical_attack;                               // 0x0128(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_critical_defense;                              // 0x012C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_critical_defense;                              // 0x0130(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_critical_defense;                              // 0x0134(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_double_attack;                                 // 0x0138(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_double_attack;                                 // 0x013C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_double_attack;                                 // 0x0140(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_double_defense;                                // 0x0144(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_double_defense;                                // 0x0148(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_double_defense;                                // 0x014C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_accuracy;                                      // 0x0150(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_accuracy;                                      // 0x0154(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_accuracy;                                      // 0x0158(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_evasion;                                       // 0x015C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_evasion;                                       // 0x0160(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_evasion;                                       // 0x0164(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_power_amplification;                               // 0x0168(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_power_resistance;                                  // 0x016C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_cooldown_modifier;                                 // 0x0170(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    global_skill_cooldown_modifier;                          // 0x0174(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    buff_given_duration_modifier;                            // 0x0178(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    debuff_taken_duration_modifier;                          // 0x017C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    aura_effect_boost;                                       // 0x0180(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    aura_radius_modifier;                                    // 0x0184(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_reduction;                                        // 0x0188(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_reduction_penetration;                            // 0x018C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    grankus_damage_reduction;                                // 0x0190(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    einarden_damage_reduction;                               // 0x0194(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dragon_damage_reduction;                                 // 0x0198(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    demon_damage_reduction;                                  // 0x019C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    undead_damage_reduction;                                 // 0x01A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    creation_damage_reduction;                               // 0x01A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    spirit_damage_reduction;                                 // 0x01A8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    animal_damage_reduction;                                 // 0x01AC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    insect_damage_reduction;                                 // 0x01B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    plant_damage_reduction;                                  // 0x01B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    fire_amplification;                                      // 0x01B8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    water_amplification;                                     // 0x01BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    wind_amplification;                                      // 0x01C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earth_amplification;                                     // 0x01C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    fire_resistance;                                         // 0x01C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    water_resistance;                                        // 0x01CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    wind_resistance;                                         // 0x01D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earth_resistance;                                        // 0x01D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_amplification;                                   // 0x01D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_resistance;                                      // 0x01DC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_accuracy;                                         // 0x01E0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_accuracy;                                           // 0x01E4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_accuracy;                                  // 0x01E8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_accuracy;                                          // 0x01EC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_accuracy;                                        // 0x01F0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_accuracy;                                           // 0x01F4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_accuracy;                                          // 0x01F8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_tolerance;                                        // 0x01FC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_tolerance;                                          // 0x0200(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_tolerance;                                 // 0x0204(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_tolerance;                                         // 0x0208(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_tolerance;                                       // 0x020C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_tolerance;                                          // 0x0210(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_tolerance;                                         // 0x0214(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_critical_attack;                                  // 0x0218(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_critical_attack;                                    // 0x021C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_critical_attack;                           // 0x0220(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_critical_attack;                                   // 0x0224(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_critical_attack;                                 // 0x0228(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_critical_attack;                                    // 0x022C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_critical_attack;                                   // 0x0230(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_critical_defense;                                 // 0x0234(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_critical_defense;                                   // 0x0238(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_critical_defense;                          // 0x023C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_critical_defense;                                  // 0x0240(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_critical_defense;                                // 0x0244(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_critical_defense;                                   // 0x0248(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_critical_defense;                                  // 0x024C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_immune;                                             // 0x0250(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_immune;                                    // 0x0254(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_immune;                                            // 0x0258(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_immune;                                          // 0x025C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_immune;                                             // 0x0260(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_immune;                                            // 0x0264(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_immune;                                          // 0x0268(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hitted_stop_prevent_chance;                              // 0x026C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gathering_speed;                                         // 0x0270(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gathering_speed_modifier;                                // 0x0274(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gathering_double_chance;                                 // 0x0278(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gathering_critical_chance;                               // 0x027C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePolymorphWildCollectionExt
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FTLSchemePolymorphWildCollectionExt : public FTLTableRowBase
	{	};

	/**
	 * ScriptStruct TLScheme.TLInfoPost
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLInfoPost : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPostType                                                  Type;                                                    // 0x000C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6PG2[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Sender;                                                  // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Title;                                                   // 0x0028(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                Body;                                                    // 0x0040(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoPostLooks
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLInfoPostLooks : public FTableRowBase
	{
	public:
		EPostType                                                  Type;                                                    // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZQ92[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     IconPath;                                                // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLCountryData
	 * Size -> 0x00F8
	 */
	struct FTLCountryData
	{
	public:
		class FText                                                TermsText;                                               // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     RatingMark;                                              // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TextRatingWarning;                                       // 0x0030(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       IsEnableTextRatingWarningCopyright;                      // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GTWR[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TextRatingWarningCopyright;                              // 0x0050(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     RatingMarkSplash;                                        // 0x0068(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TextRatingWarningSplash;                                 // 0x0080(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       IsEnableTermsTextBiometricSimple;                        // 0x0098(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8UL1[0x7];                                   // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TermsTextBiometricSimple;                                // 0x00A0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       IsEnableTermsTextBiometricDetail;                        // 0x00B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AG9B[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TermsTextBiometricDetail;                                // 0x00C0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       IsEnableTermsTextIndividual;                             // 0x00D8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S8JN[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TermsTextIndividual;                                     // 0x00E0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePublisher
	 * Size -> 0x0058 (FullSize[0x0068] - InheritedSize[0x0010])
	 */
	struct FTLSchemePublisher : public FTLTableRowBase
	{
	public:
		class FName                                                DefaultCountryName;                                      // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FName, struct FTLCountryData>                   CountryList;                                             // 0x0018(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePurchaseGoodsLooks
	 * Size -> 0x00B8 (FullSize[0x00C0] - InheritedSize[0x0008])
	 */
	struct FTLSchemePurchaseGoodsLooks : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_V1IF[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIName;                                                  // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		int32_t                                                    SortOrder;                                               // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5ITZ[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIDescription;                                           // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                UISubDescription;                                        // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		ETLPurchaseSecondaryCategory                               Category;                                                // 0x0060(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLBMShopGoodsCategory                                     GoodsCategory;                                           // 0x0061(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U47L[0x6];                                   // 0x0062(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     IconImage;                                               // 0x0068(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PromotionImage;                                          // 0x0080(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisplayReleaseDate;                                     // 0x0098(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsShowEffectiveTime;                                     // 0x0099(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R7RN[0x6];                                   // 0x009A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TicketDescription1;                                      // 0x00A0(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       IsNew;                                                   // 0x00B8(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsEvent;                                                 // 0x00B9(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBest;                                                  // 0x00BA(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OLZ8[0x5];                                   // 0x00BB(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemePurchaseGoods
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemePurchaseGoods : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_6IDT[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Num;                                                     // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FIZY[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeBMShopCategory
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLSchemeBMShopCategory : public FTableRowBase
	{
	public:
		class FText                                                CategoryName;                                            // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<ETLBMShopGoodsCategory>                             IncludeGoodsCategorys;                                   // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		ETLBMShopPanelType                                         PanelType;                                               // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_53XC[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EMoneyType>                                         MoneyVisibile;                                           // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLPurchaseCategoryInfo
	 * Size -> 0x02E0
	 */
	struct FTLPurchaseCategoryInfo
	{
	public:
		ETLPurchaseSecondaryCategory                               SecondaryCategory;                                       // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3GDO[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIName;                                                  // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<EMoneyType>                                         MoneyVisibile;                                           // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bCustomPanel;                                            // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZNSM[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSoftObjectPath>                             SubPanelImages;                                          // 0x0038(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSlateBrush                                         IconImageBrush;                                          // 0x0048(0x0088) Edit, NativeAccessSpecifierPublic
		struct FSlateBrush                                         HoverIconImageBrush;                                     // 0x00D0(0x0088) Edit, NativeAccessSpecifierPublic
		struct FSlateBrush                                         CheckIconImageBrush;                                     // 0x0158(0x0088) Edit, NativeAccessSpecifierPublic
		struct FSlateBrush                                         CheckHoverIconImageBrush;                                // 0x01E0(0x0088) Edit, NativeAccessSpecifierPublic
		unsigned char                                              IconImage[0x28];                                         // 0x0268(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              HoverIconImage[0x28];                                    // 0x0290(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              CheckIconImage[0x28];                                    // 0x02B8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct TLScheme.TLInfoPvpModeSystemMessageInfo
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLInfoPvpModeSystemMessageInfo : public FTableRowBase
	{
	public:
		struct FTLDataTableRowHandle                               DefaultSystemMessageHiveKey;                             // 0x0008(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		ECriminalType                                              PrevConditionCriminalType;                               // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IGOY[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               PrevConditionSystemMessageHiveKey;                       // 0x0020(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       IsShowMessageSelfDefenseBySkill;                         // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IF13[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               SkillSystemMessageHiveKey;                               // 0x0038(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       IsShowMessasgeWithChaoticPoint;                          // 0x0048(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CYRK[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               ChaoticPointSystemMessageHiveKey;                        // 0x0050(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoPvpMode
	 * Size -> 0x00B0 (FullSize[0x00B8] - InheritedSize[0x0008])
	 */
	struct FTLInfoPvpMode : public FTableRowBase
	{
	public:
		EMapRegionType                                             ConditionMapRegionType;                                  // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       TribeConditionColorByRelationAndDisableInputKeyToBeSelfdefense; // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECriminalType                                              ConditionCriminalType;                                   // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2YZL[0x5];                                   // 0x000B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              PvpUserWidgetBPClass[0x28];                              // 0x0010(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		struct FTLDataTableRowHandle                               TextTooltipId;                                           // 0x0038(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               OffTextTooltipId;                                        // 0x0048(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLInfoPvpModeSystemMessageInfo                     SystemMessageInfo;                                       // 0x0058(0x0060) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoDynamicEventSummaryLooks
	 * Size -> 0x0138 (FullSize[0x0140] - InheritedSize[0x0008])
	 */
	struct FTLInfoDynamicEventSummaryLooks : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     EventUIFrameBGPath;                                      // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                EventTitle;                                              // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupA;                                        // 0x0038(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupB;                                        // 0x0050(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupC;                                        // 0x0068(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupD;                                        // 0x0080(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupE;                                        // 0x0098(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                RewardTextGroupSide;                                     // 0x00B0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bShowEventScore;                                         // 0x00C8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CMWP[0x7];                                   // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     EventScoreIconPath;                                      // 0x00D0(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                EventScoreResultText;                                    // 0x00E8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                EffortRewardText;                                        // 0x0100(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MusicPath;                                               // 0x0118(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GGNX[0x10];                                  // 0x0130(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoQuestLooks
	 * Size -> 0x00A8 (FullSize[0x00B0] - InheritedSize[0x0008])
	 */
	struct FTLInfoQuestLooks : public FTableRowBase
	{
	public:
		class FText                                                UITitle;                                                 // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TitleBG;                                                 // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UIMessageSuccess;                                        // 0x0038(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                UIMessageDeath;                                          // 0x0050(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                UIMessageTimeOut;                                        // 0x0068(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               TerritoryTableKey;                                       // 0x0080(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MusicPath;                                               // 0x0090(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ApplyAudioTag;                                           // 0x00A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NASV[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoDynamicEventTargetPartsLooksInfo
	 * Size -> 0x0030
	 */
	struct FTLInfoDynamicEventTargetPartsLooksInfo
	{
	public:
		struct FSoftObjectPath                                     PartsIcon;                                               // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                PartsName;                                               // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoDynamicEventStoreLooksInfo
	 * Size -> 0x0128
	 */
	struct FTLInfoDynamicEventStoreLooksInfo
	{
	public:
		struct FSoftObjectPath                                     TitleIcon;                                               // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                NameTitleText;                                           // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                StatusTopPlayerText;                                     // 0x0030(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                StatusStartText;                                         // 0x0048(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                StatusPauseText;                                         // 0x0060(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                StatusStopText;                                          // 0x0078(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                StatusTitleText01;                                       // 0x0090(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                StatusValueText01;                                       // 0x00A8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		EFTLDynamicEventStoreValueType                             StatusValueType01;                                       // 0x00C0(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4APY[0x3];                                   // 0x00C1(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_DDVD[0x4];                                   // 0x00C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                StatusTitleText02;                                       // 0x00C8(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                StatusValueText02;                                       // 0x00E0(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		EFTLDynamicEventStoreValueType                             StatusValueType02;                                       // 0x00F8(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MCD6[0x3];                                   // 0x00F9(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_BA4Y[0x4];                                   // 0x00FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               ItemTableID;                                             // 0x0100(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                StoreRatioText;                                          // 0x0110(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoDynamicEventSideQuestStepLooks
	 * Size -> 0x0250 (FullSize[0x0258] - InheritedSize[0x0008])
	 */
	struct FTLInfoDynamicEventSideQuestStepLooks : public FTableRowBase
	{
	public:
		ETLDynamicEventUIType                                      EventUIType;                                             // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I7FM[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                EventTitle;                                              // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EventUIFrameBGPath;                                      // 0x0028(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowTimeOut;                                             // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowEventScore;                                          // 0x0041(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JTZD[0x6];                                   // 0x0042(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     MyEventScoreIconPath;                                    // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                MyEventScoreTitleText;                                   // 0x0060(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                MyEventScoreCountText;                                   // 0x0078(0x0018) Edit, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     GoalPointIconPath;                                       // 0x0090(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                GoalPointTitleText;                                      // 0x00A8(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                GoalPointCountText;                                      // 0x00C0(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                EventScoreDescriptText;                                  // 0x00D8(0x0018) Edit, NativeAccessSpecifierPublic
		EDynamicEventPointCountType                                PointCountType;                                          // 0x00F0(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HZWH[0x3];                                   // 0x00F1(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_HN4Y[0x4];                                   // 0x00F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                EventDescription;                                        // 0x00F8(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                EventTargetName;                                         // 0x0110(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLInfoDynamicEventTargetPartsLooksInfo>     EventTargetPartsInfo;                                    // 0x0128(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLInfoDynamicEventStoreLooksInfo>           StoreLooksInfo;                                          // 0x0138(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bShowCountZeroItem;                                      // 0x0148(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J4WS[0x7];                                   // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                EventItemTitleText;                                      // 0x0150(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       ItemList;                                                // 0x0168(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                EffortRewardDescription;                                 // 0x0178(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                EffortRewardGoldDescription;                             // 0x0190(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                EffortRewardExpDescription;                              // 0x01A8(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                EffortRewardGuildExpDescription;                         // 0x01C0(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                EffortRewardItemDescription00;                           // 0x01D8(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                EffortRewardItemDescription01;                           // 0x01F0(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                EffortRewardItemDescription02;                           // 0x0208(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                EffortRewardItemDescription03;                           // 0x0220(0x0018) Edit, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MusicPath;                                               // 0x0238(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ApplyAudioTag;                                           // 0x0250(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U853[0x7];                                   // 0x0251(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeQuestEffectLooks
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLSchemeQuestEffectLooks : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     SceneConti;                                              // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SceneContiConditionKey;                                  // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SceneContiRemoveKey;                                     // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLSensingOutLineType                                      OutLineType;                                             // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6JWM[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                MapIconKey;                                              // 0x0034(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OR6T[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     ContentsMarkerIconPath;                                  // 0x0040(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoMenuItemGroup
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLInfoMenuItemGroup : public FTableRowBase
	{
	public:
		TArray<struct FTLDataTableRowHandle>                       MenuItemHiveKeyList;                                     // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoMenuItemCondition
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTLInfoMenuItemCondition : public FTableRowBase
	{
	public:
		bool                                                       IsOpposite;                                              // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMenuItemConditionType                                     MenuItemConditionType;                                   // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LECM[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoMenuItemAction
	 * Size -> 0x000C
	 */
	struct FTLInfoMenuItemAction
	{
	public:
		class FName                                                ActionName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMouseClickAction;                                       // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MHCQ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoMenuItem
	 * Size -> 0x0108 (FullSize[0x0110] - InheritedSize[0x0008])
	 */
	struct FTLInfoMenuItem : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     icon;                                                    // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     HoverIcon;                                               // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     CheckedIcon;                                             // 0x0038(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                MenuName;                                                // 0x0050(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		EMenuItemSubGroupType                                      MenuItemSubGroupType;                                    // 0x0068(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMenuItemActionType                                        MenuItemActionType;                                      // 0x0069(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LMBP[0x6];                                   // 0x006A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               TextTooltipHiveKey;                                      // 0x0070(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ConsoleTextTooltipHiveKey;                               // 0x0080(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLInfoMenuItemCondition>                    VisibleCondition;                                        // 0x0090(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLInfoMenuItemCondition>                    EnableCondition;                                         // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		ESubMenuItemActionType                                     SubMenuItemActionType;                                   // 0x00B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3GRN[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLDataTableRowHandle>                       SubMenuItemHiveKeyList;                                  // 0x00B8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLInfoMenuItemAction                               ActionInfoPc;                                            // 0x00C8(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLInfoMenuItemAction                               ActionInfoConsole;                                       // 0x00D4(0x000C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UIWidget;                                                // 0x00E0(0x0010) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FTLDataTableRowHandle                               ConsoleUIWidget;                                         // 0x00F0(0x0010) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FTLDataTableRowHandle                               MobileUIWidget;                                          // 0x0100(0x0010) Edit, NoDestructor, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct TLScheme.TLInfoRankerMark
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FTLInfoRankerMark : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     UIIconImage;                                             // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowIconOnChat;                                         // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_56OQ[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               ChatIconMarkup;                                          // 0x0028(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bShowIconOnMap;                                          // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SARR[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     MapIconImage;                                            // 0x0040(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        MapIconColor;                                            // 0x0058(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoRankingReward
	 * Size -> 0x0088 (FullSize[0x0090] - InheritedSize[0x0008])
	 */
	struct FTLInfoRankingReward : public FTableRowBase
	{
	public:
		ERankingRewardType                                         RankingRewardType;                                       // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CQAL[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayName;                                             // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		int32_t                                                    RankingStart;                                            // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankingEnd;                                              // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       RewardEffects;                                           // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        RewardSkillSets;                                         // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               RewardRankerMark;                                        // 0x0050(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PV4K[0x30];                                  // 0x0060(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeRealm
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLSchemeRealm : public FTableRowBase
	{
	public:
		class FString                                              Description;                                             // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                RealmName;                                               // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     RealmIcon;                                               // 0x0030(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParticleConditionKey;                                    // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeRealmGroup
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLSchemeRealmGroup : public FTableRowBase
	{
	public:
		class FString                                              Description;                                             // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                RegionName;                                              // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                UTC;                                                     // 0x0030(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLRegion
	 * Size -> 0x00A0 (FullSize[0x00A8] - InheritedSize[0x0008])
	 */
	struct FTLRegion : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLRegionSpaceType                                         SpaceType;                                               // 0x0018(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UEQG[0x3];                                   // 0x0019(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FName                                                WeatherEnvHiveKey;                                       // 0x001C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MFTU[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIName;                                                  // 0x0028(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       ExceptionDisplayName;                                    // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0F3J[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     OnEnterSoundEvent;                                       // 0x0048(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OnLeaveSoundEvent;                                       // 0x0060(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     GlobalStingerEvent;                                      // 0x0078(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GlobalStingerPlayPreventTimeSec;                         // 0x0090(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_641U[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGuid>                                       MapRouteShapeGuids;                                      // 0x0098(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeRegionGroup
	 * Size -> 0x00F0 (FullSize[0x00F8] - InheritedSize[0x0008])
	 */
	struct FTLSchemeRegionGroup : public FTableRowBase
	{
	public:
		class FText                                                UIName;                                                  // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    SortOrder;                                               // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinLevel;                                                // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxLevel;                                                // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DHPJ[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIFloorText;                                             // 0x0030(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     IconPath;                                                // 0x0048(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             WorldPos;                                                // 0x0060(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3JHY[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               MapIconTableKey;                                         // 0x0070(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       ChildMapIconTableKeys;                                   // 0x0080(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bIgnoreDisplayWorldMapList;                              // 0x0090(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreDisplayItemDropList;                              // 0x0091(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreDisplayItemAcquisitionList;                       // 0x0092(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreDisplayItemDropListSlot;                          // 0x0093(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreDisplayWorldMap;                                  // 0x0094(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLRegionMapDisplayType                                    MapDisplayType;                                          // 0x0095(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9AHF[0x2];                                   // 0x0096(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     DefaultRegionMapTexture;                                 // 0x0098(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WorldmapZoomDefaultRate;                                 // 0x00B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WorldmapZoomMinRate;                                     // 0x00B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WorldmapZoomMaxRate;                                     // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YOK1[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDirectoryPath                                      TilesDirectory;                                          // 0x00C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FVector2D                                           TilesPosition;                                           // 0x00D0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TileScale;                                               // 0x00D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TileColumnCount;                                         // 0x00DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TileRowCount;                                            // 0x00E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDungeonMapRegion;                                       // 0x00E4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S4PK[0x3];                                   // 0x00E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               UnlockMemorialRecordRow;                                 // 0x00E8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeRewardStat
	 * Size -> 0x0348 (FullSize[0x0350] - InheritedSize[0x0008])
	 */
	struct FTLSchemeRewardStat : public FTableRowBase
	{
	public:
		class FName                                                reward_stat_id;                                          // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Seed;                                                    // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    str;                                                     // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dex;                                                     // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Int;                                                     // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    per;                                                     // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_max;                                                  // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_regen;                                                // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_max;                                                // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_regen;                                              // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_max;                                             // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_regen;                                           // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    move_speed_modifier;                                     // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_modifier;                                   // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    critical_attack;                                         // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_attack;                                   // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_attack;                                   // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_attack;                                   // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    critical_defense;                                        // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_defense;                                  // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_defense;                                  // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_defense;                                  // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    double_attack;                                           // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_attack;                                     // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_attack;                                     // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_attack;                                     // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    double_defense;                                          // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_defense;                                    // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_defense;                                    // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_defense;                                    // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power;                                            // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_main_hand;                                  // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_off_hand;                                   // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power;                                      // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power_main_hand;                            // 0x0094(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_attack_power_off_hand;                             // 0x0098(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_rating;                                           // 0x009C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    armor_class;                                             // 0x00A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_armor;                                             // 0x00A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_armor;                                             // 0x00A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_armor;                                             // 0x00AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_chance;                                     // 0x00B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_chance_penetration;                         // 0x00B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_accuracy;                                          // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_accuracy;                                          // 0x00BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_accuracy;                                          // 0x00C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_evasion;                                           // 0x00C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_evasion;                                           // 0x00C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_evasion;                                           // 0x00CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_reduction;                                        // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_reduction_penetration;                            // 0x00D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    fire_amplification;                                      // 0x00D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    water_amplification;                                     // 0x00DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    wind_amplification;                                      // 0x00E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earth_amplification;                                     // 0x00E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    fire_resistance;                                         // 0x00E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    water_resistance;                                        // 0x00EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    wind_resistance;                                         // 0x00F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earth_resistance;                                        // 0x00F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_amplification;                                   // 0x00F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_resistance;                                      // 0x00FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_accuracy;                                         // 0x0100(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_accuracy;                                           // 0x0104(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_accuracy;                                  // 0x0108(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_accuracy;                                          // 0x010C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_accuracy;                                        // 0x0110(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_accuracy;                                           // 0x0114(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_accuracy;                                          // 0x0118(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_tolerance;                                        // 0x011C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_tolerance;                                          // 0x0120(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_tolerance;                                 // 0x0124(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_tolerance;                                         // 0x0128(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_tolerance;                                       // 0x012C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_tolerance;                                          // 0x0130(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_tolerance;                                         // 0x0134(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_critical_attack;                                  // 0x0138(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_critical_attack;                                    // 0x013C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_critical_attack;                           // 0x0140(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_critical_attack;                                   // 0x0144(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_critical_attack;                                 // 0x0148(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_critical_attack;                                    // 0x014C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_critical_attack;                                   // 0x0150(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_critical_defense;                                 // 0x0154(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_critical_defense;                                   // 0x0158(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_critical_defense;                          // 0x015C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_critical_defense;                                  // 0x0160(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_critical_defense;                                // 0x0164(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_critical_defense;                                   // 0x0168(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_critical_defense;                                  // 0x016C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_double_attack;                                    // 0x0170(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_double_attack;                                      // 0x0174(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_double_attack;                             // 0x0178(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_double_attack;                                     // 0x017C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_double_attack;                                   // 0x0180(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_double_attack;                                      // 0x0184(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_double_attack;                                     // 0x0188(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_double_defense;                                   // 0x018C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_double_defense;                                     // 0x0190(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_double_defense;                            // 0x0194(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_double_defense;                                    // 0x0198(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_double_defense;                                  // 0x019C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_double_defense;                                     // 0x01A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_double_defense;                                    // 0x01A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_immune;                                             // 0x01A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_immune;                                    // 0x01AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_immune;                                            // 0x01B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_immune;                                          // 0x01B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_immune;                                             // 0x01B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_immune;                                            // 0x01BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_immune;                                          // 0x01C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_exp_acquired;                                     // 0x01C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_gold_acquired;                                    // 0x01C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_gold_drop;                                        // 0x01CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_item_drop;                                        // 0x01D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_resource_drop;                                    // 0x01D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_alignment_point_gain;                             // 0x01D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    potion_heal_modifier;                                    // 0x01DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    heal_modifier;                                           // 0x01E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    heal_taken_modifier;                                     // 0x01E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_heal_taken_modifier;                               // 0x01E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_consumption_modifier;                               // 0x01EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    belonging_weight_cap;                                    // 0x01F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_cooldown_modifier;                                 // 0x01F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    aura_effect_boost;                                       // 0x01F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    critical_damage_dealt_modifier;                          // 0x01FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earn_weapon_mastery_exp_modifier;                        // 0x0200(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_grankus_attack_power;                              // 0x0204(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_einarden_attack_power;                             // 0x0208(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_dragon_attack_power;                               // 0x020C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    demon_damage_attack_power;                               // 0x0210(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_undead_attack_power;                               // 0x0214(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_creation_attack_power;                             // 0x0218(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_spirit_attack_power;                               // 0x021C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_animal_attack_power;                               // 0x0220(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_insect_attack_power;                               // 0x0224(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_plant_attack_power;                                // 0x0228(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    grankus_damage_reduction;                                // 0x022C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    einarden_damage_reduction;                               // 0x0230(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dragon_damage_reduction;                                 // 0x0234(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    demon_damage_reduction;                                  // 0x0238(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    undead_damage_reduction;                                 // 0x023C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    creation_damage_reduction;                               // 0x0240(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    spirit_damage_reduction;                                 // 0x0244(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    animal_damage_reduction;                                 // 0x0248(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    insect_damage_reduction;                                 // 0x024C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    plant_damage_reduction;                                  // 0x0250(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_bonus_attack_power;                                 // 0x0254(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_damage_reduction;                                   // 0x0258(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_critical_attack;                                    // 0x025C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_critical_attack;                              // 0x0260(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_critical_attack;                              // 0x0264(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_critical_attack;                              // 0x0268(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_critical_defense;                                   // 0x026C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_critical_defense;                             // 0x0270(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_critical_defense;                             // 0x0274(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_critical_defense;                             // 0x0278(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_double_attack;                                      // 0x027C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_double_attack;                                // 0x0280(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_double_attack;                                // 0x0284(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_double_attack;                                // 0x0288(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_double_defense;                                     // 0x028C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_double_defense;                               // 0x0290(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_double_defense;                               // 0x0294(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_double_defense;                               // 0x0298(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_accuracy;                                     // 0x029C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_accuracy;                                     // 0x02A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_accuracy;                                     // 0x02A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_melee_evasion;                                      // 0x02A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_range_evasion;                                      // 0x02AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    boss_magic_evasion;                                      // 0x02B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_critical_attack;                                     // 0x02B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_critical_attack;                               // 0x02B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_critical_attack;                               // 0x02BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_critical_attack;                               // 0x02C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_critical_defense;                                    // 0x02C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_critical_defense;                              // 0x02C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_critical_defense;                              // 0x02CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_critical_defense;                              // 0x02D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_double_attack;                                       // 0x02D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_double_attack;                                 // 0x02D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_double_attack;                                 // 0x02DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_double_attack;                                 // 0x02E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_double_defense;                                      // 0x02E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_double_defense;                                // 0x02E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_double_defense;                                // 0x02EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_double_defense;                                // 0x02F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_accuracy;                                      // 0x02F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_accuracy;                                      // 0x02F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_accuracy;                                      // 0x02FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_melee_evasion;                                       // 0x0300(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_range_evasion;                                       // 0x0304(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    pvp_magic_evasion;                                       // 0x0308(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_power_amplification;                               // 0x030C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_power_resistance;                                  // 0x0310(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earn_dungeon_point_modifier;                             // 0x0314(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    spend_dungeon_point_modifier;                            // 0x0318(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    polymorph_duration;                                      // 0x031C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_doll_heal_modifier;                                // 0x0320(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dash_fast_move_speed_modifier;                           // 0x0324(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dash_normal_move_speed_modifier;                         // 0x0328(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    swim_fast_move_speed_modifier;                           // 0x032C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    swim_normal_move_speed_modifier;                         // 0x0330(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    glide_fast_move_speed_modifier;                          // 0x0334(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    glide_normal_move_speed_modifier;                        // 0x0338(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    wild_polymorph_skill_cooldown_modifier;                  // 0x033C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FB1V[0x10];                                  // 0x0340(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeRotationEvent
	 * Size -> 0x00D0 (FullSize[0x00D8] - InheritedSize[0x0008])
	 */
	struct FTLSchemeRotationEvent : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SMDP[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               WeaponGroup;                                             // 0x0010(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       DailyRankingList;                                        // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               TotalRankingReward;                                      // 0x0030(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               DailyRankingReward;                                      // 0x0040(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    MaxContributionRewardCount;                              // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ContributionPointInterval;                               // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ContributionRewardItem;                                  // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ContributionRewardCount;                                 // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0ZPP[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TitleText;                                               // 0x0068(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                DescText;                                                // 0x0080(0x0018) Edit, NativeAccessSpecifierPublic
		struct FLinearColor                                        ScheduleBarColor;                                        // 0x0098(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ImagePath;                                               // 0x00A8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ItemIconPath;                                            // 0x00C0(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeRotationEventContentRankingPoint
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FTLSchemeRotationEventContentRankingPoint : public FTableRowBase
	{	};

	/**
	 * ScriptStruct TLScheme.TLSchemeRotationEventItemRankingPoint
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FTLSchemeRotationEventItemRankingPoint : public FTableRowBase
	{	};

	/**
	 * ScriptStruct TLScheme.TLSchemeRotationEventNpcRankingPoint
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FTLSchemeRotationEventNpcRankingPoint : public FTableRowBase
	{	};

	/**
	 * ScriptStruct TLScheme.TLSchemeRotationEventRanking
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FTLSchemeRotationEventRanking : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERotationEventRankingType                                  Type;                                                    // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VVVT[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RankingPointGroupId;                                     // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<ESpeciesGroup>                                      TargetSpeciesGroupList;                                  // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                Title;                                                   // 0x0030(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                EventDescription;                                        // 0x0048(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<class FText>                                        GoalDescription;                                         // 0x0060(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               HelpTableRow;                                            // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeRotationEventItemReward
	 * Size -> 0x0018
	 */
	struct FTLSchemeRotationEventItemReward
	{
	public:
		class FString                                              Item;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemCount;                                               // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZZCO[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeRotationEventRankReward
	 * Size -> 0x0018
	 */
	struct FTLSchemeRotationEventRankReward
	{
	public:
		int32_t                                                    MinRank;                                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxRank;                                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeRotationEventItemReward>            ItemRewardList;                                          // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeRotationEventReward
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemeRotationEventReward : public FTableRowBase
	{
	public:
		TArray<struct FTLSchemeRotationEventRankReward>            RankRewardList;                                          // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeRotationEventWeaponGroup
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeRotationEventWeaponGroup : public FTableRowBase
	{
	public:
		TArray<EWeaponCategory>                                    TargetWeaponCategoryList;                                // 0x0008(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UITextTooltipKey;                                        // 0x0018(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLRowSampleExtra
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTLRowSampleExtra : public FTableRowBase
	{
	public:
		uint32_t                                                   UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              Color;                                                   // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLRowSample
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLRowSample : public FTableRowBase
	{
	public:
		uint32_t                                                   UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OIRF[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayName;                                             // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RV8S[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLScreenMessageString
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLScreenMessageString : public FTableRowBase
	{
	public:
		ETLScreenMsgType                                           ScreenMessageType;                                       // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZRNO[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Title;                                                   // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                EventText;                                               // 0x0028(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLScreenMessageData
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLScreenMessageData : public FTableRowBase
	{
	public:
		ETLScreenMsgGroup                                          Group;                                                   // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLScreenMsgPriority                                       Priority;                                                // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLScreenMsgExpire                                         Expire;                                                  // 0x000A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UIFH[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DurationMs;                                              // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RemoveMs;                                                // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExpireCount;                                             // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DelayMs;                                                 // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D2HE[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeSeasonPass
	 * Size -> 0x00B0 (FullSize[0x00B8] - InheritedSize[0x0008])
	 */
	struct FTLSchemeSeasonPass : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TitleText;                                               // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BackgroundImagePath;                                     // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PreviewRewardLevelCycle;                                 // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_09HB[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLDataTableRowHandle>                       DisplayRewardList;                                       // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                DescText;                                                // 0x0060(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FLinearColor                                        ScheduleBarColor;                                        // 0x0078(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ImagePath;                                               // 0x0088(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ItemIconPath;                                            // 0x00A0(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeSeasonPassTask
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLSchemeSeasonPassTask : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                TitleText;                                               // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TaskTypeImagePath;                                       // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeServerBehaviorTree
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLSchemeServerBehaviorTree : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     BehaviorTreeAsset;                                       // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLServerConsoleCommandArgument
	 * Size -> 0x0040
	 */
	struct FTLServerConsoleCommandArgument
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Type;                                                    // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Default_Value;                                           // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLRowServerConsoleCommand
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLRowServerConsoleCommand : public FTableRowBase
	{
	public:
		class FString                                              Name;                                                    // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLServerConsoleCommandArgument>             Argument;                                                // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoShopLooks
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLInfoShopLooks : public FTableRowBase
	{
	public:
		class FText                                                Name;                                                    // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoSiegewarfareMarkupImage
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLInfoSiegewarfareMarkupImage : public FTableRowBase
	{
	public:
		struct FTLDataTableRowHandle                               Default;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               Friendly;                                                // 0x0018(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               Hostile;                                                 // 0x0028(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoSkillOptionalDataForPc
	 * Size -> 0x00B0 (FullSize[0x00B8] - InheritedSize[0x0008])
	 */
	struct FTLInfoSkillOptionalDataForPc : public FTableRowBase
	{
	public:
		ESkillPcRotateFlag                                         rotate_flag;                                             // 0x0008(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LM66[0x3];                                   // 0x0009(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FName                                                cost_consumption;                                        // 0x000C(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                hp_consumption;                                          // 0x0014(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Item;                                                    // 0x001C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    item_cost;                                               // 0x0024(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              Ammo;                                                    // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F9U3[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ammo_cost;                                               // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                cooldown_time;                                           // 0x0030(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECooldownGroup                                             cooldown_group;                                          // 0x0038(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H70G[0x3];                                   // 0x0039(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_AUQB[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EGlobalCooldownGroup>                               global_cool_take;                                        // 0x0040(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       Show_HitDelay_Bar;                                       // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CL3X[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESkillPriority                                             Skill_Priority;                                          // 0x0054(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZJEC[0x3];                                   // 0x0055(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       Pending;                                                 // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       WhenDie;                                                 // 0x0059(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_08QI[0x2];                                   // 0x005A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BelowHpRatio;                                            // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      below_cost_ratio;                                        // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BelowHeightFromLand;                                     // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GreaterHeightFromLand;                                   // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CombatState;                                             // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Stack_Max;                                               // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Stack_Init;                                              // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Stack_Regen;                                             // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Stack_Cost;                                              // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       can_cancel_by_move_before_hit_time;                      // 0x0080(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       can_cancel_by_move_after_hit_time;                       // 0x0081(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       can_cancel_by_jump_before_hit_time;                      // 0x0082(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       can_cancel_by_jump_after_hit_time;                       // 0x0083(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       can_use_when_mobility_polymorphed_only;                  // 0x0084(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       cannot_use_when_mobility_polymorphed;                    // 0x0085(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       cannot_use_when_social_polymorphed;                      // 0x0086(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       cannot_use_when_siege_weapon_polymorphed;                // 0x0087(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       cannot_use_on_carrier_kind;                              // 0x0088(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       skill_cancel_penalty_take;                               // 0x0089(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       TogglePauseWhenMove;                                     // 0x008A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       check_target_move_force;                                 // 0x008B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                skill_for_hostile_undead;                                // 0x008C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_92O4[0xC];                                   // 0x0094(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                skill_for_boss;                                          // 0x00A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T2H9[0x8];                                   // 0x00A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                stamina_consumption;                                     // 0x00B0(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoSkillOptionalData
	 * Size -> 0x00B8 (FullSize[0x00C0] - InheritedSize[0x0008])
	 */
	struct FTLInfoSkillOptionalData : public FTableRowBase
	{
	public:
		struct FTLInfoSkillOptionalDataForPc                       for_pc;                                                  // 0x0008(0x00B8) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoSkill
	 * Size -> 0x01B0 (FullSize[0x01B8] - InheritedSize[0x0008])
	 */
	struct FTLInfoSkill : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_DZ1B[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UID;                                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESkillCategory                                             skill_category;                                          // 0x0014(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0465[0x3];                                   // 0x0015(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ESkillInputType                                            Input_Type;                                              // 0x0018(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O9G2[0x3];                                   // 0x0019(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ETLDamageType                                              damage_type;                                             // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MW35[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETLDefensibleSkillAttackType                               defensible_skill_attack_type;                            // 0x0020(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J23F[0x3];                                   // 0x0021(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ESkillAttackSide                                           attack_side;                                             // 0x0024(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NABI[0x3];                                   // 0x0025(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      skill_delay;                                             // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      hit_delay;                                               // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      repeat_delay;                                            // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                valid_range;                                             // 0x0034(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                valid_height;                                            // 0x003C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                area_range;                                              // 0x0044(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      area_range_base;                                         // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESkillTargetBase                                           target_base;                                             // 0x0050(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9U8P[0x3];                                   // 0x0051(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       can_use_when_disabled_skill;                             // 0x0054(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       can_use_when_jump;                                       // 0x0055(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       can_use_when_swim;                                       // 0x0056(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_77EJ[0x1];                                   // 0x0057(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EProjectileInfo                                            Projectile_Info;                                         // 0x0058(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JHR5[0x3];                                   // 0x0059(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      projectile_speed;                                        // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    projectile_min_time;                                     // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5KV8[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETargetValidType                                           Target_Valid_Type;                                       // 0x0068(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JII6[0x3];                                   // 0x0069(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      start_cone_angle;                                        // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      range_cone_angle;                                        // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESkillMoveType                                             Move_Type;                                               // 0x0074(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T2U0[0x3];                                   // 0x0075(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       server_side_swimming_check_during_skill;                 // 0x0078(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       MakeCombatIdle;                                          // 0x0079(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6IQ9[0x2];                                   // 0x007A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETLSkillPropensity                                         skill_propensity;                                        // 0x007C(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ROM2[0x3];                                   // 0x007D(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ETLSkillTargetRelation                                     skill_target_relation;                                   // 0x0080(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WO5R[0x3];                                   // 0x0081(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		ETLSkillTargetLivingStatus                                 skill_target_living_status;                              // 0x0084(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IIUV[0x3];                                   // 0x0085(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		float                                                      cast_delay;                                              // 0x0088(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLSkillRotate                                             skill_rotate;                                            // 0x008C(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_305F[0x3];                                   // 0x008D(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       apply_movespeed_combo;                                   // 0x0090(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RDZ3[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLInfoSkillOptionalData                            optional_data;                                           // 0x0098(0x00C0) Edit, NativeAccessSpecifierPublic
		class FName                                                Chain_Skill;                                             // 0x0158(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VZA6[0x8];                                   // 0x0160(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETLChainSkillDirection                                     chain_skill_direction;                                   // 0x0168(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LAST[0x3];                                   // 0x0169(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		class FName                                                resume_toggle_skill;                                     // 0x016C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K8BG[0xC];                                   // 0x0174(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EEnvironmentalAffected                                     environmental_affected;                                  // 0x0180(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7ZVG[0x37];                                  // 0x0181(0x0037) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoPassiveSkillLooks
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FTLInfoPassiveSkillLooks : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_XF3L[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIName;                                                  // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                UIDescription;                                           // 0x0028(0x0018) Edit, NativeAccessSpecifierPublic
		unsigned char                                              IconPath[0x28];                                          // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct TLScheme.TLInfoSkillLooksSkillNotify
	 * Size -> 0x0020
	 */
	struct FTLInfoSkillLooksSkillNotify
	{
	public:
		float                                                      SkillNotifyStartSec;                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SkillNotifyEndSec;                                       // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SkillNotifyAT;                                           // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoSkillLooks
	 * Size -> 0x00C8 (FullSize[0x00D0] - InheritedSize[0x0008])
	 */
	struct FTLInfoSkillLooks : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     Sct;                                                     // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ProjectileSct;                                           // 0x0020(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwingClientTimeSec;                                      // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LOVY[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     CastingSct;                                              // 0x0040(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowBlockSct;                                            // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q83W[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     ToggleOffSct;                                            // 0x0060(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       RemainSkillFsmDuringSctPlaying;                          // 0x0078(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DHMN[0x3];                                   // 0x0079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AngularSpeedDegreePerSec;                                // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SkillStartAT;                                            // 0x0080(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SkillHitAT;                                              // 0x0098(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLInfoSkillLooksSkillNotify                        SkillNotify;                                             // 0x00B0(0x0020) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLUISkillOptionInfo
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLUISkillOptionInfo : public FTableRowBase
	{
	public:
		class FText                                                Name;                                                    // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Option;                                                  // 0x0020(0x0018) Edit, NativeAccessSpecifierPublic
		EPassiveSkillType                                          Type;                                                    // 0x0038(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2AZ7[0x3];                                   // 0x0039(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_4RON[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     icon;                                                    // 0x0040(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoSkillLevelOption
	 * Size -> 0x0030
	 */
	struct FTLInfoSkillLevelOption
	{
	public:
		class FText                                                OptionName;                                              // 0x0000(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                OptionParameter;                                         // 0x0018(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoSkillLevelOptionList
	 * Size -> 0x0010
	 */
	struct FTLInfoSkillLevelOptionList
	{
	public:
		TArray<struct FTLInfoSkillLevelOption>                     LevelOptions;                                            // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoSkillPcLooks
	 * Size -> 0x0210 (FullSize[0x02E0] - InheritedSize[0x00D0])
	 */
	struct FTLInfoSkillPcLooks : public FTLInfoSkillLooks
	{
	public:
		class FText                                                UIName;                                                  // 0x00D0(0x0018) Edit, Protected, NativeAccessSpecifierProtected
		unsigned char                                              IconPath[0x28];                                          // 0x00E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		ETLSkillClassType                                          SkillClassType;                                          // 0x0110(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NJIW[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ETLSkillOptionRank, class FText>                      RankDescription;                                         // 0x0118(0x0050) Edit, NativeAccessSpecifierPublic
		bool                                                       ToggleSkillsOff;                                         // 0x0168(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6K8U[0x7];                                   // 0x0169(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLUISkillOptionInfo>                        UIOptions;                                               // 0x0170(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		ESkillElementType                                          Element;                                                 // 0x0180(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UW39[0x7];                                   // 0x0181(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ETLSkillOptionRank, struct FTLInfoSkillLevelOptionList> SkillLevelUpOptionList;                                  // 0x0188(0x0050) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLInfoSkillLevelOption>                     SkillTooltipOptionList;                                  // 0x01D8(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       ShowSkillLevelInSkillTooltip;                            // 0x01E8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3RXG[0x7];                                   // 0x01E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, class FText>                                 AwakeningOptionList;                                     // 0x01F0(0x0050) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLWeaponSet>                                Weapons;                                                 // 0x0240(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		ETLTargetApproachType                                      TargetApproachType;                                      // 0x0250(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1CP4[0x3];                                   // 0x0251(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       ClearFixTarget;                                          // 0x0254(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5MVX[0x3];                                   // 0x0255(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETLPassiveType                                             PassiveType;                                             // 0x0258(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8MNY[0x3];                                   // 0x0259(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       bAutoUsable;                                             // 0x025C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoUsableByValue;                                      // 0x025D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseOptionValue;                                         // 0x025E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FDV4[0x1];                                   // 0x025F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ActiveAutoUseValue;                                      // 0x0260(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckAutoUseSlotTargetIsOutOfPrimeSkillRange;           // 0x0264(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RLJT[0x3];                                   // 0x0265(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ETLSkillBuffType                                           SkillType;                                               // 0x0268(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6FB3[0x3];                                   // 0x0269(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       bCheckAutoUseSlotTargetIsInPrimeSkillRange;              // 0x026C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       TwoDepthEnable;                                          // 0x026D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L6G8[0x2];                                   // 0x026E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EFoSubType>                                         FoSubTypes;                                              // 0x0270(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       CanUseFromAutoUseSlot;                                   // 0x0280(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReleaseSpecialPolymorph;                                // 0x0281(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefenseAction;                                          // 0x0282(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FK1I[0x5];                                   // 0x0283(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     AbnormalTypeIconPath1;                                   // 0x0288(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     AbnormalTypeIconPath2;                                   // 0x02A0(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLCastingUIType                                           CastingUIType;                                           // 0x02B8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NEHY[0x7];                                   // 0x02B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                CastingUITextId;                                         // 0x02C0(0x0018) Edit, NativeAccessSpecifierPublic
		int32_t                                                    UIPriority;                                              // 0x02D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8CFA[0x4];                                   // 0x02DC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoSkillLevelSetting
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTLInfoSkillLevelSetting : public FTableRowBase
	{
	public:
		uint32_t                                                   UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESkillGrade                                                SkillGrade;                                              // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              FirstSkillLevel;                                         // 0x000D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q6UY[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoSkillLevelUpSuccess
	 * Size -> 0x0008
	 */
	struct FTLInfoSkillLevelUpSuccess
	{
	public:
		int32_t                                                    probability;                                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnchantPoint;                                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoSkillLevelUpRecipe
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLInfoSkillLevelUpRecipe : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SkillComplexId;                                          // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SkillLevelToBe;                                          // 0x0014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EAHF[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        SourceItemIds;                                           // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    NeedBookPoint;                                           // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_04TN[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLInfoSkillLevelUpSuccess>                  SkillLevelUpSuccesses;                                   // 0x0030(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		float                                                      OverEnchantPaybackBookPointPerEnchantPoint;              // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EnchantPointPerOverEnchantPoint;                         // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R6I8[0x10];                                  // 0x0048(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSocialMotion
	 * Size -> 0x0070 (FullSize[0x0078] - InheritedSize[0x0008])
	 */
	struct FTLSocialMotion : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_814Y[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIName;                                                  // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		ESocialMotionPlayType                                      PlayType;                                                // 0x0028(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EXIT[0x3];                                   // 0x0029(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		int32_t                                                    MaxMember;                                               // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxDistanceCM;                                           // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DurationMs;                                              // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESocialMotionType                                          SocialMotionType;                                        // 0x0038(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S5SW[0x3];                                   // 0x0039(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_G79W[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          IconPath;                                                // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SctPath;                                                 // 0x0048(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               Commands;                                                // 0x0060(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bDefaultProvided;                                        // 0x0070(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GP4Y[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeSpawnCondition
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemeSpawnCondition : public FTableRowBase
	{
	public:
		bool                                                       kDay;                                                    // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       kNight;                                                  // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       kNormal;                                                 // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       kRain;                                                   // 0x000B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       kThunder;                                                // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       kSnow;                                                   // 0x000D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       kIndoor;                                                 // 0x000E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       kMagicRain;                                              // 0x000F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       kLunarEclipse;                                           // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OECO[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.DialogMotionSet
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FDialogMotionSet : public FTableRowBase
	{
	public:
		class FString                                              SpeakStrId;                                              // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MotionId;                                                // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.SpeakNode
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSpeakNode : public FTableRowBase
	{
	public:
		TArray<struct FDialogMotionSet>                            DialogueMotionSet;                                       // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int32_t                                                    Ratio;                                                   // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Delay;                                                   // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.SpeakSetNode
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSpeakSetNode : public FTableRowBase
	{
	public:
		float                                                      InteractionCooltime;                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeakInterval;                                           // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ClosingDelay;                                            // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2RMB[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSpeakNode>                                  SpeakNode;                                               // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSpeakSetInfo
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FTLSpeakSetInfo : public FTableRowBase
	{
	public:
		class FName                                                ID;                                                      // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            OwnerClassId;                                            // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            OwnerSpawnId;                                            // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<ENpcState, struct FSpeakSetNode>                      SpeakSetNode;                                            // 0x0030(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeSpecialDungeonGroup
	 * Size -> 0x0090 (FullSize[0x0098] - InheritedSize[0x0008])
	 */
	struct FTLSchemeSpecialDungeonGroup : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VELC[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                GroupTitle;                                              // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		ESpecialDungeonType                                        DungeonType;                                             // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLJsonMapRegionType                                       RegionType;                                              // 0x0029(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WTT3[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     DungeonButtonBg;                                         // 0x0030(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnterLevel;                                              // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OpenDayOfWeek;                                           // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UnlockMemorialRecordRow;                                 // 0x0050(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TArray<class FName>                                        RechargeItemNames;                                       // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       Dungeons;                                                // 0x0070(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int64_t                                                    BaseTimeMin;                                             // 0x0080(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               InfinityDungeonGroup;                                    // 0x0088(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSpecies
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FTLSpecies : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_6Z2W[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESpeciesGroup                                              SpeciesGroup;                                            // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9YP6[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                NpcPassive;                                              // 0x0014(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PcPassive;                                               // 0x001C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LVUC[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EWeakness>                                          Weakness;                                                // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                UIName;                                                  // 0x0038(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UINpcAbnormalLooks;                                      // 0x0050(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UIPcAbnormalLooks;                                       // 0x0060(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FTLUIStatsValueInfo>                         UIPcAbnormalLooksStats;                                  // 0x0070(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLItemStatDisplayInfo
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLItemStatDisplayInfo : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_Q8SF[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EItemTraitStats                                            StatType;                                                // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPcStatsType                                               DisplayPcStatType;                                       // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z1Z4[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLStatAttrInfo
	 * Size -> 0x00C0 (FullSize[0x00C8] - InheritedSize[0x0008])
	 */
	struct FTLStatAttrInfo : public FTableRowBase
	{
	public:
		EPcStatsType                                               PcStatsType;                                             // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemAttrType                                              ItemAttrType;                                            // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAdjustStatType                                            AdjustStatType;                                          // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLMagicDollStatType                                       MagicDollStatType;                                       // 0x000B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NIBE[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                CharacterUIName;                                         // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ItemUIName;                                              // 0x0028(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ValueFormat;                                             // 0x0040(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       UseSign;                                                 // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_94VV[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TooltipTitle;                                            // 0x0060(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                TooltipDesc;                                             // 0x0078(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                DecreaseDesc;                                            // 0x0090(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		float                                                      Multiply;                                                // 0x00A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Inversely;                                               // 0x00AC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J6D3[0x3];                                   // 0x00AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UTexture2D*                                          IconPath;                                                // 0x00B0(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D*                                          StatIcon;                                                // 0x00B8(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UISortPriority;                                          // 0x00C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowOnItemCollection;                                    // 0x00C4(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HideOnItemTooltip;                                       // 0x00C5(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HideOnEnchant;                                           // 0x00C6(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8EI6[0x1];                                   // 0x00C7(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLStatsValueInfo
	 * Size -> 0x0008
	 */
	struct FTLStatsValueInfo
	{
	public:
		EPcStatsType                                               StatsType;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3DMM[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Value;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLStorageInfo
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLStorageInfo : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_X3M6[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    required_level;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B4DA[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    price_adena;                                             // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    additional_slot;                                         // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8WE7[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLStrongholdInfo
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FTLStrongholdInfo : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_RAP3[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SortPriority;                                            // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EStrongholdType                                            StrongholdType;                                          // 0x0014(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RYGA[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     StrongholdIcon;                                          // 0x0018(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuildMinutesPerOnePercent;                               // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuildAdenaPerOnePercent;                                 // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuildRequiredItemTableNum1;                              // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuildRequiredItemCount1;                                 // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuildRequiredItemTableNum2;                              // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuildRequiredItemCount2;                                 // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuildRequiredItemTableNum3;                              // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuildRequiredItemCount3;                                 // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuildRequiredItemTableNum4;                              // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuildRequiredItemCount4;                                 // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepairMinutesPerOnePercent;                              // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepairAdenaPerOnePercent;                                // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepairRequiredItemTableNum1;                             // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepairRequiredItemCount1;                                // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepairRequiredItemTableNum2;                             // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepairRequiredItemCount2;                                // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepairRequiredItemTableNum3;                             // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepairRequiredItemCount3;                                // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepairRequiredItemTableNum4;                             // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepairRequiredItemCount4;                                // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoSystemSct
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLInfoSystemSct : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     Sct;                                                     // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeStageBlackboardTag
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeStageBlackboardTag : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NVTJ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Comment;                                                 // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeTag
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLSchemeTag : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DUJP[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Comment;                                                 // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeTaxDelivery
	 * Size -> 0x0250 (FullSize[0x0258] - InheritedSize[0x0008])
	 */
	struct FTLSchemeTaxDelivery : public FTableRowBase
	{
	public:
		class FText                                                Title;                                                   // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     IconPath;                                                // 0x0020(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                PrepareDescription;                                      // 0x0038(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                ProgressDescription;                                     // 0x0050(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                CompleteDescription;                                     // 0x0068(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                TargetName;                                              // 0x0080(0x0018) Edit, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TargetIconPath;                                          // 0x0098(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               MapIconTableKey;                                         // 0x00B0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             MapIconPosition;                                         // 0x00C0(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S0FR[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                TooltipDescription;                                      // 0x00D0(0x0018) Edit, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               TargetMapIconTableKey;                                   // 0x00E8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                CastleOwnerSuccessDesc;                                  // 0x00F8(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                CastleOwnerFailedDesc;                                   // 0x0110(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                CastleNotOwnerSuccessDesc;                               // 0x0128(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                CastleNotOwnerFailedDesc;                                // 0x0140(0x0018) Edit, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               HelpTableRow;                                            // 0x0158(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               BeginSystemMessage;                                      // 0x0168(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               StartSystemMessage;                                      // 0x0178(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               SuccessSystemMessage;                                    // 0x0188(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               FailedSystemMessage;                                     // 0x0198(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               NoneCastleSuccessSystemMessage;                          // 0x01A8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               NoneCastleFailedSystemMessage;                           // 0x01B8(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OwnerPrepareMusicPath;                                   // 0x01C8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                OwnerPrepareAudioTag;                                    // 0x01E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OwnerProgressMusicPath;                                  // 0x01E8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                OwnerProgressAudioTag;                                   // 0x0200(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     NotOwnerPrepareMusicPath;                                // 0x0208(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NotOwnerPrepareAudioTag;                                 // 0x0220(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     NotOwnerProgressMusicPath;                               // 0x0228(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                NotOwnerProgressAudioTag;                                // 0x0240(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ShapeLineColorKey;                                       // 0x0248(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLTaxDeliveryItemReward
	 * Size -> 0x0018
	 */
	struct FTLTaxDeliveryItemReward
	{
	public:
		struct FTLDataTableRowHandle                               Item;                                                    // 0x0000(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    ItemCount;                                               // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XUK9[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLTaxDeliveryDefaultReward
	 * Size -> 0x0010
	 */
	struct FTLTaxDeliveryDefaultReward
	{
	public:
		TArray<struct FTLTaxDeliveryItemReward>                    ItemReward;                                              // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLTaxDeliveryAccumulateReward
	 * Size -> 0x0010
	 */
	struct FTLTaxDeliveryAccumulateReward
	{
	public:
		TArray<struct FTLTaxDeliveryItemReward>                    ItemReward;                                              // 0x0000(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TTLSchemeTaxDeliveryReward
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTTLSchemeTaxDeliveryReward : public FTableRowBase
	{
	public:
		struct FTLTaxDeliveryDefaultReward                         DefaultReward;                                           // 0x0008(0x0010) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLTaxDeliveryAccumulateReward>              AccumulateReward;                                        // 0x0018(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLTeleport
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLScheme_FTLTeleport : public FTableRowBase
	{
	public:
		int32_t                                                    MapID;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             position;                                                // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeTerritory
	 * Size -> 0x00B0 (FullSize[0x00B8] - InheritedSize[0x0008])
	 */
	struct FTLSchemeTerritory : public FTableRowBase
	{
	public:
		class FString                                              Comment;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UIName;                                                  // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    SortOrder;                                               // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DTM0[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               HyperLinkRef;                                            // 0x0038(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    MinLevel;                                                // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxLevel;                                                // 0x004C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             WorldPos;                                                // 0x0050(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WorldmapZoomDefaultRate;                                 // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     IconPath;                                                // 0x0060(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsShowIconBG;                                            // 0x0078(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PXOQ[0x3];                                   // 0x0079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FLinearColor                                        IconBGColor;                                             // 0x007C(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z52L[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               MapIconTableKey;                                         // 0x0090(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bIgnoreDisplayWorldMapList;                              // 0x00A0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreDisplayItemDropList;                              // 0x00A1(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreDisplayItemAcquisitionList;                       // 0x00A2(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreDisplayFacilityList;                              // 0x00A3(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JTLC[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               UnlockMemorialRecordRow;                                 // 0x00A8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonTerritoryFog
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLJsonTerritoryFog : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VQ36[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLJsonGuid>                                 waypoint;                                                // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLJsonGuid>                                 region_group;                                            // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeTerritoryFog
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FTLSchemeTerritoryFog : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZXMR[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                OpenRegionName;                                          // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       MapIconTableKeys;                                        // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       NpcTableKeys;                                            // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<int32_t>                                            FogIDList;                                               // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0058(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowCodexScreenMessage;                                  // 0x0068(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FN8A[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeTerritoryZone
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FTLSchemeTerritoryZone : public FTableRowBase
	{
	public:
		class FText                                                Comment;                                                 // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                UIName;                                                  // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    SortOrder;                                               // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             WorldPos;                                                // 0x003C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WorldmapZoomDefaultRate;                                 // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HV9D[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               MapIconTableKey;                                         // 0x0050(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UnlockMemorialRecordRow;                                 // 0x0060(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLRowTestMacro
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLRowTestMacro : public FTableRowBase
	{
	public:
		class FString                                              Name;                                                    // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLRowTestMacroSet
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FTLRowTestMacroSet : public FTableRowBase
	{
	public:
		class FString                                              Name;                                                    // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLRowTestMacro>                             Test_Macro;                                              // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoTextBlockStyle
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLInfoTextBlockStyle : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     TLTextBlockStyle;                                        // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoTextTooltip
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FTLInfoTextTooltip : public FTableRowBase
	{
	public:
		class FText                                                Title;                                                   // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                TitleValue;                                              // 0x0038(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeTimeLimitDungeon
	 * Size -> 0x0098 (FullSize[0x00A0] - InheritedSize[0x0008])
	 */
	struct FTLSchemeTimeLimitDungeon : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0JM7[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               MapIdRow;                                                // 0x0010(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                DungeonTitle;                                            // 0x0020(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                DungeonDesc;                                             // 0x0038(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DungeonBg;                                               // 0x0050(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnterLevel;                                              // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinLevel;                                                // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxLevel;                                                // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W8JF[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        RewardItems;                                             // 0x0078(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FName                                                PlacedName;                                              // 0x0088(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EnterItemName;                                           // 0x0090(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    EnterItemAmount;                                         // 0x0098(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeTimeLimitDungeonGroup
	 * Size -> 0x0088 (FullSize[0x0090] - InheritedSize[0x0008])
	 */
	struct FTLSchemeTimeLimitDungeonGroup : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NPCT[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                GroupTitle;                                              // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		ETLJsonMapRegionType                                       RegionType;                                              // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C3ES[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     DungeonButtonBg;                                         // 0x0030(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnterLevel;                                              // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8AYR[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        RechargeItemNames;                                       // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLDataTableRowHandle>                       Dungeons;                                                // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		int64_t                                                    BaseTimeMin;                                             // 0x0070(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PlacedName;                                              // 0x0078(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               UnlockMemorialRecordRow;                                 // 0x0080(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeTimeLimitDungeonCharge
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemeTimeLimitDungeonCharge : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GroupUid;                                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChargeMinutes;                                           // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeTimeTable
	 * Size -> 0x0160 (FullSize[0x0168] - InheritedSize[0x0008])
	 */
	struct FTLSchemeTimeTable : public FTableRowBase
	{
	public:
		ETLTimeTableType                                           Type;                                                    // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X5IZ[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Title;                                                   // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5R4H[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     IconPath;                                                // 0x0030(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           position;                                                // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               MapIconTableKeys;                                        // 0x0050(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               FieldBossMapIconKeys;                                    // 0x0060(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               FieldBossRace;                                           // 0x0070(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               RewardTableKeys;                                         // 0x0080(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               SafeRewardTableKeys;                                     // 0x0090(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               GuildRewardTableKeys;                                    // 0x00A0(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                Description;                                             // 0x00B0(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                SafeTitle;                                               // 0x00C8(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                SafeDescription;                                         // 0x00E0(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                GuildTitle;                                              // 0x00F8(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                GuildDescription;                                        // 0x0110(0x0018) Edit, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               AddStringSystemTableRow;                                 // 0x0128(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               StartStringSystemTableRow;                               // 0x0138(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               WaypointFoTableRow;                                      // 0x0148(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               RegionGroupTableRow;                                     // 0x0158(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLTownInfo
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLTownInfo : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_AR7W[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayName;                                             // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                TransportDescription;                                    // 0x0028(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLTradePriceGroup
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLTradePriceGroup : public FTableRowBase
	{
	public:
		int32_t                                                    Num;                                                     // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ID;                                                      // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UX7D[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		double                                                     MinBasicUnitPrice;                                       // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		double                                                     MaxBasicUnitPrice;                                       // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LowerLimitRate;                                          // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UpperLimitRate;                                          // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLTradeCategory
	 * Size -> 0x0250 (FullSize[0x0258] - InheritedSize[0x0008])
	 */
	struct FTLTradeCategory : public FTableRowBase
	{
	public:
		class FText                                                UIName;                                                  // 0x0008(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<ETradeCategory>                                     SecondaryCategorys;                                      // 0x0020(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bShowCategoryAll;                                        // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3LUY[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateBrush                                         IconImageBrush;                                          // 0x0038(0x0088) Edit, NativeAccessSpecifierPublic
		struct FSlateBrush                                         HoverIconImageBrush;                                     // 0x00C0(0x0088) Edit, NativeAccessSpecifierPublic
		struct FSlateBrush                                         CheckIconImageBrush;                                     // 0x0148(0x0088) Edit, NativeAccessSpecifierPublic
		struct FSlateBrush                                         CheckHoverIconImageBrush;                                // 0x01D0(0x0088) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLJsonSchemeTreasureBox
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTLJsonSchemeTreasureBox : public FTableRowBase
	{
	public:
		struct FTLJsonGuid                                         Name;                                                    // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonGuid                                         fo_guid;                                                 // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLJsonVector                                       position;                                                // 0x0018(0x000C) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R8OH[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLJsonGuid                                         region_guid;                                             // 0x0028(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               ui_table_id;                                             // 0x0030(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeTreasureBoxArea
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeTreasureBoxArea : public FTableRowBase
	{
	public:
		struct FVector                                             MapIconPosition;                                         // 0x0008(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AreaRadius;                                              // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               AppearRegionGroup;                                       // 0x0018(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeTreasureBox
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLSchemeTreasureBox : public FTableRowBase
	{
	public:
		class FText                                                BoxTitle;                                                // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               MapIconTableKey;                                         // 0x0020(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               TreasrueBoxAreaRow;                                      // 0x0030(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		ETLTreasureBoxType                                         BoxType;                                                 // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JJPY[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLTribe
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLTribe : public FTableRowBase
	{
	public:
		int32_t                                                    UID;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UPYI[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                UIName;                                                  // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       ShowUIName;                                              // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ColorByRelation;                                         // 0x0029(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DisableInputKeyToBeSelfdefense;                          // 0x002A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CBSZ[0x5];                                   // 0x002B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeUIMobile
	 * Size -> 0x0000 (FullSize[0x00C0] - InheritedSize[0x00C0])
	 */
	struct FTLSchemeUIMobile : public FTLSchemeUI
	{	};

	/**
	 * ScriptStruct TLScheme.TLSchemeUIConsole
	 * Size -> 0x0000 (FullSize[0x00C0] - InheritedSize[0x00C0])
	 */
	struct FTLSchemeUIConsole : public FTLSchemeUI
	{	};

	/**
	 * ScriptStruct TLScheme.TLChildUIInfo
	 * Size -> 0x000C
	 */
	struct FTLChildUIInfo
	{
	public:
		class FName                                                ChildUIKey;                                              // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLUIGroupActionType                                       ActionType;                                              // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8A8H[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeUIGroup
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLSchemeUIGroup : public FTableRowBase
	{
	public:
		class FName                                                ParentUIKey;                                             // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FTLChildUIInfo>                              ChildUIInfos;                                            // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLWidgetCreationList
	 * Size -> 0x0018
	 */
	struct FTLWidgetCreationList
	{
	public:
		int32_t                                                    CreationSetIndex;                                        // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HNMI[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        WidgetRowNames;                                          // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLWidgetCreationChain
	 * Size -> 0x0018
	 */
	struct FTLWidgetCreationChain
	{
	public:
		ETLWidgetCreationSetType                                   CreationSetType;                                         // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QB34[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLWidgetCreationList>                       WidgetCreationChain;                                     // 0x0008(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLWidgetCreationSetData
	 * Size -> 0x0050
	 */
	struct FTLWidgetCreationSetData
	{
	public:
		TMap<ETLWidgetCreationSetType, struct FTLWidgetCreationChain> DataMap;                                                 // 0x0000(0x0050) Edit, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLWidgetList
	 * Size -> 0x0010
	 */
	struct FTLWidgetList
	{
	public:
		TArray<class FName>                                        WidgetRowNames;                                          // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeUISetting
	 * Size -> 0x00C0 (FullSize[0x00D0] - InheritedSize[0x0010])
	 */
	struct FTLSchemeUISetting : public FTLTableRowBase
	{
	public:
		TArray<struct FTLDataTableRowHandle>                       PreGameCutsceneTableDatas;                               // 0x0010(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		TMap<ETLUIPlatform, struct FTLWidgetCreationSetData>       WidgetCreationSetMap;                                    // 0x0020(0x0050) Edit, EditConst, NativeAccessSpecifierPublic
		unsigned char                                              WidgetPoolCreationDatas[0x10];                           // 0x0070(0x0010) UNKNOWN PROPERTY: ArrayProperty
		TMap<ETLUIPlatform, struct FTLWidgetList>                  IgnoreHiddenFlagWidgetMap;                               // 0x0080(0x0050) Edit, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoUISound
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLInfoUISound : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     UISoundEvent;                                            // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeUserCamera
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FTLSchemeUserCamera : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_G1G9[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                UserCameraSetName;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETLUserCameraType                                          UserCameraType;                                          // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4H3V[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                CameraPresetName;                                        // 0x001C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BQS1[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ETLCameraUserOption>                                CameraUserOptions;                                       // 0x0028(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		bool                                                       bRotateToTargetYaw;                                      // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R5IG[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BackViewRotationSpeed;                                   // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PlayConti;                                               // 0x0040(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoCodexDropItemTrace
	 * Size -> 0x0058
	 */
	struct FTLInfoCodexDropItemTrace
	{
	public:
		class FName                                                SocketName;                                              // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                UIName;                                                  // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                TraceUIName;                                             // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      MatchAngle;                                              // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DetectionAngle;                                          // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                OperationSocketName;                                     // 0x0040(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MatchCameraDistance;                                     // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            MatchCameraRotation;                                     // 0x004C(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLVirtualItem
	 * Size -> 0x00C0 (FullSize[0x02D0] - InheritedSize[0x0210])
	 */
	struct FTLVirtualItem : public FTLInfoItemLooks
	{
	public:
		int32_t                                                    UID;                                                     // 0x0210(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBool                                                      AutoPick;                                                // 0x0214(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemGrade                                                 ItemGrade;                                               // 0x0215(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              ItemCategory;                                            // 0x0216(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RK02[0x1];                                   // 0x0217(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               SystemMessage;                                           // 0x0218(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                UINotFindName;                                           // 0x0228(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                UINotFindDescription;                                    // 0x0240(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                UIFindName;                                              // 0x0258(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		class FText                                                UIFindDescription;                                       // 0x0270(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FRotator                                            DefaultModelRotation;                                    // 0x0288(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             RotationPovotOffset;                                     // 0x0294(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultInspectionViewDistance;                           // 0x02A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D5YM[0x4];                                   // 0x02A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTLInfoCodexDropItemTrace>                   TraceList;                                               // 0x02A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OnInspectionShowSoundEvent;                              // 0x02B8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLVoiceActorTableRow
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FTLVoiceActorTableRow : public FTableRowBase
	{	};

	/**
	 * ScriptStruct TLScheme.TLVolumeMaterial
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FTLVolumeMaterial : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_RI5O[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     Material;                                                // 0x0010(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VisibleDistance;                                         // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowTwoSided;                                            // 0x002C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CHJV[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWeaponCategorySkillSet
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemeWeaponCategorySkillSet : public FTableRowBase
	{
	public:
		EWeaponCategory                                            WeaponCategory;                                          // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P6F8[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SkillSetId;                                              // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z9S8[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWeaponCombination
	 * Size -> 0x0002
	 */
	struct FTLSchemeWeaponCombination
	{
	public:
		EItemCategory                                              MainHandCategory;                                        // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemCategory                                              OffHandCategory;                                         // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoWeaponMasteryStat
	 * Size -> 0x01D8 (FullSize[0x01E0] - InheritedSize[0x0008])
	 */
	struct FTLInfoWeaponMasteryStat : public FTableRowBase
	{
	public:
		int32_t                                                    Name;                                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ID;                                                      // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPcStatsType                                               StatType;                                                // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2XJ3[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    str;                                                     // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dex;                                                     // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Int;                                                     // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    per;                                                     // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_max;                                                  // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    hp_regen;                                                // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_max;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_regen;                                              // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_max;                                             // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stamina_regen;                                           // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    movement_speed_modifier;                                 // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_modifier;                                   // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_speed_modifier_off_hand;                          // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_range_modifier;                                   // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_attack;                                   // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_attack;                                   // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_attack;                                   // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_critical_defense;                                  // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_critical_defense;                                  // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_critical_defense;                                  // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_attack;                                     // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_attack;                                     // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_attack;                                     // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_double_defense;                                    // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_double_defense;                                    // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_double_defense;                                    // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power;                                            // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_power_off_hand;                                   // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    attack_rating;                                           // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_armor;                                             // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_armor;                                             // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_armor;                                             // 0x0094(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_chance;                                     // 0x0098(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    shield_block_chance_penetration;                         // 0x009C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_accuracy;                                          // 0x00A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_accuracy;                                          // 0x00A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_accuracy;                                          // 0x00A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    melee_evasion;                                           // 0x00AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    range_evasion;                                           // 0x00B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    magic_evasion;                                           // 0x00B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_reduction;                                        // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    damage_reduction_penetration;                            // 0x00BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_power_amplification;                               // 0x00C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_power_resistance;                                  // 0x00C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    buff_given_duration_modifier;                            // 0x00C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    debuff_taken_duration_modifier;                          // 0x00CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    fire_amplification;                                      // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    water_amplification;                                     // 0x00D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    wind_amplification;                                      // 0x00D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earth_amplification;                                     // 0x00DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    fire_resistance;                                         // 0x00E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    water_resistance;                                        // 0x00E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    wind_resistance;                                         // 0x00E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    earth_resistance;                                        // 0x00EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_amplification;                                   // 0x00F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    collide_resistance;                                      // 0x00F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_accuracy;                                         // 0x00F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_accuracy;                                           // 0x00FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_accuracy;                                  // 0x0100(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_accuracy;                                          // 0x0104(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_accuracy;                                        // 0x0108(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_accuracy;                                           // 0x010C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_accuracy;                                          // 0x0110(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_tolerance;                                        // 0x0114(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_tolerance;                                          // 0x0118(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_tolerance;                                 // 0x011C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_tolerance;                                         // 0x0120(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_tolerance;                                       // 0x0124(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_tolerance;                                          // 0x0128(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_tolerance;                                         // 0x012C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_exp_acquired;                                     // 0x0130(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_gold_drop;                                        // 0x0134(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_item_drop;                                        // 0x0138(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_resource_drop;                                    // 0x013C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    adjust_alignment_point_gain;                             // 0x0140(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    move_speed_modifier;                                     // 0x0144(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    heal_modifier;                                           // 0x0148(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    heal_taken_modifier;                                     // 0x014C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_heal_taken_modifier;                               // 0x0150(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cost_consumption_modifier;                               // 0x0154(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    belonging_weight_cap;                                    // 0x0158(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    skill_cooldown_modifier;                                 // 0x015C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    aura_effect_boost;                                       // 0x0160(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    aura_radius_modifier;                                    // 0x0164(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    critical_damage_dealt_modifier;                          // 0x0168(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_grankus_attack_power;                              // 0x016C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_einarden_attack_power;                             // 0x0170(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_dragon_attack_power;                               // 0x0174(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    demon_damage_attack_power;                               // 0x0178(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_undead_attack_power;                               // 0x017C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_creation_attack_power;                             // 0x0180(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_spirit_attack_power;                               // 0x0184(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_animal_attack_power;                               // 0x0188(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_insect_attack_power;                               // 0x018C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bonus_plant_attack_power;                                // 0x0190(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    grankus_damage_reduction;                                // 0x0194(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    einarden_damage_reduction;                               // 0x0198(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    dragon_damage_reduction;                                 // 0x019C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    demon_damage_reduction;                                  // 0x01A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    undead_damage_reduction;                                 // 0x01A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    creation_damage_reduction;                               // 0x01A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    spirit_damage_reduction;                                 // 0x01AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    animal_damage_reduction;                                 // 0x01B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    insect_damage_reduction;                                 // 0x01B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    plant_damage_reduction;                                  // 0x01B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaken_critical_attack;                                  // 0x01BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    stun_critical_attack;                                    // 0x01C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    petrification_critical_attack;                           // 0x01C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sleep_critical_attack;                                   // 0x01C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    silence_critical_attack;                                 // 0x01CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    bind_critical_attack;                                    // 0x01D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    blind_critical_attack;                                   // 0x01D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OZT2[0x8];                                   // 0x01D8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLInfoWeaponMasteryLevel
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FTLInfoWeaponMasteryLevel : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7V1U[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    point_threshold;                                         // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWeaponMasteryPassiveSkill
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemeWeaponMasteryPassiveSkill : public FTableRowBase
	{
	public:
		int32_t                                                    Name;                                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                passive_skill_id;                                        // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQ1U[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWeaponMasteryPassiveSkillProbability
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FTLSchemeWeaponMasteryPassiveSkillProbability : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                passive_skill_id1;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                passive_skill_id2;                                       // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                passive_skill_id3;                                       // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                passive_skill_id4;                                       // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                passive_skill_id5;                                       // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LFI9[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWeaponMasteryPath
	 * Size -> 0x0058 (FullSize[0x0060] - InheritedSize[0x0008])
	 */
	struct FTLSchemeWeaponMasteryPath : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                main_hand_weapon_category;                               // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                off_hand_weapon_category;                                // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                stat_probability1;                                       // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                passive_skill_probability1;                              // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                stat_probability2;                                       // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                passive_skill_probability2;                              // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                stat_probability3;                                       // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                passive_skill_probability3;                              // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint64_t                                                   upgrade_gold;                                            // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint64_t                                                   reset_gold;                                              // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLWeaponMasteryStatUnit
	 * Size -> 0x0038
	 */
	struct FTLWeaponMasteryStatUnit
	{
	public:
		EItemCategory                                              WeaponCategory;                                          // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EEL8[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LineIndex;                                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NodeIndex;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZT55[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              StatIconPath[0x28];                                      // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWeaponMasteryStatIconPath
	 * Size -> 0x0038 (FullSize[0x0048] - InheritedSize[0x0010])
	 */
	struct FTLSchemeWeaponMasteryStatIconPath : public FTLTableRowBase
	{
	public:
		struct FTLWeaponMasteryStatUnit                            StatInfoGroup;                                           // 0x0010(0x0038) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWeaponMasteryStatProbability
	 * Size -> 0x00E0 (FullSize[0x00E8] - InheritedSize[0x0008])
	 */
	struct FTLSchemeWeaponMasteryStatProbability : public FTableRowBase
	{
	public:
		class FName                                                Name;                                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id1;                                           // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id2;                                           // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id3;                                           // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id4;                                           // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id5;                                           // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id6;                                           // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id7;                                           // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id8;                                           // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id9;                                           // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id10;                                          // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id11;                                          // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id12;                                          // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id13;                                          // 0x0070(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id14;                                          // 0x0078(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id15;                                          // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id16;                                          // 0x0088(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id17;                                          // 0x0090(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id18;                                          // 0x0098(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id19;                                          // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id20;                                          // 0x00A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id21;                                          // 0x00B0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id22;                                          // 0x00B8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id23;                                          // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id24;                                          // 0x00C8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                slot_stat_id25;                                          // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SNRI[0x10];                                  // 0x00D8(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWeaponRecommendStat
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeWeaponRecommendStat : public FTableRowBase
	{
	public:
		struct FTLWeaponSet                                        WeaponSet;                                               // 0x0008(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SVND[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EPcStatsType>                                       RecommendStatList;                                       // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWeatherSchedule
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLSchemeWeatherSchedule : public FTableRowBase
	{
	public:
		TArray<EWeatherType>                                       WeatherScheduleArray;                                    // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoWindModifier
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FTLInfoWindModifier : public FTableRowBase
	{
	public:
		int32_t                                                    BonusRangeCm;                                            // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpeedModifierBasisPoint;                                 // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9UE6[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWindScheduleRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTLSchemeWindScheduleRow : public FTableRowBase
	{
	public:
		ETLWindDirection                                           Direction;                                               // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L4U0[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Speed;                                                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWindSchedule
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTLSchemeWindSchedule : public FTableRowBase
	{
	public:
		TArray<class FString>                                      WindScheduleRawArray;                                    // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
		TArray<struct FTLSchemeWindScheduleRow>                    WindScheduleArray;                                       // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLInfoWorldBossTargetPartsInfo
	 * Size -> 0x0030
	 */
	struct FTLInfoWorldBossTargetPartsInfo
	{
	public:
		struct FSoftObjectPath                                     PartsIcon;                                               // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                PartsName;                                               // 0x0018(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct TLScheme.TLSchemeWorldBossLooks
	 * Size -> 0x0228 (FullSize[0x0230] - InheritedSize[0x0008])
	 */
	struct FTLSchemeWorldBossLooks : public FTableRowBase
	{
	public:
		class FText                                                WorldBossTitle;                                          // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     WorldBossEventIcon;                                      // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FText                                                PrepareDescription;                                      // 0x0038(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                ProgressDescription;                                     // 0x0050(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                CompleteDescription;                                     // 0x0068(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                TargetName;                                              // 0x0080(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<struct FTLInfoWorldBossTargetPartsInfo>             TargetPartsInfo;                                         // 0x0098(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PrepareMusicPath;                                        // 0x00A8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PrepareAudioTag;                                         // 0x00C0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ProgressMusicPath;                                       // 0x00C8(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ProgressAudioTag;                                        // 0x00E0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               HelpTableRow;                                            // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               TerritoryTableKey;                                       // 0x00F8(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FTLDataTableRowHandle                               MapIconTableKey;                                         // 0x0108(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             MapIconPosition;                                         // 0x0118(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_215W[0x4];                                   // 0x0124(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTLDataTableRowHandle                               ShapeLineColorKey;                                       // 0x0128(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		class FText                                                GoalText;                                                // 0x0138(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                GoalGuideText;                                           // 0x0150(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FText                                                UIRankRewardTitle;                                       // 0x0168(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<class FName>                                        RankRewardItems;                                         // 0x0180(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                RankRewardDescription;                                   // 0x0190(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                UIEffortRewardTitle;                                     // 0x01A8(0x0018) Edit, NativeAccessSpecifierPublic
		TArray<class FName>                                        EffortRewardItems;                                       // 0x01C0(0x0010) Edit, ZeroConstructor, NativeAccessSpecifierPublic
		class FText                                                EffortRewardDescription;                                 // 0x01D0(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                UIResultTitle;                                           // 0x01E8(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                UIResultDescription;                                     // 0x0200(0x0018) Edit, NativeAccessSpecifierPublic
		class FText                                                UIRewardTitle;                                           // 0x0218(0x0018) Edit, NativeAccessSpecifierPublic
	};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
